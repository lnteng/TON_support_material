;;
;; Header files for PunkVesting
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_cell
(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_dict_get_uint_cell
cell __tact_dict_get_uint_cell(cell d, int kl, int k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $PutHoldersMsg$_load
(slice, ((int, cell))) $PutHoldersMsg$_load(slice sc_0) inline;

;; $SetPeriodsMsg$_load
(slice, ((int, int, cell))) $SetPeriodsMsg$_load(slice sc_0) inline;

;; $SetOwnerWallet$_load
(slice, ((slice))) $SetOwnerWallet$_load(slice sc_0) inline;

;; $SetVestingRound$_load
(slice, ((int))) $SetVestingRound$_load(slice sc_0) inline;

;; $TopupBalance$_load
(slice, (tuple)) $TopupBalance$_load(slice sc_0) inline;

;; $Balance$_store
builder $Balance$_store(builder build_0, (int, int) v) inline;

;; $Balance$_store_cell
cell $Balance$_store_cell((int, int) v) inline;

;; $Balance$_load
(slice, ((int, int))) $Balance$_load(slice sc_0) inline;

;; $Balance$_as_optional
tuple $Balance$_as_optional((int, int) v) inline;

;; $Balance$_load_opt
tuple $Balance$_load_opt(cell cl) inline;

;; $HolderDto$_load
(slice, ((slice, int))) $HolderDto$_load(slice sc_0) inline;

;; $HolderDto$_as_optional
tuple $HolderDto$_as_optional((slice, int) v) inline;

;; $HolderDto$_load_opt
tuple $HolderDto$_load_opt(cell cl) inline;

;; $Period$_store
builder $Period$_store(builder build_0, (int, int) v) inline;

;; $Period$_store_cell
cell $Period$_store_cell((int, int) v) inline;

;; $Period$_load
(slice, ((int, int))) $Period$_load(slice sc_0) inline;

;; $Period$_as_optional
tuple $Period$_as_optional((int, int) v) inline;

;; $Period$_load_opt
tuple $Period$_load_opt(cell cl) inline;

;; $PunkVesting$_store
builder $PunkVesting$_store(builder build_0, (slice, slice, int, cell, int, cell, int, int) v) inline;

;; $PunkVesting$_load
(slice, ((slice, slice, int, cell, int, cell, int, int))) $PunkVesting$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $Balance$_get_starting
_ $Balance$_get_starting((int, int) v) inline;

;; $Balance$_get_current
_ $Balance$_get_current((int, int) v) inline;

;; $Balance$_not_null
((int, int)) $Balance$_not_null(tuple v) inline;

;; $HolderDto$_not_null
((slice, int)) $HolderDto$_not_null(tuple v) inline;

;; $Period$_to_tuple
tuple $Period$_to_tuple(((int, int)) v) inline;

;; $Period$_not_null
((int, int)) $Period$_not_null(tuple v) inline;

;; $Period$_to_opt_tuple
tuple $Period$_to_opt_tuple(tuple v) inline;

;; $HolderInfo$_to_external
(int, int, int, tuple) $HolderInfo$_to_external(((int, int, int, tuple)) v) inline;

;; $Period$_get_startTime
_ $Period$_get_startTime((int, int) v) inline;

;; $Period$_get_percent
_ $Period$_get_percent((int, int) v) inline;

;; $PeriodsSet$_to_external
(int, cell) $PeriodsSet$_to_external(((int, cell)) v) inline;

;; $PunkVesting$_contract_init
(slice, slice, int, cell, int, cell, int, int) $PunkVesting$_contract_init() impure inline_ref;

;; $PunkVesting$_contract_load
(slice, slice, int, cell, int, cell, int, int) $PunkVesting$_contract_load() impure inline_ref;

;; $PunkVesting$_contract_store
() $PunkVesting$_contract_store((slice, slice, int, cell, int, cell, int, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_getTEP74TranserMessage
cell $global_getTEP74TranserMessage(int $amount, slice $to) impure inline_ref;

;; $Address$_fun_getHash
int $Address$_fun_getHash(slice $self) impure inline_ref;

;; $PunkVesting$_fun_getCurrentPeriod_internal
((slice, slice, int, cell, int, cell, int, int), tuple) $PunkVesting$_fun_getCurrentPeriod_internal((slice, slice, int, cell, int, cell, int, int) $self) impure inline_ref;

;; $PunkVesting$_fun_getHolderBalance
((slice, slice, int, cell, int, cell, int, int), tuple) $PunkVesting$_fun_getHolderBalance((slice, slice, int, cell, int, cell, int, int) $self, int $key) impure inline_ref;

;; $PunkVesting$_fun_getAvailableOnPeriod
((slice, slice, int, cell, int, cell, int, int), int) $PunkVesting$_fun_getAvailableOnPeriod((slice, slice, int, cell, int, cell, int, int) $self, int $starting) impure inline_ref;

;; $Balance$_constructor_starting_current
((int, int)) $Balance$_constructor_starting_current(int starting, int current) inline;

;; $HolderInfo$_constructor_common_current_available_currentPeriod
((int, int, int, tuple)) $HolderInfo$_constructor_common_current_available_currentPeriod(int common, int current, int available, tuple currentPeriod) inline;

;; $PunkVesting$_fun_getHolderInfo_internal
((slice, slice, int, cell, int, cell, int, int), (int, int, int, tuple)) $PunkVesting$_fun_getHolderInfo_internal((slice, slice, int, cell, int, cell, int, int) $self, slice $adr) impure inline_ref;

;; $PunkVesting$_fun_getHolderInfo
((slice, slice, int, cell, int, cell, int, int), (int, int, int, tuple)) $PunkVesting$_fun_getHolderInfo((slice, slice, int, cell, int, cell, int, int) $self, slice $adr) impure inline_ref;

;; $PeriodsSet$_constructor_count_periods
((int, cell)) $PeriodsSet$_constructor_count_periods(int count, cell periods) inline;

;; $PunkVesting$_fun_Periods
((slice, slice, int, cell, int, cell, int, int), (int, cell)) $PunkVesting$_fun_Periods((slice, slice, int, cell, int, cell, int, int) $self) impure inline_ref;

;; $PunkVesting$_fun_AllHolders
((slice, slice, int, cell, int, cell, int, int), cell) $PunkVesting$_fun_AllHolders((slice, slice, int, cell, int, cell, int, int) $self) impure inline_ref;

;; $PunkVesting$_fun_HoldersCount
((slice, slice, int, cell, int, cell, int, int), int) $PunkVesting$_fun_HoldersCount((slice, slice, int, cell, int, cell, int, int) $self) impure inline_ref;

;; $PunkVesting$_fun_JettonWallet
((slice, slice, int, cell, int, cell, int, int), slice) $PunkVesting$_fun_JettonWallet((slice, slice, int, cell, int, cell, int, int) $self) impure inline_ref;

;; $PunkVesting$_fun_testPercent
((slice, slice, int, cell, int, cell, int, int), int) $PunkVesting$_fun_testPercent((slice, slice, int, cell, int, cell, int, int) $self, int $x, int $y, int $z) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $PunkVesting$_fun_forward
((slice, slice, int, cell, int, cell, int, int), ()) $PunkVesting$_fun_forward((slice, slice, int, cell, int, cell, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $PunkVesting$_fun_notify
((slice, slice, int, cell, int, cell, int, int), ()) $PunkVesting$_fun_notify((slice, slice, int, cell, int, cell, int, int) $self, cell $body) impure inline;

;; $PunkVesting$_fun_requireOwner
((slice, slice, int, cell, int, cell, int, int), ()) $PunkVesting$_fun_requireOwner((slice, slice, int, cell, int, cell, int, int) $self) impure inline_ref;

;; $PunkVesting$_fun_owner
((slice, slice, int, cell, int, cell, int, int), slice) $PunkVesting$_fun_owner((slice, slice, int, cell, int, cell, int, int) $self) impure inline_ref;

;; $Period$_constructor_startTime_percent
((int, int)) $Period$_constructor_startTime_percent(int startTime, int percent) inline;

;; $SendParameters$_constructor_to_body_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_body_value_mode(slice to, cell body, int value, int mode) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
