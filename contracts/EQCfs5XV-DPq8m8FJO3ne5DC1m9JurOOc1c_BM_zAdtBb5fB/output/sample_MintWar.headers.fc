;;
;; Header files for MintWar
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_prepare_random
() __tact_prepare_random() impure inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_slice_uint
(cell, ()) __tact_dict_set_slice_uint(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_dict_get_slice_uint
int __tact_dict_get_slice_uint(cell d, int kl, slice k, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $MintEvent$_store
builder $MintEvent$_store(builder build_0, (slice, int, int, int) v) inline;

;; $MintEvent$_store_cell
cell $MintEvent$_store_cell((slice, int, int, int) v) inline;

;; $MintJetton$_load
(slice, ((int))) $MintJetton$_load(slice sc_0) inline;

;; $MintWar$_store
builder $MintWar$_store(builder build_0, (slice, int, int, int, int, cell, cell) v) inline;

;; $MintWar$_load
(slice, ((slice, int, int, int, int, cell, cell))) $MintWar$_load(slice sc_0) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $AccountState$_to_external
(int, int, int, int) $AccountState$_to_external(((int, int, int, int)) v) inline;

;; $MintWar$init$_load
(slice, ((slice, int, int))) $MintWar$init$_load(slice sc_0) inline;

;; $MintWar$_contract_init
(slice, int, int, int, int, cell, cell) $MintWar$_contract_init(slice $admin, int $mintStartAt, int $mintEndAt) impure inline_ref;

;; $MintWar$_contract_load
(slice, int, int, int, int, cell, cell) $MintWar$_contract_load() impure inline_ref;

;; $MintWar$_contract_store
() $MintWar$_contract_store((slice, int, int, int, int, cell, cell) v) impure inline;

;; $global_random
int $global_random(int $min, int $max) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $MintWar$_fun_get_points_by_address
((slice, int, int, int, int, cell, cell), int) $MintWar$_fun_get_points_by_address((slice, int, int, int, int, cell, cell) $self, slice $address) impure inline_ref;

;; $MintWar$_fun_get_shares_by_address
((slice, int, int, int, int, cell, cell), int) $MintWar$_fun_get_shares_by_address((slice, int, int, int, int, cell, cell) $self, slice $address) impure inline_ref;

;; $MintWar$_fun_get_totalPoints
((slice, int, int, int, int, cell, cell), int) $MintWar$_fun_get_totalPoints((slice, int, int, int, int, cell, cell) $self) impure inline_ref;

;; $MintWar$_fun_get_all_accounts
((slice, int, int, int, int, cell, cell), cell) $MintWar$_fun_get_all_accounts((slice, int, int, int, int, cell, cell) $self) impure inline_ref;

;; $AccountState$_constructor_points_fees_totalPoints_totalFees
((int, int, int, int)) $AccountState$_constructor_points_fees_totalPoints_totalFees(int points, int fees, int totalPoints, int totalFees) inline;

;; $MintWar$_fun_get_account_state
((slice, int, int, int, int, cell, cell), (int, int, int, int)) $MintWar$_fun_get_account_state((slice, int, int, int, int, cell, cell) $self, slice $address) impure inline_ref;

;; $MintEvent$_constructor_sender_value_rate_points
((slice, int, int, int)) $MintEvent$_constructor_sender_value_rate_points(slice sender, int value, int rate, int points) inline;

;; $SendParameters$_constructor_to_value_bounce_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode(slice to, int value, int bounce, int mode) inline;
