cell pack_jetton_wallet_data(int balance, slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
  return begin_cell()
          .store_coins(balance)
          .store_slice(owner_address)
          .store_slice(jetton_master_address)
          .store_ref(jetton_wallet_code)
        .end_cell();
}

cell pack_jetton_minter_data(int timestamp, int total_suppy, slice admin_address, cell content, cell jetton_wallet_code) inline {
  return begin_cell()
          .store_coins(total_suppy)
          .store_slice(admin_address)
          .store_ref(content)
          .store_ref(jetton_wallet_code)
          .store_uint(timestamp, 64)
        .end_cell();
}

cell calculate_jetton_wallet_state_init(slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
  return begin_cell()
          .store_uint(0, 2)
          .store_dict(jetton_wallet_code)
          .store_dict(pack_jetton_wallet_data(0, owner_address, jetton_master_address, jetton_wallet_code))
          .store_uint(0, 1)
         .end_cell();
}

cell calculate_jetton_minter_state_init(int timestamp, int total_supply, slice admin_address, cell content, cell jetton_wallet_code, cell jetton_minter_code) inline {
  return begin_cell()
          .store_uint(0, 2)
          .store_dict(jetton_minter_code)
          .store_dict(pack_jetton_minter_data(timestamp, total_supply, admin_address, content, jetton_wallet_code))
          .store_uint(0, 1)
         .end_cell();
}

slice calculate_jetton_wallet_address(cell state_init) inline {
  return begin_cell().store_uint(4, 3)
                     .store_int(workchain(), 8)
                     .store_uint(cell_hash(state_init), 256)
                     .end_cell()
                     .begin_parse();
}

slice calculate_jetton_minter_address(cell state_init) inline {
  return begin_cell().store_uint(4, 3)
                     .store_int(workchain(), 8)
                     .store_uint(cell_hash(state_init), 256)
                     .end_cell()
                     .begin_parse();
}

slice calculate_user_jetton_wallet_address(slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
  return calculate_jetton_wallet_address(calculate_jetton_wallet_state_init(owner_address, jetton_master_address, jetton_wallet_code));
}
