;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

((cell, cell)) $StateInit$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (cell vvv'code, cell vvv'data) = __tact_tuple_destroy_2(v);
    return (vvv'code, vvv'data);
}

;;
;; Type: Context
;; TLB: _ bounced:bool sender:address value:int257 raw:^slice = Context
;;

_ $Context$_get_sender((int, slice, int, slice) v) inline {
    var (v'bounced, v'sender, v'value, v'raw) = v;
    return v'sender;
}

_ $Context$_get_value((int, slice, int, slice) v) inline {
    var (v'bounced, v'sender, v'value, v'raw) = v;
    return v'value;
}

;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce(slice to, int value, int mode, int bounce) inline {
    return (bounce, to, value, mode, null(), null(), null());
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_bounce_mode_body(int value, slice to, int bounce, int mode, cell body) inline {
    return (bounce, to, value, mode, body, null(), null());
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_mode_body_bounce(int value, slice to, int mode, cell body, int bounce) inline {
    return (bounce, to, value, mode, body, null(), null());
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

;;
;; Type: Deploy
;; Header: 0x946a98b6
;; TLB: deploy#946a98b6 queryId:uint64 = Deploy
;;

(slice, ((int))) $Deploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: DeployOk
;; Header: 0xaff90f57
;; TLB: deploy_ok#aff90f57 queryId:uint64 = DeployOk
;;

builder $DeployOk$_store(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell $DeployOk$_store_cell((int) v) inline {
    return $DeployOk$_store(begin_cell(), v).end_cell();
}

((int)) $DeployOk$_constructor_queryId(int queryId) inline {
    return (queryId);
}

;;
;; Type: ChangeOwner
;; Header: 0x819dbe99
;; TLB: change_owner#819dbe99 queryId:uint64 newOwner:address = ChangeOwner
;;

(slice, ((int, slice))) $ChangeOwner$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2174598809);
    var v'queryId = sc_0~load_uint(64);
    var v'newOwner = sc_0~__tact_load_address();
    return (sc_0, (v'queryId, v'newOwner));
}

;;
;; Type: ChangeOwnerOk
;; Header: 0x327b2b4a
;; TLB: change_owner_ok#327b2b4a queryId:uint64 newOwner:address = ChangeOwnerOk
;;

builder $ChangeOwnerOk$_store(builder build_0, (int, slice) v) inline {
    var (v'queryId, v'newOwner) = v;
    build_0 = store_uint(build_0, 846932810, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    build_0 = __tact_store_address(build_0, v'newOwner);
    return build_0;
}

cell $ChangeOwnerOk$_store_cell((int, slice) v) inline {
    return $ChangeOwnerOk$_store(begin_cell(), v).end_cell();
}

((int, slice)) $ChangeOwnerOk$_constructor_queryId_newOwner(int queryId, slice newOwner) inline {
    return (queryId, newOwner);
}

;;
;; Type: TokenTransfer
;; Header: 0x0f8a7ea5
;; TLB: token_transfer#0f8a7ea5 queryId:uint64 amount:coins destination:address response_destination:address custom_payload:Maybe ^cell forward_ton_amount:coins forward_payload:remainder<slice> = TokenTransfer
;;

builder $TokenTransfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref {
    var (v'queryId, v'amount, v'destination, v'response_destination, v'custom_payload, v'forward_ton_amount, v'forward_payload) = v;
    build_0 = store_uint(build_0, 260734629, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    build_0 = build_0.store_coins(v'amount);
    build_0 = __tact_store_address(build_0, v'destination);
    build_0 = __tact_store_address(build_0, v'response_destination);
    build_0 = ~ null?(v'custom_payload) ? build_0.store_int(true, 1).store_ref(v'custom_payload) : build_0.store_int(false, 1);
    build_0 = build_0.store_coins(v'forward_ton_amount);
    build_0 = build_0.store_slice(v'forward_payload);
    return build_0;
}

cell $TokenTransfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline {
    return $TokenTransfer$_store(begin_cell(), v).end_cell();
}

((int, int, slice, slice, cell, int, slice)) $TokenTransfer$_constructor_queryId_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload(int queryId, int amount, slice destination, slice response_destination, cell custom_payload, int forward_ton_amount, slice forward_payload) inline {
    return (queryId, amount, destination, response_destination, custom_payload, forward_ton_amount, forward_payload);
}

;;
;; Type: TransferNotification
;; Header: 0x7362d09c
;; TLB: transfer_notification#7362d09c queryId:uint64 amount:coins sender:address forwardPayload:remainder<slice> = TransferNotification
;;

(slice, ((int, int, slice, slice))) $TransferNotification$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1935855772);
    var v'queryId = sc_0~load_uint(64);
    var v'amount = sc_0~load_coins();
    var v'sender = sc_0~__tact_load_address();
    var v'forwardPayload = sc_0;
    return (sc_0, (v'queryId, v'amount, v'sender, v'forwardPayload));
}

;;
;; Type: Excesses
;; Header: 0xd53276db
;; TLB: excesses#d53276db queryId:uint64 = Excesses
;;

(slice, ((int))) $Excesses$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3576854235);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: Participate
;; Header: 0xe2e83b65
;; TLB: participate#e2e83b65 amount:coins = Participate
;;

(slice, ((int))) $Participate$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3806870373);
    var v'amount = sc_0~load_coins();
    return (sc_0, (v'amount));
}

;;
;; Type: LauncherConfig
;; TLB: _ min_total_ton:coins max_total_ton:coins min_ton_per_tx:coins max_ton_per_user:coins tokens_per_ton:coins token_wallet_address:address unsold_token_refund_address:address start_time:uint32 end_time:uint32 = LauncherConfig
;;

builder $LauncherConfig$_store(builder build_0, (int, int, int, int, int, slice, slice, int, int) v) inline_ref {
    var (v'min_total_ton, v'max_total_ton, v'min_ton_per_tx, v'max_ton_per_user, v'tokens_per_ton, v'token_wallet_address, v'unsold_token_refund_address, v'start_time, v'end_time) = v;
    build_0 = build_0.store_coins(v'min_total_ton);
    build_0 = build_0.store_coins(v'max_total_ton);
    build_0 = build_0.store_coins(v'min_ton_per_tx);
    build_0 = build_0.store_coins(v'max_ton_per_user);
    build_0 = build_0.store_coins(v'tokens_per_ton);
    build_0 = __tact_store_address(build_0, v'token_wallet_address);
    var build_1 = begin_cell();
    build_1 = __tact_store_address(build_1, v'unsold_token_refund_address);
    build_1 = build_1.store_uint(v'start_time, 32);
    build_1 = build_1.store_uint(v'end_time, 32);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((int, int, int, int, int, slice, slice, int, int))) $LauncherConfig$_load(slice sc_0) inline_ref {
    var v'min_total_ton = sc_0~load_coins();
    var v'max_total_ton = sc_0~load_coins();
    var v'min_ton_per_tx = sc_0~load_coins();
    var v'max_ton_per_user = sc_0~load_coins();
    var v'tokens_per_ton = sc_0~load_coins();
    var v'token_wallet_address = sc_0~__tact_load_address();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'unsold_token_refund_address = sc_1~__tact_load_address();
    var v'start_time = sc_1~load_uint(32);
    var v'end_time = sc_1~load_uint(32);
    return (sc_0, (v'min_total_ton, v'max_total_ton, v'min_ton_per_tx, v'max_ton_per_user, v'tokens_per_ton, v'token_wallet_address, v'unsold_token_refund_address, v'start_time, v'end_time));
}

(int, int, int, int, int, slice, slice, int, int) $LauncherConfig$_to_external(((int, int, int, int, int, slice, slice, int, int)) v) inline {
    var (v'min_total_ton, v'max_total_ton, v'min_ton_per_tx, v'max_ton_per_user, v'tokens_per_ton, v'token_wallet_address, v'unsold_token_refund_address, v'start_time, v'end_time) = v; 
    return (v'min_total_ton, v'max_total_ton, v'min_ton_per_tx, v'max_ton_per_user, v'tokens_per_ton, v'token_wallet_address, v'unsold_token_refund_address, v'start_time, v'end_time);
}

;;
;; Type: SetLauncherConfig
;; Header: 0xc9d50116
;; TLB: set_launcher_config#c9d50116 config:LauncherConfig{min_total_ton:coins,max_total_ton:coins,min_ton_per_tx:coins,max_ton_per_user:coins,tokens_per_ton:coins,token_wallet_address:address,unsold_token_refund_address:address,start_time:uint32,end_time:uint32} = SetLauncherConfig
;;

(slice, (((int, int, int, int, int, slice, slice, int, int)))) $SetLauncherConfig$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3386179862);
    var v'config = sc_0~$LauncherConfig$_load();
    return (sc_0, (v'config));
}

;;
;; Type: SetClaimStartTime
;; Header: 0x5990fd56
;; TLB: set_claim_start_time#5990fd56 time:uint32 = SetClaimStartTime
;;

(slice, ((int))) $SetClaimStartTime$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1502674262);
    var v'time = sc_0~load_uint(32);
    return (sc_0, (v'time));
}

;;
;; Type: PoolConfig
;; TLB: _ address:address share:uint32 = PoolConfig
;;

builder $PoolConfig$_store(builder build_0, (slice, int) v) inline {
    var (v'address, v'share) = v;
    build_0 = __tact_store_address(build_0, v'address);
    build_0 = build_0.store_uint(v'share, 32);
    return build_0;
}

cell $PoolConfig$_store_cell((slice, int) v) inline {
    return $PoolConfig$_store(begin_cell(), v).end_cell();
}

(slice, ((slice, int))) $PoolConfig$_load(slice sc_0) inline {
    var v'address = sc_0~__tact_load_address();
    var v'share = sc_0~load_uint(32);
    return (sc_0, (v'address, v'share));
}

tuple $PoolConfig$_as_optional((slice, int) v) inline {
    var (v'address, v'share) = v;
    return __tact_tuple_create_2(v'address, v'share);
}

tuple $PoolConfig$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $PoolConfig$_as_optional(sc~$PoolConfig$_load());
}

_ $PoolConfig$_get_address((slice, int) v) inline {
    var (v'address, v'share) = v;
    return v'address;
}

_ $PoolConfig$_get_share((slice, int) v) inline {
    var (v'address, v'share) = v;
    return v'share;
}

((slice, int)) $PoolConfig$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (slice vvv'address, int vvv'share) = __tact_tuple_destroy_2(v);
    return (vvv'address, vvv'share);
}

(slice, int) $PoolConfig$_to_external(((slice, int)) v) inline {
    var (v'address, v'share) = v; 
    return (v'address, v'share);
}

((slice, int)) $PoolConfig$_constructor_address_share(slice address, int share) inline {
    return (address, share);
}

;;
;; Type: AddDistributionPool
;; Header: 0x4b409006
;; TLB: add_distribution_pool#4b409006 config:PoolConfig{address:address,share:uint32} = AddDistributionPool
;;

(slice, (((slice, int)))) $AddDistributionPool$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1262522374);
    var v'config = sc_0~$PoolConfig$_load();
    return (sc_0, (v'config));
}

;;
;; Type: DeleteDistributionPool
;; Header: 0xfd11e1df
;; TLB: delete_distribution_pool#fd11e1df index:uint32 = DeleteDistributionPool
;;

(slice, ((int))) $DeleteDistributionPool$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4245807583);
    var v'index = sc_0~load_uint(32);
    return (sc_0, (v'index));
}

;;
;; Type: ModifyDistributionPool
;; Header: 0xf023536f
;; TLB: modify_distribution_pool#f023536f index:uint32 config:PoolConfig{address:address,share:uint32} = ModifyDistributionPool
;;

(slice, ((int, (slice, int)))) $ModifyDistributionPool$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4028846959);
    var v'index = sc_0~load_uint(32);
    var v'config = sc_0~$PoolConfig$_load();
    return (sc_0, (v'index, v'config));
}

;;
;; Type: ManualTransferNotification
;; Header: 0xcece9a6a
;; TLB: manual_transfer_notification#cece9a6a amount:coins = ManualTransferNotification
;;

(slice, ((int))) $ManualTransferNotification$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3469646442);
    var v'amount = sc_0~load_coins();
    return (sc_0, (v'amount));
}

;;
;; Type: ParticipatedEvent
;; Header: 0x52a7a325
;; TLB: participated_event#52a7a325 sender:address amount:coins = ParticipatedEvent
;;

builder $ParticipatedEvent$_store(builder build_0, (slice, int) v) inline {
    var (v'sender, v'amount) = v;
    build_0 = store_uint(build_0, 1386717989, 32);
    build_0 = __tact_store_address(build_0, v'sender);
    build_0 = build_0.store_coins(v'amount);
    return build_0;
}

cell $ParticipatedEvent$_store_cell((slice, int) v) inline {
    return $ParticipatedEvent$_store(begin_cell(), v).end_cell();
}

((slice, int)) $ParticipatedEvent$_constructor_sender_amount(slice sender, int amount) inline {
    return (sender, amount);
}

;;
;; Type: ClaimedEvent
;; Header: 0x1bcfcd4d
;; TLB: claimed_event#1bcfcd4d sender:address amount:coins = ClaimedEvent
;;

builder $ClaimedEvent$_store(builder build_0, (slice, int) v) inline {
    var (v'sender, v'amount) = v;
    build_0 = store_uint(build_0, 466603341, 32);
    build_0 = __tact_store_address(build_0, v'sender);
    build_0 = build_0.store_coins(v'amount);
    return build_0;
}

cell $ClaimedEvent$_store_cell((slice, int) v) inline {
    return $ClaimedEvent$_store(begin_cell(), v).end_cell();
}

((slice, int)) $ClaimedEvent$_constructor_sender_amount(slice sender, int amount) inline {
    return (sender, amount);
}

;;
;; Type: RefundedEvent
;; Header: 0x756e31b8
;; TLB: refunded_event#756e31b8 sender:address amount:coins = RefundedEvent
;;

builder $RefundedEvent$_store(builder build_0, (slice, int) v) inline {
    var (v'sender, v'amount) = v;
    build_0 = store_uint(build_0, 1970155960, 32);
    build_0 = __tact_store_address(build_0, v'sender);
    build_0 = build_0.store_coins(v'amount);
    return build_0;
}

cell $RefundedEvent$_store_cell((slice, int) v) inline {
    return $RefundedEvent$_store(begin_cell(), v).end_cell();
}

((slice, int)) $RefundedEvent$_constructor_sender_amount(slice sender, int amount) inline {
    return (sender, amount);
}

;;
;; Type: LauncherConfigSetEvent
;; Header: 0x023abed5
;; TLB: launcher_config_set_event#023abed5 config:LauncherConfig{min_total_ton:coins,max_total_ton:coins,min_ton_per_tx:coins,max_ton_per_user:coins,tokens_per_ton:coins,token_wallet_address:address,unsold_token_refund_address:address,start_time:uint32,end_time:uint32} = LauncherConfigSetEvent
;;

builder $LauncherConfigSetEvent$_store(builder build_0, ((int, int, int, int, int, slice, slice, int, int)) v) inline {
    var ((v'config'min_total_ton, v'config'max_total_ton, v'config'min_ton_per_tx, v'config'max_ton_per_user, v'config'tokens_per_ton, v'config'token_wallet_address, v'config'unsold_token_refund_address, v'config'start_time, v'config'end_time)) = v;
    build_0 = store_uint(build_0, 37404373, 32);
    build_0 = $LauncherConfig$_store(build_0, (v'config'min_total_ton, v'config'max_total_ton, v'config'min_ton_per_tx, v'config'max_ton_per_user, v'config'tokens_per_ton, v'config'token_wallet_address, v'config'unsold_token_refund_address, v'config'start_time, v'config'end_time));
    return build_0;
}

cell $LauncherConfigSetEvent$_store_cell(((int, int, int, int, int, slice, slice, int, int)) v) inline {
    return $LauncherConfigSetEvent$_store(begin_cell(), v).end_cell();
}

(((int, int, int, int, int, slice, slice, int, int))) $LauncherConfigSetEvent$_constructor_config((int, int, int, int, int, slice, slice, int, int) config) inline {
    return (config);
}

;;
;; Type: ClaimStartTimeSetEvent
;; Header: 0xc4bdb18b
;; TLB: claim_start_time_set_event#c4bdb18b time:uint32 = ClaimStartTimeSetEvent
;;

builder $ClaimStartTimeSetEvent$_store(builder build_0, (int) v) inline {
    var (v'time) = v;
    build_0 = store_uint(build_0, 3300766091, 32);
    build_0 = build_0.store_uint(v'time, 32);
    return build_0;
}

cell $ClaimStartTimeSetEvent$_store_cell((int) v) inline {
    return $ClaimStartTimeSetEvent$_store(begin_cell(), v).end_cell();
}

((int)) $ClaimStartTimeSetEvent$_constructor_time(int time) inline {
    return (time);
}

;;
;; Type: DistritutionPoolAddedEvent
;; Header: 0x04d7b560
;; TLB: distritution_pool_added_event#04d7b560 index:uint32 config:PoolConfig{address:address,share:uint32} = DistritutionPoolAddedEvent
;;

builder $DistritutionPoolAddedEvent$_store(builder build_0, (int, (slice, int)) v) inline {
    var (v'index, (v'config'address, v'config'share)) = v;
    build_0 = store_uint(build_0, 81245536, 32);
    build_0 = build_0.store_uint(v'index, 32);
    build_0 = $PoolConfig$_store(build_0, (v'config'address, v'config'share));
    return build_0;
}

cell $DistritutionPoolAddedEvent$_store_cell((int, (slice, int)) v) inline {
    return $DistritutionPoolAddedEvent$_store(begin_cell(), v).end_cell();
}

((int, (slice, int))) $DistritutionPoolAddedEvent$_constructor_index_config(int index, (slice, int) config) inline {
    return (index, config);
}

;;
;; Type: DistributionPoolModifiedEvent
;; Header: 0xbcc9cc05
;; TLB: distribution_pool_modified_event#bcc9cc05 index:uint32 config:PoolConfig{address:address,share:uint32} = DistributionPoolModifiedEvent
;;

builder $DistributionPoolModifiedEvent$_store(builder build_0, (int, (slice, int)) v) inline {
    var (v'index, (v'config'address, v'config'share)) = v;
    build_0 = store_uint(build_0, 3167341573, 32);
    build_0 = build_0.store_uint(v'index, 32);
    build_0 = $PoolConfig$_store(build_0, (v'config'address, v'config'share));
    return build_0;
}

cell $DistributionPoolModifiedEvent$_store_cell((int, (slice, int)) v) inline {
    return $DistributionPoolModifiedEvent$_store(begin_cell(), v).end_cell();
}

((int, (slice, int))) $DistributionPoolModifiedEvent$_constructor_index_config(int index, (slice, int) config) inline {
    return (index, config);
}

;;
;; Type: ConfigValidatedEvent
;; Header: 0xc115562f
;; TLB: config_validated_event#c115562f timestamp:uint32 = ConfigValidatedEvent
;;

builder $ConfigValidatedEvent$_store(builder build_0, (int) v) inline {
    var (v'timestamp) = v;
    build_0 = store_uint(build_0, 3239401007, 32);
    build_0 = build_0.store_uint(v'timestamp, 32);
    return build_0;
}

cell $ConfigValidatedEvent$_store_cell((int) v) inline {
    return $ConfigValidatedEvent$_store(begin_cell(), v).end_cell();
}

((int)) $ConfigValidatedEvent$_constructor_timestamp(int timestamp) inline {
    return (timestamp);
}

;;
;; Type: FinalizedEvent
;; Header: 0x3667453a
;; TLB: finalized_event#3667453a timestamp:uint32 successful:bool = FinalizedEvent
;;

builder $FinalizedEvent$_store(builder build_0, (int, int) v) inline {
    var (v'timestamp, v'successful) = v;
    build_0 = store_uint(build_0, 912737594, 32);
    build_0 = build_0.store_uint(v'timestamp, 32);
    build_0 = build_0.store_int(v'successful, 1);
    return build_0;
}

cell $FinalizedEvent$_store_cell((int, int) v) inline {
    return $FinalizedEvent$_store(begin_cell(), v).end_cell();
}

((int, int)) $FinalizedEvent$_constructor_timestamp_successful(int timestamp, int successful) inline {
    return (timestamp, successful);
}

;;
;; Type: FinalizationRefundEvent
;; Header: 0xcd56b91d
;; TLB: finalization_refund_event#cd56b91d amount:coins address:address = FinalizationRefundEvent
;;

builder $FinalizationRefundEvent$_store(builder build_0, (int, slice) v) inline {
    var (v'amount, v'address) = v;
    build_0 = store_uint(build_0, 3445012765, 32);
    build_0 = build_0.store_coins(v'amount);
    build_0 = __tact_store_address(build_0, v'address);
    return build_0;
}

cell $FinalizationRefundEvent$_store_cell((int, slice) v) inline {
    return $FinalizationRefundEvent$_store(begin_cell(), v).end_cell();
}

((int, slice)) $FinalizationRefundEvent$_constructor_amount_address(int amount, slice address) inline {
    return (amount, address);
}

;;
;; Type: DistributionEvent
;; Header: 0x67776abf
;; TLB: distribution_event#67776abf amount:coins address:address = DistributionEvent
;;

builder $DistributionEvent$_store(builder build_0, (int, slice) v) inline {
    var (v'amount, v'address) = v;
    build_0 = store_uint(build_0, 1735879359, 32);
    build_0 = build_0.store_coins(v'amount);
    build_0 = __tact_store_address(build_0, v'address);
    return build_0;
}

cell $DistributionEvent$_store_cell((int, slice) v) inline {
    return $DistributionEvent$_store(begin_cell(), v).end_cell();
}

((int, slice)) $DistributionEvent$_constructor_amount_address(int amount, slice address) inline {
    return (amount, address);
}

;;
;; Type: TonupLauncherFixedPriceUnrestricted
;;

builder $TonupLauncherFixedPriceUnrestricted$_store(builder build_0, (slice, (int, int, int, int, int, slice, slice, int, int), int, int, int, int, int, cell, int, cell, int, int, int) v) inline {
    var (v'owner, (v'config'min_total_ton, v'config'max_total_ton, v'config'min_ton_per_tx, v'config'max_ton_per_user, v'config'tokens_per_ton, v'config'token_wallet_address, v'config'unsold_token_refund_address, v'config'start_time, v'config'end_time), v'total_ton_contributed, v'total_ton_refunded, v'config_validated, v'tokens_awaiting_launch, v'claim_start_time, v'participation, v'distribution_number_pools, v'distribution_pools, v'distribution_complete, v'launch_finalized, v'launch_successful) = v;
    build_0 = __tact_store_address(build_0, v'owner);
    var build_1 = begin_cell();
    build_1 = $LauncherConfig$_store(build_1, (v'config'min_total_ton, v'config'max_total_ton, v'config'min_ton_per_tx, v'config'max_ton_per_user, v'config'tokens_per_ton, v'config'token_wallet_address, v'config'unsold_token_refund_address, v'config'start_time, v'config'end_time));
    build_1 = build_1.store_coins(v'total_ton_contributed);
    var build_2 = begin_cell();
    build_2 = build_2.store_coins(v'total_ton_refunded);
    build_2 = build_2.store_int(v'config_validated, 1);
    build_2 = build_2.store_coins(v'tokens_awaiting_launch);
    build_2 = build_2.store_uint(v'claim_start_time, 32);
    build_2 = build_2.store_dict(v'participation);
    build_2 = build_2.store_uint(v'distribution_number_pools, 32);
    build_2 = build_2.store_dict(v'distribution_pools);
    build_2 = build_2.store_int(v'distribution_complete, 1);
    build_2 = build_2.store_int(v'launch_finalized, 1);
    build_2 = build_2.store_int(v'launch_successful, 1);
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((slice, (int, int, int, int, int, slice, slice, int, int), int, int, int, int, int, cell, int, cell, int, int, int))) $TonupLauncherFixedPriceUnrestricted$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'config = sc_1~$LauncherConfig$_load();
    var v'total_ton_contributed = sc_1~load_coins();
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'total_ton_refunded = sc_2~load_coins();
    var v'config_validated = sc_2~load_int(1);
    var v'tokens_awaiting_launch = sc_2~load_coins();
    var v'claim_start_time = sc_2~load_uint(32);
    var v'participation = sc_2~load_dict();
    var v'distribution_number_pools = sc_2~load_uint(32);
    var v'distribution_pools = sc_2~load_dict();
    var v'distribution_complete = sc_2~load_int(1);
    var v'launch_finalized = sc_2~load_int(1);
    var v'launch_successful = sc_2~load_int(1);
    return (sc_0, (v'owner, v'config, v'total_ton_contributed, v'total_ton_refunded, v'config_validated, v'tokens_awaiting_launch, v'claim_start_time, v'participation, v'distribution_number_pools, v'distribution_pools, v'distribution_complete, v'launch_finalized, v'launch_successful));
}

(slice, ((slice, (int, int, int, int, int, slice, slice, int, int)))) $TonupLauncherFixedPriceUnrestricted$init$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'config = sc_1~$LauncherConfig$_load();
    return (sc_0, (v'owner, v'config));
}

(slice, (int, int, int, int, int, slice, slice, int, int), int, int, int, int, int, cell, int, cell, int, int, int) $TonupLauncherFixedPriceUnrestricted$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$TonupLauncherFixedPriceUnrestricted$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (slice owner, (int, int, int, int, int, slice, slice, int, int) config) = $sc~$TonupLauncherFixedPriceUnrestricted$init$_load();
        $sc.end_parse();
        return $TonupLauncherFixedPriceUnrestricted$_contract_init(owner, config);
    }
}

() $TonupLauncherFixedPriceUnrestricted$_contract_store((slice, (int, int, int, int, int, slice, slice, int, int), int, int, int, int, int, cell, int, cell, int, int, int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $TonupLauncherFixedPriceUnrestricted$_store(b, v);
    set_data(b.end_cell());
}