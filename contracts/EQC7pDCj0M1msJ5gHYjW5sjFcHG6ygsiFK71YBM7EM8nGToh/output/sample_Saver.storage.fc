;;
;; Type: DataResponse
;; TLB: _ master:address owner:address key:^string data:^string = DataResponse
;;

(slice, slice, slice, slice) $DataResponse$_to_external(((slice, slice, slice, slice)) v) inline {
    var (v'master, v'owner, v'key, v'data) = v; 
    return (v'master, v'owner, v'key, v'data);
}

((slice, slice, slice, slice)) $DataResponse$_constructor_master_owner_key_data(slice master, slice owner, slice key, slice data) inline {
    return (master, owner, key, data);
}

;;
;; Type: Data
;; Header: 0x76372785
;; TLB: data#76372785 data:^string = Data
;;

(slice, ((slice))) $Data$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1983326085);
    var v'data = sc_0~load_ref().begin_parse();
    return (sc_0, (v'data));
}

;;
;; Type: Saver
;;

builder $Saver$_store(builder build_0, (slice, slice, slice, slice) v) inline {
    var (v'master, v'owner, v'key, v'data) = v;
    build_0 = __tact_store_address(build_0, v'master);
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = build_0.store_ref(begin_cell().store_slice(v'key).end_cell());
    build_0 = build_0.store_ref(begin_cell().store_slice(v'data).end_cell());
    return build_0;
}

(slice, ((slice, slice, slice, slice))) $Saver$_load(slice sc_0) inline {
    var v'master = sc_0~__tact_load_address();
    var v'owner = sc_0~__tact_load_address();
    var v'key = sc_0~load_ref().begin_parse();
    var v'data = sc_0~load_ref().begin_parse();
    return (sc_0, (v'master, v'owner, v'key, v'data));
}

(slice, ((slice, slice, slice))) $Saver$init$_load(slice sc_0) inline {
    var v'master = sc_0~__tact_load_address();
    var v'owner = sc_0~__tact_load_address();
    var v'key = sc_0~load_ref().begin_parse();
    return (sc_0, (v'master, v'owner, v'key));
}

(slice, slice, slice, slice) $Saver$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$Saver$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (slice master, slice owner, slice key) = $sc~$Saver$init$_load();
        $sc.end_parse();
        return $Saver$_contract_init(master, owner, key);
    }
}

() $Saver$_contract_store((slice, slice, slice, slice) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $Saver$_store(b, v);
    set_data(b.end_cell());
}