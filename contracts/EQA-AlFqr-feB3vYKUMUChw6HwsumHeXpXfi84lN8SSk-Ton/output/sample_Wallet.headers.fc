;;
;; Header files for Wallet
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $NewOwner$_load
(slice, ((slice))) $NewOwner$_load(slice sc_0) inline;

;; $Wallet$_store
builder $Wallet$_store(builder build_0, (slice, int) v) inline;

;; $Wallet$_load
(slice, ((slice, int))) $Wallet$_load(slice sc_0) inline;

;; $Wallet$init$_load
(slice, ((slice, int))) $Wallet$init$_load(slice sc_0) inline;

;; $Wallet$_contract_init
(slice, int) $Wallet$_contract_init(slice $owner, int $seqno) impure inline_ref;

;; $Wallet$_contract_load
(slice, int) $Wallet$_contract_load() impure inline_ref;

;; $Wallet$_contract_store
() $Wallet$_contract_store((slice, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;
