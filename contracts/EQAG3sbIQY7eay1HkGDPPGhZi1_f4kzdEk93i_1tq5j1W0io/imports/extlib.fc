int     extlib::1coin()                                 asm "1000000000 PUSHINT";
int     extlib::1nanocoin()                             asm "1          PUSHINT";

int     extlib::basechain()                             asm "0  PUSHINT";
int     extlib::masterchain()                           asm "-1 PUSHINT";

int     extlib::tlen(tuple t)                           asm "TLEN PUSHINT";
int     extlib::slice_data_equal?(slice s1, slice s2)   asm "SDEQ";
slice   extlib::empty_slice()                           asm "<b b> <s PUSHSLICE";
slice   extlib::addr_none()                             asm "<b b{00} s, b> <s PUSHSLICE";

;;      addr_std$10 anycast:(## 1) {anycast = 0} ...
slice   extlib::addrsmpl_start()                        asm "<b b{100} s, b> <s PUSHSLICE";
(int, int) extlib::parse_std_addr(slice s)              asm "REWRITESTDADDR";

int extlib::addrsmpl?(slice addr) inline {
    return extlib::slice_data_equal?(
        addr.preload_bits(3),
        extlib::addrsmpl_start()
    );
}

int extlib::basechsmpl_addr?(slice addr) inline {
    if ~(extlib::addrsmpl?(addr)) { return false; }

    (int wc, _) = extlib::parse_std_addr(addr);
    if (wc != extlib::basechain()) { return false; }
    
    return true;
}