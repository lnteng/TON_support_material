;;
;; Header files for ClaimMaster
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $ChangeOwner$_load
(slice, ((int, slice))) $ChangeOwner$_load(slice sc_0) inline;

;; $MintChild$_load
(slice, ((slice, slice))) $MintChild$_load(slice sc_0) inline;

;; $Claim$_load
(slice, ((int, int, slice, slice))) $Claim$_load(slice sc_0) inline;

;; $Referrer$_store
builder $Referrer$_store(builder build_0, (slice) v) inline;

;; $Referrer$_store_cell
cell $Referrer$_store_cell((slice) v) inline;

;; $Boost$_store
builder $Boost$_store(builder build_0, (int) v) inline;

;; $Boost$_store_cell
cell $Boost$_store_cell((int) v) inline;

;; $OwnerWithdrawalRequest$_load
(slice, ((int, slice))) $OwnerWithdrawalRequest$_load(slice sc_0) inline;

;; $OwnerWithdrawalTonRequest$_load
(slice, (tuple)) $OwnerWithdrawalTonRequest$_load(slice sc_0) inline;

;; $TokenConfig$_load
(slice, ((slice, int, int, int))) $TokenConfig$_load(slice sc_0) inline;

;; $CustomMessage$_load
(slice, ((slice, cell))) $CustomMessage$_load(slice sc_0) inline;

;; $TokenNotification$_load
(slice, ((int, int, slice, slice))) $TokenNotification$_load(slice sc_0) inline;

;; $TokenExcesses$_load
(slice, ((int))) $TokenExcesses$_load(slice sc_0) inline;

;; $TokenTransfer$_store
builder $TokenTransfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref;

;; $TokenTransfer$_store_cell
cell $TokenTransfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline;

;; $ClaimMaster$_store
builder $ClaimMaster$_store(builder build_0, (int, slice, int, int, slice, slice, int, int, int) v) inline;

;; $ClaimMaster$_load
(slice, ((int, slice, int, int, slice, slice, int, int, int))) $ClaimMaster$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $ClaimMaster$init$_load
(slice, ((slice, slice, int, int))) $ClaimMaster$init$_load(slice sc_0) inline;

;; $ClaimChild$init$_store
builder $ClaimChild$init$_store(builder build_0, (slice, slice, slice, int) v) inline;

;; $ClaimMaster$_contract_init
(int, slice, int, int, slice, slice, int, int, int) $ClaimMaster$_contract_init(slice $owner, slice $master, int $interval, int $randomSecure) impure inline_ref;

;; $ClaimMaster$_contract_load
(int, slice, int, int, slice, slice, int, int, int) $ClaimMaster$_contract_load() impure inline_ref;

;; $ClaimMaster$_contract_store
() $ClaimMaster$_contract_store((int, slice, int, int, slice, slice, int, int, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $ClaimMaster$_fun_interval
((int, slice, int, int, slice, slice, int, int, int), int) $ClaimMaster$_fun_interval((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref;

;; $ClaimMaster$_fun_tokenAddress
((int, slice, int, int, slice, slice, int, int, int), slice) $ClaimMaster$_fun_tokenAddress((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref;

;; $ClaimMaster$_fun_queryId
((int, slice, int, int, slice, slice, int, int, int), int) $ClaimMaster$_fun_queryId((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref;

;; $ClaimChild$_init_child
(cell, cell) $ClaimChild$_init_child(cell sys', slice $parent, slice $user, slice $master, int $interval) inline_ref;

;; $ClaimMaster$_fun_get_user_address
((int, slice, int, int, slice, slice, int, int, int), slice) $ClaimMaster$_fun_get_user_address((int, slice, int, int, slice, slice, int, int, int) $self, slice $user) impure inline_ref;

;; $ClaimMaster$_fun_claimAmount
((int, slice, int, int, slice, slice, int, int, int), int) $ClaimMaster$_fun_claimAmount((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref;

;; $ClaimMaster$_fun_referralReward
((int, slice, int, int, slice, slice, int, int, int), int) $ClaimMaster$_fun_referralReward((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref;

;; $ClaimMaster$_fun_boostReward
((int, slice, int, int, slice, slice, int, int, int), int) $ClaimMaster$_fun_boostReward((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $ClaimMaster$_fun_forward
((int, slice, int, int, slice, slice, int, int, int), ()) $ClaimMaster$_fun_forward((int, slice, int, int, slice, slice, int, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $ClaimMaster$_fun_notify
((int, slice, int, int, slice, slice, int, int, int), ()) $ClaimMaster$_fun_notify((int, slice, int, int, slice, slice, int, int, int) $self, cell $body) impure inline;

;; $ClaimMaster$_fun_owner
((int, slice, int, int, slice, slice, int, int, int), slice) $ClaimMaster$_fun_owner((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $Boost$_constructor_amount
((int)) $Boost$_constructor_amount(int amount) inline;

;; $SendParameters$_constructor_to_value_mode_code_data_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_code_data_body(slice to, int value, int mode, cell code, cell data, cell body) inline;

;; $Referrer$_constructor_user
((slice)) $Referrer$_constructor_user(slice user) inline;

;; $SendParameters$_constructor_value_to_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_mode_body(int value, slice to, int mode, cell body) inline;

;; $TokenTransfer$_constructor_queryId_amount_destination_responseDestination_customPayload_forwardTonAmount_forwardPayload
((int, int, slice, slice, cell, int, slice)) $TokenTransfer$_constructor_queryId_amount_destination_responseDestination_customPayload_forwardTonAmount_forwardPayload(int queryId, int amount, slice destination, slice responseDestination, cell customPayload, int forwardTonAmount, slice forwardPayload) inline;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice to, int value, int mode) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
