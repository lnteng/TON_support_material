#pragma version >=0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "sample_ClaimMaster.headers.fc";
#include "sample_ClaimMaster.stdlib.fc";
#include "sample_ClaimMaster.storage.fc";

;;
;; Contract ClaimMaster functions
;;

(int, slice, int, int, slice, slice, int, int, int) $ClaimMaster$_contract_init(slice $owner, slice $master, int $interval, int $randomSecure) impure inline_ref {
    var (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)) = (null(), null(), null(), null(), null(), null(), 300000000, 150000000, 5000000);
    $self'owner = $owner;
    $self'queryId = 0;
    $self'tokenAddress = null();
    $self'randomSecure = $randomSecure;
    $self'interval = $interval;
    $self'master = $master;
    return ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward);
}

((int, slice, int, int, slice, slice, int, int, int), int) $ClaimMaster$_fun_interval((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref {
    var (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)) = $self;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), $self'interval);
}

((int, slice, int, int, slice, slice, int, int, int), slice) $ClaimMaster$_fun_tokenAddress((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref {
    var (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)) = $self;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), $self'tokenAddress);
}

((int, slice, int, int, slice, slice, int, int, int), int) $ClaimMaster$_fun_queryId((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref {
    var (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)) = $self;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), $self'queryId);
}

((int, slice, int, int, slice, slice, int, int, int), slice) $ClaimMaster$_fun_get_user_address((int, slice, int, int, slice, slice, int, int, int) $self, slice $user) impure inline_ref {
    var (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)) = $self;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), $global_contractAddress($ClaimChild$_init_child(__tact_context_sys, my_address(), $user, $self'owner, $self'interval)));
}

((int, slice, int, int, slice, slice, int, int, int), int) $ClaimMaster$_fun_claimAmount((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref {
    var (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)) = $self;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), $self'claimAmount);
}

((int, slice, int, int, slice, slice, int, int, int), int) $ClaimMaster$_fun_referralReward((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref {
    var (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)) = $self;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), $self'referralReward);
}

((int, slice, int, int, slice, slice, int, int, int), int) $ClaimMaster$_fun_boostReward((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref {
    var (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)) = $self;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), $self'boostReward);
}

((int, slice, int, int, slice, slice, int, int, int), slice) $ClaimMaster$_fun_owner((int, slice, int, int, slice, slice, int, int, int) $self) impure inline_ref {
    var (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)) = $self;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), $self'owner);
}

;;
;; Receivers of a Contract ClaimMaster
;;

(((int, slice, int, int, slice, slice, int, int, int)), ()) $ClaimMaster$_internal_binary_ChangeOwner((int, slice, int, int, slice, slice, int, int, int) $self, (int, slice) $msg) impure inline {
    var ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward) = $self;
    var ($msg'queryId, $msg'newOwner) = $msg;
    throw_unless(101, ( __tact_slice_eq_bits($self'master, __tact_context_get_sender()) ));
    $self'owner = $msg'newOwner;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), ());
}

(((int, slice, int, int, slice, slice, int, int, int)), ()) $ClaimMaster$_internal_binary_CustomMessage((int, slice, int, int, slice, slice, int, int, int) $self, (slice, cell) $msg) impure inline {
    var ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward) = $self;
    var ($msg'to, $msg'payload) = $msg;
    throw_unless(101, ( __tact_slice_eq_bits($self'master, __tact_context_get_sender()) ));
    $global_send($SendParameters$_constructor_to_value_mode_body($msg'to, 0, 64, $msg'payload));
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), ());
}

(((int, slice, int, int, slice, slice, int, int, int)), ()) $ClaimMaster$_internal_binary_TokenNotification((int, slice, int, int, slice, slice, int, int, int) $self, (int, int, slice, slice) $msg) impure inline {
    var ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward) = $self;
    var ($msg'queryId, $msg'amount, $msg'from, $msg'forwardPayload) = $msg;
    slice $userContract = ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)~$ClaimMaster$_fun_get_user_address($msg'from);
    $global_send($SendParameters$_constructor_to_value_mode_body($userContract, 0, 64, $Boost$_store_cell($Boost$_constructor_amount(($msg'amount / 1000000000)))));
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), ());
}

(((int, slice, int, int, slice, slice, int, int, int)), ()) $ClaimMaster$_internal_binary_MintChild((int, slice, int, int, slice, slice, int, int, int) $self, (slice, slice) $msg) impure inline {
    var ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward) = $self;
    var ($msg'user, $msg'referrer) = $msg;
    throw_unless(101, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    var ($init'code, $init'data) = $ClaimChild$_init_child(__tact_context_sys, my_address(), $msg'user, $self'owner, $self'interval);
    $global_send($SendParameters$_constructor_to_value_mode_code_data_body($global_contractAddress(($init'code, $init'data)), 0, 64, $init'code, $init'data, $Referrer$_store_cell($Referrer$_constructor_user($msg'referrer))));
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), ());
}

(((int, slice, int, int, slice, slice, int, int, int)), ()) $ClaimMaster$_internal_binary_Claim((int, slice, int, int, slice, slice, int, int, int) $self, (int, int, slice, slice) $msg) impure inline {
    var ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward) = $self;
    var ($msg'amount, $msg'boost, $msg'user, $msg'referrer) = $msg;
    slice $expected = ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)~$ClaimMaster$_fun_get_user_address($msg'user);
    throw_unless(101, ( __tact_slice_eq_bits($expected, __tact_context_get_sender()) ));
    $global_send($SendParameters$_constructor_value_to_mode_body(50000000, __tact_not_null($self'tokenAddress), 0, $TokenTransfer$_store_cell($TokenTransfer$_constructor_queryId_amount_destination_responseDestination_customPayload_forwardTonAmount_forwardPayload(0, (($self'claimAmount + ($msg'amount * $self'referralReward)) + ($msg'boost * $self'boostReward)), $msg'user, my_address(), null(), 1, null()))));
    if ((~ null?($msg'referrer))) {
        slice $refAddress = ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)~$ClaimMaster$_fun_get_user_address(__tact_not_null($msg'referrer));
        $global_send($SendParameters$_constructor_value_to_mode_body(0, $refAddress, 64, end_cell(store_uint(begin_cell(), 3, 32))));
    }
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), ());
}

(((int, slice, int, int, slice, slice, int, int, int)), ()) $ClaimMaster$_internal_binary_TokenConfig((int, slice, int, int, slice, slice, int, int, int) $self, (slice, int, int, int) $msg) impure inline {
    var ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward) = $self;
    var ($msg'tokenAddress, $msg'claimAmount, $msg'referralReward, $msg'boostReward) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(101, ( (( __tact_slice_eq_bits($self'owner, $ctx'sender) )) ? (true) : (( __tact_slice_eq_bits($self'master, $ctx'sender) )) ));
    $self'tokenAddress = $msg'tokenAddress;
    $self'claimAmount = $msg'claimAmount;
    $self'referralReward = $msg'referralReward;
    $self'boostReward = $msg'boostReward;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), ());
}

(((int, slice, int, int, slice, slice, int, int, int)), ()) %$ClaimMaster$_internal_empty((int, slice, int, int, slice, slice, int, int, int) $self) impure inline {
    var ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward) = $self;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), ());
}

(((int, slice, int, int, slice, slice, int, int, int)), ()) $ClaimMaster$_internal_binary_TokenExcesses((int, slice, int, int, slice, slice, int, int, int) $self, (int) $msg) impure inline {
    var ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward) = $self;
    var ($msg'queryId) = $msg;
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), ());
}

(((int, slice, int, int, slice, slice, int, int, int)), ()) $ClaimMaster$_internal_binary_OwnerWithdrawalTonRequest((int, slice, int, int, slice, slice, int, int, int) $self, tuple $msg) impure inline {
    var ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward) = $self;
    var $msg = $msg;
    throw_unless(1001, ( __tact_slice_eq_bits($self'master, __tact_context_get_sender()) ));
    $global_send($SendParameters$_constructor_to_value_mode($self'master, 0, 128));
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), ());
}

(((int, slice, int, int, slice, slice, int, int, int)), ()) $ClaimMaster$_internal_binary_OwnerWithdrawalRequest((int, slice, int, int, slice, slice, int, int, int) $self, (int, slice) $msg) impure inline {
    var ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward) = $self;
    var ($msg'amount, $msg'tokenAddress) = $msg;
    throw_unless(1001, ( __tact_slice_eq_bits($self'master, __tact_context_get_sender()) ));
    if ((~ null?($msg'tokenAddress))) {
        $global_send($SendParameters$_constructor_value_to_mode_body(65000000, $msg'tokenAddress, 0, $TokenTransfer$_store_cell($TokenTransfer$_constructor_queryId_amount_destination_responseDestination_customPayload_forwardTonAmount_forwardPayload($self'queryId, $msg'amount, $self'master, $self'master, null(), 1, null()))));
        $self'queryId = ($self'queryId + 1);
    }
    $global_send($SendParameters$_constructor_to_value_mode($self'master, 0, 128));
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), ());
}

(((int, slice, int, int, slice, slice, int, int, int)), ()) $ClaimMaster$_internal_binary_Deploy((int, slice, int, int, slice, slice, int, int, int) $self, (int) $deploy) impure inline {
    var ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward)~$ClaimMaster$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'queryId, $self'tokenAddress, $self'randomSecure, $self'interval, $self'owner, $self'master, $self'claimAmount, $self'referralReward, $self'boostReward), ());
}

;;
;; Get methods of a Contract ClaimMaster
;;

_ %interval() method_id(97297) {
    var self = $ClaimMaster$_contract_load();
    var res = self~$ClaimMaster$_fun_interval();
    return res;
}

_ %tokenAddress() method_id(106685) {
    var self = $ClaimMaster$_contract_load();
    var res = self~$ClaimMaster$_fun_tokenAddress();
    return res;
}

_ %queryId() method_id(94948) {
    var self = $ClaimMaster$_contract_load();
    var res = self~$ClaimMaster$_fun_queryId();
    return res;
}

_ %get_user_address(slice $$user) method_id(102784) {
    slice $user = __tact_verify_address($$user);
    var self = $ClaimMaster$_contract_load();
    var res = self~$ClaimMaster$_fun_get_user_address($user);
    return res;
}

_ %claimAmount() method_id(72575) {
    var self = $ClaimMaster$_contract_load();
    var res = self~$ClaimMaster$_fun_claimAmount();
    return res;
}

_ %referralReward() method_id(71076) {
    var self = $ClaimMaster$_contract_load();
    var res = self~$ClaimMaster$_fun_referralReward();
    return res;
}

_ %boostReward() method_id(78416) {
    var self = $ClaimMaster$_contract_load();
    var res = self~$ClaimMaster$_fun_boostReward();
    return res;
}

_ %owner() method_id(83229) {
    var self = $ClaimMaster$_contract_load();
    var res = self~$ClaimMaster$_fun_owner();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmaNT6AFhb9qpufFcjq4xUncXdMct1mKo1wb8Acg24iUVR";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract ClaimMaster
;;

((int, slice, int, int, slice, slice, int, int, int), int) $ClaimMaster$_contract_router_internal((int, slice, int, int, slice, slice, int, int, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive ChangeOwner message
    if (op == 2174598809) {
        var msg = in_msg~$ChangeOwner$_load();
        self~$ClaimMaster$_internal_binary_ChangeOwner(msg);
        return (self, true);
    }
    
    ;; Receive CustomMessage message
    if (op == 9) {
        var msg = in_msg~$CustomMessage$_load();
        self~$ClaimMaster$_internal_binary_CustomMessage(msg);
        return (self, true);
    }
    
    ;; Receive TokenNotification message
    if (op == 1935855772) {
        var msg = in_msg~$TokenNotification$_load();
        self~$ClaimMaster$_internal_binary_TokenNotification(msg);
        return (self, true);
    }
    
    ;; Receive MintChild message
    if (op == 1) {
        var msg = in_msg~$MintChild$_load();
        self~$ClaimMaster$_internal_binary_MintChild(msg);
        return (self, true);
    }
    
    ;; Receive Claim message
    if (op == 2) {
        var msg = in_msg~$Claim$_load();
        self~$ClaimMaster$_internal_binary_Claim(msg);
        return (self, true);
    }
    
    ;; Receive TokenConfig message
    if (op == 8) {
        var msg = in_msg~$TokenConfig$_load();
        self~$ClaimMaster$_internal_binary_TokenConfig(msg);
        return (self, true);
    }
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~%$ClaimMaster$_internal_empty();
        return (self, true);
    }
    
    ;; Receive TokenExcesses message
    if (op == 3576854235) {
        var msg = in_msg~$TokenExcesses$_load();
        self~$ClaimMaster$_internal_binary_TokenExcesses(msg);
        return (self, true);
    }
    
    ;; Receive OwnerWithdrawalTonRequest message
    if (op == 7) {
        var msg = in_msg~$OwnerWithdrawalTonRequest$_load();
        self~$ClaimMaster$_internal_binary_OwnerWithdrawalTonRequest(msg);
        return (self, true);
    }
    
    ;; Receive OwnerWithdrawalRequest message
    if (op == 6) {
        var msg = in_msg~$OwnerWithdrawalRequest$_load();
        self~$ClaimMaster$_internal_binary_OwnerWithdrawalRequest(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$ClaimMaster$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $ClaimMaster$_contract_load();
    
    ;; Handle operation
    int handled = self~$ClaimMaster$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $ClaimMaster$_contract_store(self);
}
