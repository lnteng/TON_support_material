#include "stdlib.fc";

slice base64::continuous_decode(slice input) {
  builder ouput = begin_cell();
  int finished = false;

  while ((~ input.slice_empty?()) & (~ finished)) {
    int char = input~load_uint(8);
    if ((char >= 65) & (char <= 90)) { ;; A-Z
      ouput = ouput.store_uint(char - 65, 6);
    } elseif ((char >= 97) & (char <= 122)) { ;; a-z
      ouput = ouput.store_uint(char - 71, 6);
    } elseif ((char >= 48) & (char <= 57)) { ;; 0-9
      ouput = ouput.store_uint(char + 4, 6);
    } elseif ((char == 43) | (char == 45)) { ;; '+' (base64) or '-' (base64url)
      ouput = ouput.store_uint(62, 6);
    } elseif ((char == 47) | (char == 95)) { ;; '/' (base64) or '_' (base64url)
      ouput = ouput.store_uint(63, 6);
    } elseif (char == 61) { ;; '=', skip
    } else {
      finished = true;
    }
  }

  int decoded_bits = ouput.builder_bits();
  int padding_bits = decoded_bits % 8;
  
  slice result = ouput.end_cell().begin_parse();
  if (padding_bits > 0) {
    result~skip_last_bits(padding_bits);
  }
  
  return result;
}