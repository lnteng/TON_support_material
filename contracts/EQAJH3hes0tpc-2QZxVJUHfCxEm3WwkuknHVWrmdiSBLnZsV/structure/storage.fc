global int initialized?;
global int store::balance; ;; 124 bit
global slice store::owner_address; ;; 267 bits
global slice store::jetton_master_address; ;; 267 bits
global cell store::jetton_wallet_code; 
global cell store::locked_amounts;
global slice authentic::jetton_wallet;
global slice authentic::master;
global int authentic::balance;
global cell authentic::wallet_code;

const int min_tons_for_storage = 10000000; ;; 0.01 TON
const int gas_consumption = 10000000; ;; 0.01 TON
const int math_decimals = 1000000000; ;; 1e9

() load_data() impure inline_ref {

    ifnot (null?(initialized?)) {
        return ();
    }

    slice ds = get_data().begin_parse();
    store::balance = ds~load_coins();
    store::owner_address = ds~load_msg_addr();
    store::jetton_master_address = ds~load_msg_addr();
    store::jetton_wallet_code = ds~load_ref();
    store::locked_amounts = ds~load_dict();

    slice authentic_ref = ds~load_ref().begin_parse();
    authentic::jetton_wallet = authentic_ref~load_msg_addr();
    authentic::master = authentic_ref~load_msg_addr();
    authentic::balance = authentic_ref~load_coins();
    authentic::wallet_code = authentic_ref~load_ref();

    initialized? = true;

}

() save_data() impure inline {
    set_data(
        pack_jetton_wallet_data(
            store::balance,
            store::owner_address,
            store::jetton_master_address,
            store::jetton_wallet_code,
            store::locked_amounts,
            authentic::jetton_wallet,
            authentic::master,
            authentic::balance,
            authentic::wallet_code
        )
    );
}