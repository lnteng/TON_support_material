;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

((cell, cell)) $StateInit$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (cell vvv'code, cell vvv'data) = __tact_tuple_destroy_2(v);
    return (vvv'code, vvv'data);
}

;;
;; Type: Context
;; TLB: _ bounced:bool sender:address value:int257 raw:^slice = Context
;;

_ $Context$_get_value((int, slice, int, slice) v) inline {
    var (v'bounced, v'sender, v'value, v'raw) = v;
    return v'value;
}

;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_bounce_mode_body(int value, slice to, int bounce, int mode, cell body) inline {
    return (bounce, to, value, mode, body, null(), null());
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_mode_body_bounce(int value, slice to, int mode, cell body, int bounce) inline {
    return (bounce, to, value, mode, body, null(), null());
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body_code_data(slice to, int value, int bounce, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

;;
;; Type: Deploy
;; Header: 0x946a98b6
;; TLB: deploy#946a98b6 queryId:uint64 = Deploy
;;

(slice, ((int))) $Deploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: DeployOk
;; Header: 0xaff90f57
;; TLB: deploy_ok#aff90f57 queryId:uint64 = DeployOk
;;

builder $DeployOk$_store(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell $DeployOk$_store_cell((int) v) inline {
    return $DeployOk$_store(begin_cell(), v).end_cell();
}

((int)) $DeployOk$_constructor_queryId(int queryId) inline {
    return (queryId);
}

;;
;; Type: JettonTransfer
;; Header: 0x0f8a7ea5
;; TLB: jetton_transfer#0f8a7ea5 query_id:uint64 amount:coins destination:address response_destination:Maybe address custom_payload:Maybe ^cell forward_ton_amount:coins forward_payload:remainder<slice> = JettonTransfer
;;

builder $JettonTransfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref {
    var (v'query_id, v'amount, v'destination, v'response_destination, v'custom_payload, v'forward_ton_amount, v'forward_payload) = v;
    build_0 = store_uint(build_0, 260734629, 32);
    build_0 = build_0.store_uint(v'query_id, 64);
    build_0 = build_0.store_coins(v'amount);
    build_0 = __tact_store_address(build_0, v'destination);
    build_0 = __tact_store_address_opt(build_0, v'response_destination);
    build_0 = ~ null?(v'custom_payload) ? build_0.store_int(true, 1).store_ref(v'custom_payload) : build_0.store_int(false, 1);
    build_0 = build_0.store_coins(v'forward_ton_amount);
    build_0 = build_0.store_slice(v'forward_payload);
    return build_0;
}

cell $JettonTransfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline {
    return $JettonTransfer$_store(begin_cell(), v).end_cell();
}

((int, int, slice, slice, cell, int, slice)) $JettonTransfer$_constructor_query_id_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload(int query_id, int amount, slice destination, slice response_destination, cell custom_payload, int forward_ton_amount, slice forward_payload) inline {
    return (query_id, amount, destination, response_destination, custom_payload, forward_ton_amount, forward_payload);
}

;;
;; Type: ConsentReply
;; Header: 0xcbc1a22e
;; TLB: consent_reply#cbc1a22e addr:address accepted:bool = ConsentReply
;;

(slice, ((slice, int))) $ConsentReply$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3418464814);
    var v'addr = sc_0~__tact_load_address();
    var v'accepted = sc_0~load_int(1);
    return (sc_0, (v'addr, v'accepted));
}

;;
;; Type: GiveConsent
;; Header: 0xac400349
;; TLB: give_consent#ac400349 addr:address referrer:address = GiveConsent
;;

builder $GiveConsent$_store(builder build_0, (slice, slice) v) inline {
    var (v'addr, v'referrer) = v;
    build_0 = store_uint(build_0, 2889876297, 32);
    build_0 = __tact_store_address(build_0, v'addr);
    build_0 = __tact_store_address(build_0, v'referrer);
    return build_0;
}

cell $GiveConsent$_store_cell((slice, slice) v) inline {
    return $GiveConsent$_store(begin_cell(), v).end_cell();
}

((slice, slice)) $GiveConsent$_constructor_addr_referrer(slice addr, slice referrer) inline {
    return (addr, referrer);
}

;;
;; Type: RescueJetton
;; Header: 0xe49e8873
;; TLB: rescue_jetton#e49e8873 jetton_wallet_address:address amount:coins receiver:address = RescueJetton
;;

(slice, ((slice, int, slice))) $RescueJetton$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3835594867);
    var v'jetton_wallet_address = sc_0~__tact_load_address();
    var v'amount = sc_0~load_coins();
    var v'receiver = sc_0~__tact_load_address();
    return (sc_0, (v'jetton_wallet_address, v'amount, v'receiver));
}

;;
;; Type: TonupTosRegistryV2
;;

builder $TonupTosRegistryV2$_store(builder build_0, (slice, int) v) inline {
    var (v'owner, v'number_users) = v;
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = build_0.store_uint(v'number_users, 32);
    return build_0;
}

(slice, ((slice, int))) $TonupTosRegistryV2$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    var v'number_users = sc_0~load_uint(32);
    return (sc_0, (v'owner, v'number_users));
}

(slice, ((slice))) $TonupTosRegistryV2$init$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    return (sc_0, (v'owner));
}

(slice, int) $TonupTosRegistryV2$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$TonupTosRegistryV2$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (slice owner) = $sc~$TonupTosRegistryV2$init$_load();
        $sc.end_parse();
        return $TonupTosRegistryV2$_contract_init(owner);
    }
}

() $TonupTosRegistryV2$_contract_store((slice, int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $TonupTosRegistryV2$_store(b, v);
    set_data(b.end_cell());
}

;;
;; Type: TonupTosV2Child
;;

builder $TonupTosV2Child$init$_store(builder build_0, (slice, slice) v) inline {
    var (v'master, v'owner) = v;
    build_0 = __tact_store_address(build_0, v'master);
    build_0 = __tact_store_address(build_0, v'owner);
    return build_0;
}

(cell, cell) $TonupTosV2Child$_init_child(cell sys', slice $master, slice $owner) inline_ref {
    slice sc' = sys'.begin_parse();
    cell source = sc'~load_dict();
    cell contracts = new_dict();
    
    ;; Contract Code: TonupTosV2Child
    cell mine = __tact_dict_get_code(source, 59613);
    contracts = __tact_dict_set_code(contracts, 59613, mine);
    
    ;; Build cell
    builder b = begin_cell();
    b = b.store_ref(begin_cell().store_dict(contracts).end_cell());
    b = b.store_int(false, 1);
    b = $TonupTosV2Child$init$_store(b, ($master, $owner));
    return (mine, b.end_cell());
}