;;
;; Header files for TokenDistributionParent
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $TokenClaimRequest$_load
(slice, ((slice, int))) $TokenClaimRequest$_load(slice sc_0) inline;

;; $OwnerWithdrawalRequest$_load
(slice, ((slice))) $OwnerWithdrawalRequest$_load(slice sc_0) inline;

;; $TokenNotification$_load
(slice, ((int, int, slice, slice))) $TokenNotification$_load(slice sc_0) inline;

;; $TokenTransfer$_store
builder $TokenTransfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref;

;; $TokenTransfer$_store_cell
cell $TokenTransfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline;

;; $TokenDistributionParent$_store
builder $TokenDistributionParent$_store(builder build_0, (slice, slice, int, int, int, int, int) v) inline;

;; $TokenDistributionParent$_load
(slice, ((slice, slice, int, int, int, int, int))) $TokenDistributionParent$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $TokenDistributionParent$init$_load
(slice, ((slice, int, int, int))) $TokenDistributionParent$init$_load(slice sc_0) inline;

;; $TokenDistributionChild$init$_store
builder $TokenDistributionChild$init$_store(builder build_0, (slice, slice, int, int, int) v) inline;

;; $TokenDistributionParent$_contract_init
(slice, slice, int, int, int, int, int) $TokenDistributionParent$_contract_init(slice $owner, int $amount, int $interval, int $seqno) impure inline_ref;

;; $TokenDistributionParent$_contract_load
(slice, slice, int, int, int, int, int) $TokenDistributionParent$_contract_load() impure inline_ref;

;; $TokenDistributionParent$_contract_store
() $TokenDistributionParent$_contract_store((slice, slice, int, int, int, int, int) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_code_data(slice to, int value, int mode, cell code, cell data) inline;

;; $TokenDistributionChild$_init_child
(cell, cell) $TokenDistributionChild$_init_child(cell sys', slice $parentAddress, slice $owner, int $amount, int $interval, int $seqno) inline_ref;

;; $TokenDistributionParent$_fun_deployChildContract
((slice, slice, int, int, int, int, int), ()) $TokenDistributionParent$_fun_deployChildContract((slice, slice, int, int, int, int, int) $self, slice $userAddress) impure inline_ref;

;; $TokenDistributionParent$_fun_claimInterval
((slice, slice, int, int, int, int, int), int) $TokenDistributionParent$_fun_claimInterval((slice, slice, int, int, int, int, int) $self) impure inline_ref;

;; $TokenDistributionParent$_fun_claimAmount
((slice, slice, int, int, int, int, int), int) $TokenDistributionParent$_fun_claimAmount((slice, slice, int, int, int, int, int) $self) impure inline_ref;

;; $TokenDistributionParent$_fun_supply
((slice, slice, int, int, int, int, int), int) $TokenDistributionParent$_fun_supply((slice, slice, int, int, int, int, int) $self) impure inline_ref;

;; $TokenDistributionParent$_fun_owner
((slice, slice, int, int, int, int, int), slice) $TokenDistributionParent$_fun_owner((slice, slice, int, int, int, int, int) $self) impure inline_ref;

;; $TokenDistributionParent$_fun_claimed
((slice, slice, int, int, int, int, int), int) $TokenDistributionParent$_fun_claimed((slice, slice, int, int, int, int, int) $self) impure inline_ref;

;; $TokenDistributionParent$_fun_tokenAddress
((slice, slice, int, int, int, int, int), slice) $TokenDistributionParent$_fun_tokenAddress((slice, slice, int, int, int, int, int) $self) impure inline_ref;

;; $TokenDistributionParent$_fun_childAddress
((slice, slice, int, int, int, int, int), slice) $TokenDistributionParent$_fun_childAddress((slice, slice, int, int, int, int, int) $self, slice $user) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $TokenDistributionParent$_fun_forward
((slice, slice, int, int, int, int, int), ()) $TokenDistributionParent$_fun_forward((slice, slice, int, int, int, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $TokenDistributionParent$_fun_notify
((slice, slice, int, int, int, int, int), ()) $TokenDistributionParent$_fun_notify((slice, slice, int, int, int, int, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_value_to_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_mode_body(int value, slice to, int mode, cell body) inline;

;; $TokenTransfer$_constructor_queryId_amount_destination_responseDestination_customPayload_forwardTonAmount_forwardPayload
((int, int, slice, slice, cell, int, slice)) $TokenTransfer$_constructor_queryId_amount_destination_responseDestination_customPayload_forwardTonAmount_forwardPayload(int queryId, int amount, slice destination, slice responseDestination, cell customPayload, int forwardTonAmount, slice forwardPayload) inline;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice to, int value, int mode) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
