;;
;; Header files for WitnessConsensus
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_get_int_slice
slice __tact_dict_get_int_slice(cell d, int kl, int k) inline;

;; __tact_dict_set_slice_int
(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_dict_get_slice_int
int __tact_dict_get_slice_int(cell d, int kl, slice k, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_int_eq_nullable_one
int __tact_int_eq_nullable_one(int a, int b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $ChangeOwner$_load
(slice, ((int, slice))) $ChangeOwner$_load(slice sc_0) inline;

;; $ChangeOwnerOk$_store
builder $ChangeOwnerOk$_store(builder build_0, (int, slice) v) inline;

;; $ChangeOwnerOk$_store_cell
cell $ChangeOwnerOk$_store_cell((int, slice) v) inline;

;; $NewParticipantEvent$_store
builder $NewParticipantEvent$_store(builder build_0, (slice, int, int) v) inline;

;; $NewParticipantEvent$_store_cell
cell $NewParticipantEvent$_store_cell((slice, int, int) v) inline;

;; $ParticipantQuitEvent$_store
builder $ParticipantQuitEvent$_store(builder build_0, (slice, int, int) v) inline;

;; $ParticipantQuitEvent$_store_cell
cell $ParticipantQuitEvent$_store_cell((slice, int, int) v) inline;

;; $OpenRound$_load
(slice, ((int))) $OpenRound$_load(slice sc_0) inline;

;; $Vote$_load
(slice, ((int, slice))) $Vote$_load(slice sc_0) inline;

;; $FinalizeRound$_load
(slice, ((int))) $FinalizeRound$_load(slice sc_0) inline;

;; $InternalRoundOpened$_load
(slice, ((int))) $InternalRoundOpened$_load(slice sc_0) inline;

;; $InternalVote$_store
builder $InternalVote$_store(builder build_0, (int, slice, slice, int, int) v) inline;

;; $InternalVote$_store_cell
cell $InternalVote$_store_cell((int, slice, slice, int, int) v) inline;

;; $InternalFinalize$_store
builder $InternalFinalize$_store(builder build_0, (int) v) inline;

;; $InternalFinalize$_store_cell
cell $InternalFinalize$_store_cell((int) v) inline;

;; $InternalFinalized$_load
(slice, ((int, slice, int, int, cell, int, cell, cell, int, cell))) $InternalFinalized$_load(slice sc_0) inline_ref;

;; $PromoteToGuard$_load
(slice, ((slice))) $PromoteToGuard$_load(slice sc_0) inline;

;; $RevokeGuard$_load
(slice, ((slice))) $RevokeGuard$_load(slice sc_0) inline;

;; $SetRoundReward$_load
(slice, ((int))) $SetRoundReward$_load(slice sc_0) inline;

;; $WitnessConsensus$_store
builder $WitnessConsensus$_store(builder build_0, (slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) v) inline;

;; $WitnessConsensus$_load
(slice, ((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int))) $WitnessConsensus$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $VotingRound$init$_store
builder $VotingRound$init$_store(builder build_0, (slice, int) v) inline;

;; $WitnessConsensus$init$_load
(slice, ((slice))) $WitnessConsensus$init$_load(slice sc_0) inline;

;; $WitnessConsensus$_contract_init
(slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $WitnessConsensus$_contract_init(slice $owner) impure inline_ref;

;; $WitnessConsensus$_contract_load
(slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $WitnessConsensus$_contract_load() impure inline_ref;

;; $WitnessConsensus$_contract_store
() $WitnessConsensus$_contract_store((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $VotingRound$_init_child
(cell, cell) $VotingRound$_init_child(cell sys', slice $parent, int $round) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $WitnessConsensus$_fun_openedRound
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), int) $WitnessConsensus$_fun_openedRound((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self) impure inline_ref;

;; $WitnessConsensus$_fun_participantStake
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), int) $WitnessConsensus$_fun_participantStake((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self, slice $participant) impure inline_ref;

;; $WitnessConsensus$_fun_pendingReward
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), int) $WitnessConsensus$_fun_pendingReward((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self, slice $participant) impure inline_ref;

;; $WitnessConsensus$_fun_checkGuardAddress
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), int) $WitnessConsensus$_fun_checkGuardAddress((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self, slice $address) impure inline_ref;

;; $WitnessConsensus$_fun_votingRoundAddress
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), slice) $WitnessConsensus$_fun_votingRoundAddress((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self, int $round) impure inline_ref;

;; $WitnessConsensus$_fun_forward
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), ()) $WitnessConsensus$_fun_forward((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $WitnessConsensus$_fun_reply
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), ()) $WitnessConsensus$_fun_reply((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self, cell $body) impure inline;

;; $WitnessConsensus$_fun_notify
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), ()) $WitnessConsensus$_fun_notify((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self, cell $body) impure inline;

;; $WitnessConsensus$_fun_requireOwner
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), ()) $WitnessConsensus$_fun_requireOwner((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self) impure inline_ref;

;; $WitnessConsensus$_fun_owner
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), slice) $WitnessConsensus$_fun_owner((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self) impure inline_ref;

;; $WitnessConsensus$_fun_requireNotStopped
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), ()) $WitnessConsensus$_fun_requireNotStopped((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self) impure inline_ref;

;; $WitnessConsensus$_fun_requireStopped
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), ()) $WitnessConsensus$_fun_requireStopped((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self) impure inline_ref;

;; $WitnessConsensus$_fun_stopped
((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int), int) $WitnessConsensus$_fun_stopped((slice, int, int, int, int, int, int, cell, cell, cell, cell, int, int, int) $self) impure inline_ref;

;; $NewParticipantEvent$_constructor_address_votes_unfreezeTime
((slice, int, int)) $NewParticipantEvent$_constructor_address_votes_unfreezeTime(slice address, int votes, int unfreezeTime) inline;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice to, int value, int mode) inline;

;; $SendParameters$_constructor_to_bounce_value
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value(slice to, int bounce, int value) inline;

;; $ParticipantQuitEvent$_constructor_address_votes_unfreezeTime
((slice, int, int)) $ParticipantQuitEvent$_constructor_address_votes_unfreezeTime(slice address, int votes, int unfreezeTime) inline;

;; $SendParameters$_constructor_to_body_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_body_value_mode(slice to, cell body, int value, int mode) inline;

;; $InternalFinalize$_constructor_minVotes
((int)) $InternalFinalize$_constructor_minVotes(int minVotes) inline;

;; $SendParameters$_constructor_to_value_mode_code_data_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_code_data_body(slice to, int value, int mode, cell code, cell data, cell body) inline;

;; $InternalVote$_constructor_round_payload_participant_guard_votes
((int, slice, slice, int, int)) $InternalVote$_constructor_round_payload_participant_guard_votes(int round, slice payload, slice participant, int guard, int votes) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;

;; $ChangeOwnerOk$_constructor_queryId_newOwner
((int, slice)) $ChangeOwnerOk$_constructor_queryId_newOwner(int queryId, slice newOwner) inline;
