;;
;; Header files for LotteryPlayTactContract
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_prepare_random
() __tact_prepare_random() impure inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_cell
(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_float_to_string
slice __tact_float_to_string(int src, int digits) inline_ref;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $JoinChildInfo$_store
builder $JoinChildInfo$_store(builder build_0, (int, slice) v) inline;

;; $JoinChildInfo$_store_cell
cell $JoinChildInfo$_store_cell((int, slice) v) inline;

;; $JoinChildInfo$_load
(slice, ((int, slice))) $JoinChildInfo$_load(slice sc_0) inline;

;; $PlayChildInfo$_store
builder $PlayChildInfo$_store(builder build_0, (int, slice) v) inline;

;; $PlayChildInfo$_store_cell
cell $PlayChildInfo$_store_cell((int, slice) v) inline;

;; $PlayChildInfo$_load
(slice, ((int, slice))) $PlayChildInfo$_load(slice sc_0) inline;

;; $DrawChildInfo$_store
builder $DrawChildInfo$_store(builder build_0, (int, slice) v) inline;

;; $DrawChildInfo$_store_cell
cell $DrawChildInfo$_store_cell((int, slice) v) inline;

;; $DrawChildInfo$_load
(slice, ((int, slice))) $DrawChildInfo$_load(slice sc_0) inline;

;; $PlayerInfo$_store
builder $PlayerInfo$_store(builder build_0, (slice, int) v) inline;

;; $PlayerInfo$_store_cell
cell $PlayerInfo$_store_cell((slice, int) v) inline;

;; $PlayerInfo$_load
(slice, ((slice, int))) $PlayerInfo$_load(slice sc_0) inline;

;; $PlayerInfo$_as_optional
tuple $PlayerInfo$_as_optional((slice, int) v) inline;

;; $PlayerInfo$_load_opt
tuple $PlayerInfo$_load_opt(cell cl) inline;

;; $LotteryPlayTactContract$_store
builder $LotteryPlayTactContract$_store(builder build_0, (slice, slice, int, cell, int, int, int, int) v) inline;

;; $LotteryPlayTactContract$_load
(slice, ((slice, slice, int, cell, int, int, int, int))) $LotteryPlayTactContract$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $PlayerInfo$_not_null
((slice, int)) $PlayerInfo$_not_null(tuple v) inline;

;; $LotteryPlayTactContract$init$_load
(slice, ((slice, slice, int, int))) $LotteryPlayTactContract$init$_load(slice sc_0) inline;

;; $LotteryPlayTactContract$_contract_init
(slice, slice, int, cell, int, int, int, int) $LotteryPlayTactContract$_contract_init(slice $owner, slice $father, int $seqno, int $quantity) impure inline_ref;

;; $LotteryPlayTactContract$_contract_load
(slice, slice, int, cell, int, int, int, int) $LotteryPlayTactContract$_contract_load() impure inline_ref;

;; $LotteryPlayTactContract$_contract_store
() $LotteryPlayTactContract$_contract_store((slice, slice, int, cell, int, int, int, int) v) impure inline;

;; $global_random
int $global_random(int $min, int $max) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $Int$_fun_toCoinsString
slice $Int$_fun_toCoinsString(int $self) impure inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $LotteryPlayTactContract$_fun_isJoined
((slice, slice, int, cell, int, int, int, int), int) $LotteryPlayTactContract$_fun_isJoined((slice, slice, int, cell, int, int, int, int) $self, slice $address) impure inline_ref;

;; $LotteryPlayTactContract$_fun_calculateWinner
((slice, slice, int, cell, int, int, int, int), slice) $LotteryPlayTactContract$_fun_calculateWinner((slice, slice, int, cell, int, int, int, int) $self) impure inline_ref;

;; $LotteryPlayTactContract$_fun_balance
((slice, slice, int, cell, int, int, int, int), slice) $LotteryPlayTactContract$_fun_balance((slice, slice, int, cell, int, int, int, int) $self) impure inline_ref;

;; $LotteryPlayTactContract$_fun_owner
((slice, slice, int, cell, int, int, int, int), slice) $LotteryPlayTactContract$_fun_owner((slice, slice, int, cell, int, int, int, int) $self) impure inline_ref;

;; $LotteryPlayTactContract$_fun_father
((slice, slice, int, cell, int, int, int, int), slice) $LotteryPlayTactContract$_fun_father((slice, slice, int, cell, int, int, int, int) $self) impure inline_ref;

;; $LotteryPlayTactContract$_fun_seqno
((slice, slice, int, cell, int, int, int, int), int) $LotteryPlayTactContract$_fun_seqno((slice, slice, int, cell, int, int, int, int) $self) impure inline_ref;

;; $LotteryPlayTactContract$_fun_playerList
((slice, slice, int, cell, int, int, int, int), cell) $LotteryPlayTactContract$_fun_playerList((slice, slice, int, cell, int, int, int, int) $self) impure inline_ref;

;; $LotteryPlayTactContract$_fun_playerQuantity
((slice, slice, int, cell, int, int, int, int), int) $LotteryPlayTactContract$_fun_playerQuantity((slice, slice, int, cell, int, int, int, int) $self) impure inline_ref;

;; $LotteryPlayTactContract$_fun_conditionQuantity
((slice, slice, int, cell, int, int, int, int), int) $LotteryPlayTactContract$_fun_conditionQuantity((slice, slice, int, cell, int, int, int, int) $self) impure inline_ref;

;; $LotteryPlayTactContract$_fun_finished
((slice, slice, int, cell, int, int, int, int), int) $LotteryPlayTactContract$_fun_finished((slice, slice, int, cell, int, int, int, int) $self) impure inline_ref;

;; $LotteryPlayTactContract$_fun_winner
((slice, slice, int, cell, int, int, int, int), slice) $LotteryPlayTactContract$_fun_winner((slice, slice, int, cell, int, int, int, int) $self) impure inline_ref;

;; $LotteryPlayTactContract$_fun_forward
((slice, slice, int, cell, int, int, int, int), ()) $LotteryPlayTactContract$_fun_forward((slice, slice, int, cell, int, int, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $LotteryPlayTactContract$_fun_notify
((slice, slice, int, cell, int, int, int, int), ()) $LotteryPlayTactContract$_fun_notify((slice, slice, int, cell, int, int, int, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_bounce
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce(slice to, int value, int mode, int bounce) inline;

;; $PlayerInfo$_constructor_address_amount
((slice, int)) $PlayerInfo$_constructor_address_amount(slice address, int amount) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
