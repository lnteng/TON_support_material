;;
;; Header files for Jackpot
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_prepare_random
() __tact_prepare_random() impure inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_slice
(cell, ()) __tact_dict_set_int_slice(cell d, int kl, int k, slice v) inline;

;; __tact_dict_set_slice_cell
(cell, ()) __tact_dict_set_slice_cell(cell d, int kl, slice k, cell v) inline;

;; __tact_dict_get_slice_cell
cell __tact_dict_get_slice_cell(cell d, int kl, slice k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Player$_store
builder $Player$_store(builder build_0, (slice, int, int, int) v) inline;

;; $Player$_store_cell
cell $Player$_store_cell((slice, int, int, int) v) inline;

;; $Player$_load
(slice, ((slice, int, int, int))) $Player$_load(slice sc_0) inline;

;; $Player$_as_optional
tuple $Player$_as_optional((slice, int, int, int) v) inline;

;; $Player$_load_opt
tuple $Player$_load_opt(cell cl) inline;

;; $OwnerCashout$_load
(slice, ((int))) $OwnerCashout$_load(slice sc_0) inline;

;; $SetPlayersMax$_load
(slice, ((int))) $SetPlayersMax$_load(slice sc_0) inline;

;; $SetBetMin$_load
(slice, ((int))) $SetBetMin$_load(slice sc_0) inline;

;; $SetFeePercent$_load
(slice, ((int))) $SetFeePercent$_load(slice sc_0) inline;

;; $Jackpot$_store
builder $Jackpot$_store(builder build_0, (slice, int, int, int, int, cell, cell, int, int) v) inline;

;; $Jackpot$_load
(slice, ((slice, int, int, int, int, cell, cell, int, int))) $Jackpot$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Player$_get_address
_ $Player$_get_address((slice, int, int, int) v) inline;

;; $Player$_get_bet
_ $Player$_get_bet((slice, int, int, int) v) inline;

;; $Player$_get_ticket_start
_ $Player$_get_ticket_start((slice, int, int, int) v) inline;

;; $Player$_get_ticket_end
_ $Player$_get_ticket_end((slice, int, int, int) v) inline;

;; $Player$_not_null
((slice, int, int, int)) $Player$_not_null(tuple v) inline;

;; $DictPair$_get_key
_ $DictPair$_get_key((int, slice) v) inline;

;; $DictPair$_get_value
_ $DictPair$_get_value((int, slice) v) inline;

;; $DictPair$_not_null
((int, slice)) $DictPair$_not_null(tuple v) inline;

;; $DictPair$_as_optional
tuple $DictPair$_as_optional((int, slice) v) inline;

;; $Jackpot$init$_load
(slice, ((slice, int, int))) $Jackpot$init$_load(slice sc_0) inline;

;; $Jackpot$_contract_init
(slice, int, int, int, int, cell, cell, int, int) $Jackpot$_contract_init(slice $owner, int $bet_min, int $players_max) impure inline_ref;

;; $Jackpot$_contract_load
(slice, int, int, int, int, cell, cell, int, int) $Jackpot$_contract_load() impure inline_ref;

;; $Jackpot$_contract_store
() $Jackpot$_contract_store((slice, int, int, int, int, cell, cell, int, int) v) impure inline;

;; $global_random
int $global_random(int $min, int $max) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $DictPair$_constructor_key_value
((int, slice)) $DictPair$_constructor_key_value(int key, slice value) inline;

;; $global_DictGetMin
tuple $global_DictGetMin(cell $dict) impure inline_ref;

;; $global_DictGetNext
tuple $global_DictGetNext(cell $dict, int $pivot) impure inline_ref;

;; $Jackpot$_fun_IsPlayerInGame
((slice, int, int, int, int, cell, cell, int, int), int) $Jackpot$_fun_IsPlayerInGame((slice, int, int, int, int, cell, cell, int, int) $self, slice $address) impure inline_ref;

;; $Jackpot$_fun_CleanUp
((slice, int, int, int, int, cell, cell, int, int), ()) $Jackpot$_fun_CleanUp((slice, int, int, int, int, cell, cell, int, int) $self) impure inline_ref;

;; $Jackpot$_fun_get_bet_min
((slice, int, int, int, int, cell, cell, int, int), int) $Jackpot$_fun_get_bet_min((slice, int, int, int, int, cell, cell, int, int) $self) impure inline_ref;

;; $Jackpot$_fun_get_players_max
((slice, int, int, int, int, cell, cell, int, int), int) $Jackpot$_fun_get_players_max((slice, int, int, int, int, cell, cell, int, int) $self) impure inline_ref;

;; $Jackpot$_fun_get_players_current
((slice, int, int, int, int, cell, cell, int, int), int) $Jackpot$_fun_get_players_current((slice, int, int, int, int, cell, cell, int, int) $self) impure inline_ref;

;; $Jackpot$_fun_get_locked_balance
((slice, int, int, int, int, cell, cell, int, int), int) $Jackpot$_fun_get_locked_balance((slice, int, int, int, int, cell, cell, int, int) $self) impure inline_ref;

;; $Jackpot$_fun_get_winner_ticket
((slice, int, int, int, int, cell, cell, int, int), int) $Jackpot$_fun_get_winner_ticket((slice, int, int, int, int, cell, cell, int, int) $self) impure inline_ref;

;; $Jackpot$_fun_get_fee_percent
((slice, int, int, int, int, cell, cell, int, int), int) $Jackpot$_fun_get_fee_percent((slice, int, int, int, int, cell, cell, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $Jackpot$_fun_forward
((slice, int, int, int, int, cell, cell, int, int), ()) $Jackpot$_fun_forward((slice, int, int, int, int, cell, cell, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Jackpot$_fun_notify
((slice, int, int, int, int, cell, cell, int, int), ()) $Jackpot$_fun_notify((slice, int, int, int, int, cell, cell, int, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $Player$_constructor_address_bet_ticket_start_ticket_end
((slice, int, int, int)) $Player$_constructor_address_bet_ticket_start_ticket_end(slice address, int bet, int ticket_start, int ticket_end) inline;

;; $Winner$_constructor_address_ticket
((slice, int)) $Winner$_constructor_address_ticket(slice address, int ticket) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
