#pragma version >=0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "verifier_LootBoxContract.headers.fc";
#include "verifier_LootBoxContract.stdlib.fc";
#include "verifier_LootBoxContract.constants.fc";
#include "verifier_LootBoxContract.storage.fc";

;;
;; Contract LootBoxContract functions
;;

(slice, cell, (int, int, int)) $LootBoxContract$_contract_init(slice $owner) impure inline_ref {
    var (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin))) = (null(), null(), null());
    $self'owner = $owner;
    $self'usersStats = null();
    ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin) = $UserStats$_constructor_counter_biggestWin_lastWin(0, 0, 0);
    return ($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin));
}

int $global_randMultiplier() impure inline_ref {
    int $multiplier = 0;
    int $randomNumber = $global_random(0, 100);
    if (($randomNumber >= 80)) {
        $multiplier = 1000;
    } elseif (($randomNumber > 70)) {
        $multiplier = 500;
    } elseif (($randomNumber > 50)) {
        $multiplier = 200;
    } elseif (($randomNumber > 30)) {
        $multiplier = 100;
    } elseif (($randomNumber > 20)) {
        $multiplier = 50;
    } elseif (($randomNumber > 10)) {
        $multiplier = 10;
    } elseif (($randomNumber > 0)) {
        $multiplier = 1;
    }
    if (($randomNumber >= 90)) {
        int $secondMultiplier = $global_randMultiplier();
        $multiplier = ($multiplier + $secondMultiplier);
    }
    return $multiplier;
}

((slice, cell, (int, int, int)), tuple) $LootBoxContract$_fun_userStats((slice, cell, (int, int, int)) $self, slice $address) impure inline_ref {
    var (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin))) = $self;
    return (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)), $UserStats$_load_opt(__tact_dict_get_slice_cell($self'usersStats, 267, $address)));
}

((slice, cell, (int, int, int)), (int, int, int)) $LootBoxContract$_fun_globalStats((slice, cell, (int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin))) = $self;
    return (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)), ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin));
}

((slice, cell, (int, int, int)), ()) $LootBoxContract$_fun_requireOwner((slice, cell, (int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin))) = $self;
    throw_unless(132, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    return (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)), ());
}

((slice, cell, (int, int, int)), slice) $LootBoxContract$_fun_owner((slice, cell, (int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin))) = $self;
    return (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)), $self'owner);
}

;;
;; Receivers of a Contract LootBoxContract
;;

((slice, cell, (int, int, int)), ()) $LootBoxContract$_internal_text_095190194aee611ce895c5503adf85fd864de7905746142f608d3eb2faad14e4((slice, cell, (int, int, int)) $self) impure inline {
    var ($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)) = $self;
    ($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin))~$LootBoxContract$_fun_requireOwner();
    if ((__tact_my_balance() > 500000000)) {
        $global_send($SendParameters$_constructor_to_value_mode($self'owner, (__tact_my_balance() - 500000000), 2));
    }
    return (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)), ());
}

((slice, cell, (int, int, int)), ()) $LootBoxContract$_internal_text_63d7b83a30c74b848a140a4d6c239cef32c93b80b031bff041f005bea3426ccb((slice, cell, (int, int, int)) $self) impure inline {
    var ($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)) = $self;
    ($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin))~$LootBoxContract$_fun_requireOwner();
    return (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)), ());
}

((slice, cell, (int, int, int)), ()) $LootBoxContract$_internal_text_7cd04acd8fcc66cb4ccf305ef78247231df393eb9d90289e470ce02b2cb40306((slice, cell, (int, int, int)) $self) impure inline {
    var ($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)) = $self;
    ($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin))~$LootBoxContract$_fun_requireOwner();
    $global_send($SendParameters$_constructor_to_value_mode($self'owner, 0, 128));
    return (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)), ());
}

((slice, cell, (int, int, int)), ()) $LootBoxContract$_internal_text_1e3a46cb5cc3f633146032961a17c344b327be9f09f86cb2980f110fe6d5a55e((slice, cell, (int, int, int)) $self) impure inline {
    var ($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)) = $self;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    slice $sender = $ctx'sender;
    int $multiplier = $global_randMultiplier();
    int $winValue = (($ctx'value * $multiplier) / 100);
    tuple $message = __tact_string_builder_start_comment();
    if (((__tact_my_balance() - 50000000) >= $winValue)) {
        $message~__tact_string_builder_append(__gen_slice_string_4d1028f18ca174540eda43da95fe44253a49a891803f3ecbe31db64b63deafde());
        $message~__tact_string_builder_append(__tact_float_to_string($multiplier, 2));
        $global_send($SendParameters$_constructor_to_value_mode_body($sender, $winValue, 2, __tact_string_builder_end($message)));
        if ((~ null?($UserStats$_load_opt(__tact_dict_get_slice_cell($self'usersStats, 267, $sender))))) {
            var ($userStats'counter, $userStats'biggestWin, $userStats'lastWin) = $UserStats$_not_null($UserStats$_load_opt(__tact_dict_get_slice_cell($self'usersStats, 267, $sender)));
            int $biggestUserWin = $userStats'biggestWin;
            if (($winValue > $biggestUserWin)) {
                $biggestUserWin = $winValue;
            }
            $self'usersStats~__tact_dict_set_slice_cell(267, $sender, $UserStats$_store_cell($UserStats$_constructor_counter_biggestWin_lastWin(($userStats'counter + 1), $biggestUserWin, $winValue)));
        } else {
            $self'usersStats~__tact_dict_set_slice_cell(267, $sender, $UserStats$_store_cell($UserStats$_constructor_counter_biggestWin_lastWin(1, $winValue, $winValue)));
        }
        int $biggestGlobalWin = $self'globalStats'biggestWin;
        if (($winValue > $biggestGlobalWin)) {
            $biggestGlobalWin = $winValue;
        }
        ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin) = $UserStats$_constructor_counter_biggestWin_lastWin(($self'globalStats'counter + 1), $biggestGlobalWin, $winValue);
    } else {
        $message~__tact_string_builder_append(__gen_slice_string_f95fa680b739ef613be05a808ad23419185099cd9a5b1aebaf37b3f87790055b());
        $message~__tact_string_builder_append(__tact_float_to_string($winValue, 9));
        $message~__tact_string_builder_append(__gen_slice_string_21c25e31d0be0f8935708955bf54b2ed9cbc74c1b175903fdcbbfb4c12b2162c());
        $global_send($SendParameters$_constructor_to_value_mode_body($sender, 0, 64, __tact_string_builder_end($message)));
    }
    return (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)), ());
}

(((slice, cell, (int, int, int))), ()) $LootBoxContract$_internal_binary_Deploy((slice, cell, (int, int, int)) $self, (int) $deploy) impure inline {
    var ($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin))~$LootBoxContract$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'owner, $self'usersStats, ($self'globalStats'counter, $self'globalStats'biggestWin, $self'globalStats'lastWin)), ());
}

;;
;; Get methods of a Contract LootBoxContract
;;

_ %userStats(slice $$address) method_id(128345) {
    slice $address = __tact_verify_address($$address);
    var self = $LootBoxContract$_contract_load();
    var res = self~$LootBoxContract$_fun_userStats($address);
    return $UserStats$_to_opt_external(res);
}

_ %globalStats() method_id(66498) {
    var self = $LootBoxContract$_contract_load();
    var res = self~$LootBoxContract$_fun_globalStats();
    return $UserStats$_to_external(res);
}

_ %owner() method_id(83229) {
    var self = $LootBoxContract$_contract_load();
    var res = self~$LootBoxContract$_fun_owner();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmZJ1i6tEHUNMFDuYmTw5AZy2ssGhLwJV1PLTasJD5uYd7";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract LootBoxContract
;;

((slice, cell, (int, int, int)), int) $LootBoxContract$_contract_router_internal((slice, cell, (int, int, int)) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$LootBoxContract$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "withdraw" message
        if (text_op == 0x095190194aee611ce895c5503adf85fd864de7905746142f608d3eb2faad14e4) {
            self~$LootBoxContract$_internal_text_095190194aee611ce895c5503adf85fd864de7905746142f608d3eb2faad14e4();
            return (self, true);
        }
        
        ;; Receive "top_up_balance" message
        if (text_op == 0x63d7b83a30c74b848a140a4d6c239cef32c93b80b031bff041f005bea3426ccb) {
            self~$LootBoxContract$_internal_text_63d7b83a30c74b848a140a4d6c239cef32c93b80b031bff041f005bea3426ccb();
            return (self, true);
        }
        
        ;; Receive "withdraw_all" message
        if (text_op == 0x7cd04acd8fcc66cb4ccf305ef78247231df393eb9d90289e470ce02b2cb40306) {
            self~$LootBoxContract$_internal_text_7cd04acd8fcc66cb4ccf305ef78247231df393eb9d90289e470ce02b2cb40306();
            return (self, true);
        }
        
        ;; Receive "play" message
        if (text_op == 0x1e3a46cb5cc3f633146032961a17c344b327be9f09f86cb2980f110fe6d5a55e) {
            self~$LootBoxContract$_internal_text_1e3a46cb5cc3f633146032961a17c344b327be9f09f86cb2980f110fe6d5a55e();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $LootBoxContract$_contract_load();
    
    ;; Handle operation
    int handled = self~$LootBoxContract$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $LootBoxContract$_contract_store(self);
}
