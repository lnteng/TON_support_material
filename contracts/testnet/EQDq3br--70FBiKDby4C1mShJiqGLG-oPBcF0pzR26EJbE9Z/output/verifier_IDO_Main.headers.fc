;;
;; Header files for IDO_Main
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $IDO_Main$_store
builder $IDO_Main$_store(builder build_0, (int, slice) v) inline;

;; $IDO_Main$_load
(slice, ((int, slice))) $IDO_Main$_load(slice sc_0) inline;

;; $IDO_Main$init$_load
(slice, ((slice))) $IDO_Main$init$_load(slice sc_0) inline;

;; $Round$init$_store
builder $Round$init$_store(builder build_0, (int, slice) v) inline;

;; $IDO_Main$_contract_init
(int, slice) $IDO_Main$_contract_init(slice $_owner) impure inline_ref;

;; $IDO_Main$_contract_load
(int, slice) $IDO_Main$_contract_load() impure inline_ref;

;; $IDO_Main$_contract_store
() $IDO_Main$_contract_store((int, slice) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Round$_init_child
(cell, cell) $Round$_init_child(cell sys', int $_project_id, slice $_owner) inline_ref;

;; $IDO_Main$_fun_get_round_address
((int, slice), slice) $IDO_Main$_fun_get_round_address((int, slice) $self, int $project_id) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_code_data(slice to, int value, int mode, int bounce, cell code, cell data) inline;
