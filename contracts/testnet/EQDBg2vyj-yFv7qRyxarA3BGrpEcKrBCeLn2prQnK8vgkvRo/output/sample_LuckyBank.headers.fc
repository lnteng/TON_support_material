;;
;; Header files for LuckyBank
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $GetRoyaltyParams$_load
(slice, ((int))) $GetRoyaltyParams$_load(slice sc_0) inline;

;; $ReportRoyaltyParams$_store
builder $ReportRoyaltyParams$_store(builder build_0, (int, int, int, slice) v) inline;

;; $ReportRoyaltyParams$_store_cell
cell $ReportRoyaltyParams$_store_cell((int, int, int, slice) v) inline;

;; $RoyaltyParams$_store
builder $RoyaltyParams$_store(builder build_0, (int, int, slice) v) inline;

;; $RoyaltyParams$_load
(slice, ((int, int, slice))) $RoyaltyParams$_load(slice sc_0) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, slice, slice, cell, int, slice) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, slice, slice, cell, int, slice) v) inline;

;; $ChangeOwner$_load
(slice, ((int, slice))) $ChangeOwner$_load(slice sc_0) inline;

;; $EditContent$_load
(slice, ((int, cell, cell))) $EditContent$_load(slice sc_0) inline;

;; $LuckyMint$_load
(slice, ((int))) $LuckyMint$_load(slice sc_0) inline;

;; $LuckyBank$_store
builder $LuckyBank$_store(builder build_0, (slice, cell, cell, (int, int, slice)) v) inline;

;; $LuckyBank$_load
(slice, ((slice, cell, cell, (int, int, slice)))) $LuckyBank$_load(slice sc_0) inline;

;; $CollectionData$_to_external
(int, cell, slice) $CollectionData$_to_external(((int, cell, slice)) v) inline;

;; $RoyaltyParams$_to_external
(int, int, slice) $RoyaltyParams$_to_external(((int, int, slice)) v) inline;

;; $LuckyWallet$init$_store
builder $LuckyWallet$init$_store(builder build_0, (slice, int) v) inline;

;; $LuckyBank$init$_load
(slice, ((slice, cell, cell, (int, int, slice)))) $LuckyBank$init$_load(slice sc_0) inline;

;; $LuckyBank$_contract_init
(slice, cell, cell, (int, int, slice)) $LuckyBank$_contract_init(slice $owner_address, cell $collection_content, cell $collection_base, (int, int, slice) $royalty_params) impure inline_ref;

;; $LuckyBank$_contract_load
(slice, cell, cell, (int, int, slice)) $LuckyBank$_contract_load() impure inline_ref;

;; $LuckyBank$_contract_store
() $LuckyBank$_contract_store((slice, cell, cell, (int, int, slice)) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $LuckyWallet$_init_child
(cell, cell) $LuckyWallet$_init_child(cell sys', slice $collection_address, int $item_index) inline_ref;

;; $SendParameters$_constructor_to_value_bounce_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body_code_data(slice to, int value, int bounce, int mode, cell body, cell code, cell data) inline;

;; $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload
((int, slice, slice, cell, int, slice)) $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload(int query_id, slice new_owner, slice response_destination, cell custom_payload, int forward_amount, slice forward_payload) inline;

;; $LuckyBank$_fun_getNftItemInit
((slice, cell, cell, (int, int, slice)), (cell, cell)) $LuckyBank$_fun_getNftItemInit((slice, cell, cell, (int, int, slice)) $self, int $item_index) impure inline_ref;

;; $LuckyBank$_fun_mint
((slice, cell, cell, (int, int, slice)), ()) $LuckyBank$_fun_mint((slice, cell, cell, (int, int, slice)) $self, slice $sender, int $msgValue, int $itemIndex) impure inline_ref;

;; $CollectionData$_constructor_next_item_index_collection_content_owner_address
((int, cell, slice)) $CollectionData$_constructor_next_item_index_collection_content_owner_address(int next_item_index, cell collection_content, slice owner_address) inline;

;; $LuckyBank$_fun_get_collection_data
((slice, cell, cell, (int, int, slice)), (int, cell, slice)) $LuckyBank$_fun_get_collection_data((slice, cell, cell, (int, int, slice)) $self) impure inline_ref;

;; $LuckyBank$_fun_get_nft_address_by_index
((slice, cell, cell, (int, int, slice)), slice) $LuckyBank$_fun_get_nft_address_by_index((slice, cell, cell, (int, int, slice)) $self, int $item_index) impure inline_ref;

;; $LuckyBank$_fun_get_nft_content
((slice, cell, cell, (int, int, slice)), cell) $LuckyBank$_fun_get_nft_content((slice, cell, cell, (int, int, slice)) $self, int $index, cell $individual_content) impure inline_ref;

;; $LuckyBank$_fun_royalty_params
((slice, cell, cell, (int, int, slice)), (int, int, slice)) $LuckyBank$_fun_royalty_params((slice, cell, cell, (int, int, slice)) $self) impure inline_ref;

;; $RoyaltyParams$_constructor_numerator_denominator_destination
((int, int, slice)) $RoyaltyParams$_constructor_numerator_denominator_destination(int numerator, int denominator, slice destination) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $ReportRoyaltyParams$_constructor_query_id_numerator_denominator_destination
((int, int, int, slice)) $ReportRoyaltyParams$_constructor_query_id_numerator_denominator_destination(int query_id, int numerator, int denominator, slice destination) inline;
