;;
;; Header files for Task4
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits_nullable_one
int __tact_slice_eq_bits_nullable_one(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $OwnershipAssigned$_load
(slice, ((int, slice, slice))) $OwnershipAssigned$_load(slice sc_0) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, slice, slice, cell, int, slice) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, slice, slice, cell, int, slice) v) inline;

;; $NftWithdrawal$_load
(slice, ((int, slice))) $NftWithdrawal$_load(slice sc_0) inline;

;; $Task4$_store
builder $Task4$_store(builder build_0, (int, int, slice, slice) v) inline;

;; $Task4$_load
(slice, ((int, int, slice, slice))) $Task4$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Task4$init$_load
(slice, ((int))) $Task4$init$_load(slice sc_0) inline;

;; $Task4$_contract_init
(int, int, slice, slice) $Task4$_contract_init(int $seed) impure inline_ref;

;; $Task4$_contract_load
(int, int, slice, slice) $Task4$_contract_load() impure inline_ref;

;; $Task4$_contract_store
() $Task4$_contract_store((int, int, slice, slice) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Task4$_fun_time
((int, int, slice, slice), int) $Task4$_fun_time((int, int, slice, slice) $self) impure inline_ref;

;; $Task4$_fun_nft
((int, int, slice, slice), slice) $Task4$_fun_nft((int, int, slice, slice) $self) impure inline_ref;

;; $Task4$_fun_owner
((int, int, slice, slice), slice) $Task4$_fun_owner((int, int, slice, slice) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $Task4$_fun_forward
((int, int, slice, slice), ()) $Task4$_fun_forward((int, int, slice, slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Task4$_fun_reply
((int, int, slice, slice), ()) $Task4$_fun_reply((int, int, slice, slice) $self, cell $body) impure inline;

;; $Task4$_fun_notify
((int, int, slice, slice), ()) $Task4$_fun_notify((int, int, slice, slice) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_body(slice to, int value, int bounce, cell body) inline;

;; $Transfer$_constructor_queryId_newOwner_responseDestination_customPayload_forwardAmount_forwardPayload
((int, slice, slice, cell, int, slice)) $Transfer$_constructor_queryId_newOwner_responseDestination_customPayload_forwardAmount_forwardPayload(int queryId, slice newOwner, slice responseDestination, cell customPayload, int forwardAmount, slice forwardPayload) inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body(slice to, int value, int bounce, int mode, cell body) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
