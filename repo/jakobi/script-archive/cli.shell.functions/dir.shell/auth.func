# created     PJ 200907XX jakobi@acm.org
# copyright:  (c) 2009 jakobi@acm.org, GPL v3 or later
# archive:    http://jakobi.github.com/script-archive-doc/

export GPG_TTY GPG_AGENT_INFO SSH_AUTH_SOCK SSH_AGENT_PID

# see also: newxsession

# I don't really see how to avoid this fork/exec?
GPG_TTY=`tty` # probably /proc/self/fd/0 - 2

[ -f ~/.gnupg/env.$HOSTNAME            ] && . ~/.gnupg/env.$HOSTNAME            2>/dev/null
[ -f ~/.gnupg/gpg-agent-info-$HOSTNAME ] && . ~/.gnupg/gpg-agent-info-$HOSTNAME 2>/dev/null
#echo $GPG_AGENT_INFO
if [ "$SSH_AUTH_SOCK" != "" ]; then
   if test $SSH_AUTH_SOCK -nt ~/.ssh/env.$HOSTNAME; then
      echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK;export SSH_AUTH_SOCK  > ~/.ssh/env.$HOSTNAME
      echo SSH_AGENT_PID=$SSH_AGENT_PID; export SSH_AGENT_PID" >>~/.ssh/env.$HOSTNAME
   else
      [ -f ~/.ssh/env.$HOSTNAME ] && . ~/.ssh/env.$HOSTNAME >/dev/null
   fi
else
      [ -f ~/.ssh/env.$HOSTNAME ] && . ~/.ssh/env.$HOSTNAME >/dev/null
fi

# better explicitely run one ssh -M -N / ssh -M ping -i 60 
# for slow links otherwise avoid sharing!
# alias ssh="ssh -o 'ControlMaster auto'"


# ---------------------------------------------------------------------------------
# ancient kefk

# function ragent {
#    zap -y ssh-agent
#    iagent
# }
# function iagent {
#    ps -ef | grep -v grep | grep ssh-agent || {
#       rm /tmp/ssh-jakobi/* 2>/dev/null
#       ssh-agent > ~/.ssh/env.$HOSTNAME
#       . ~/.ssh/env.$HOSTNAME
#       ssh-add ~/.ssh/identity ~/.ssh/id_rsa || echo Error in SSHAUTH
#    }
#    . ~/.ssh/env.$HOSTNAME 2>/dev/null
# }


# vim:filetype=sh
