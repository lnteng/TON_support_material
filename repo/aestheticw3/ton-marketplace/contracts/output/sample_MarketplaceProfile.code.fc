#pragma version >=0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "sample_MarketplaceProfile.headers.fc";
#include "sample_MarketplaceProfile.stdlib.fc";
#include "sample_MarketplaceProfile.storage.fc";

;;
;; Contract MarketplaceProfile functions
;;

(int, int, cell, slice, slice) $MarketplaceProfile$_contract_init(slice $master, slice $owner) impure inline_ref {
    var (($self'idx, $self'max, $self'ads, $self'master, $self'owner)) = (0, 10, null(), null(), null());
    $self'master = $master;
    $self'owner = $owner;
    return ($self'idx, $self'max, $self'ads, $self'master, $self'owner);
}

((int, int, cell, slice, slice), cell) $MarketplaceProfile$_fun_ads((int, int, cell, slice, slice) $self) impure inline_ref {
    var (($self'idx, $self'max, $self'ads, $self'master, $self'owner)) = $self;
    return (($self'idx, $self'max, $self'ads, $self'master, $self'owner), $self'ads);
}

((int, int, cell, slice, slice), ()) $MarketplaceProfile$_fun_requireOwner((int, int, cell, slice, slice) $self) impure inline_ref {
    var (($self'idx, $self'max, $self'ads, $self'master, $self'owner)) = $self;
    throw_unless(132, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    return (($self'idx, $self'max, $self'ads, $self'master, $self'owner), ());
}

((int, int, cell, slice, slice), slice) $MarketplaceProfile$_fun_owner((int, int, cell, slice, slice) $self) impure inline_ref {
    var (($self'idx, $self'max, $self'ads, $self'master, $self'owner)) = $self;
    return (($self'idx, $self'max, $self'ads, $self'master, $self'owner), $self'owner);
}

;;
;; Receivers of a Contract MarketplaceProfile
;;

(((int, int, cell, slice, slice)), ()) $MarketplaceProfile$_internal_binary_AdInfo((int, int, cell, slice, slice) $self, (slice, slice, slice, int, slice) $msg) impure inline {
    var ($self'idx, $self'max, $self'ads, $self'master, $self'owner) = $self;
    var ($msg'name, $msg'description, $msg'location, $msg'cost, $msg'owner) = $msg;
    ($self'idx, $self'max, $self'ads, $self'master, $self'owner)~$MarketplaceProfile$_fun_requireOwner();
    var ($local_init'code, $local_init'data) = $MarketplaceLocal$_init_child(__tact_context_sys, $msg'location, $self'master);
    $self'ads~__tact_dict_set_int_slice(257, $self'idx, $global_contractAddress(($local_init'code, $local_init'data)));
    $self'idx = ($self'idx + 1);
    $global_send($SendParameters$_constructor_to_value_body_data_code($global_contractAddress(($local_init'code, $local_init'data)), 20000000, $AdInfo$_store_cell($AdInfo$_constructor_name_description_location_cost_owner($msg'name, $msg'description, $msg'location, $msg'cost, $self'owner)), $local_init'data, $local_init'code));
    return (($self'idx, $self'max, $self'ads, $self'master, $self'owner), ());
}

((int, int, cell, slice, slice), ()) $MarketplaceProfile$_internal_text_f86746a34571ea19a7c6f61cf6a41f73fe359c1524b44cd8ec31805b1ec2f179((int, int, cell, slice, slice) $self) impure inline {
    var ($self'idx, $self'max, $self'ads, $self'master, $self'owner) = $self;
    ($self'idx, $self'max, $self'ads, $self'master, $self'owner)~$MarketplaceProfile$_fun_requireOwner();
    $global_send($SendParameters$_constructor_to_value_bounce_mode($self'owner, 0, false, ((2 + 128) + 32)));
    return (($self'idx, $self'max, $self'ads, $self'master, $self'owner), ());
}

(((int, int, cell, slice, slice)), ()) $MarketplaceProfile$_internal_binary_Deploy((int, int, cell, slice, slice) $self, (int) $deploy) impure inline {
    var ($self'idx, $self'max, $self'ads, $self'master, $self'owner) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'idx, $self'max, $self'ads, $self'master, $self'owner)~$MarketplaceProfile$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'idx, $self'max, $self'ads, $self'master, $self'owner), ());
}

;;
;; Get methods of a Contract MarketplaceProfile
;;

_ %ads() method_id(75073) {
    var self = $MarketplaceProfile$_contract_load();
    var res = self~$MarketplaceProfile$_fun_ads();
    return res;
}

_ %owner() method_id(83229) {
    var self = $MarketplaceProfile$_contract_load();
    var res = self~$MarketplaceProfile$_fun_owner();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmUwf5UmukyHS8drEyVikBpZWhhBNp4yayKb5RCTqGRy2C";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract MarketplaceProfile
;;

((int, int, cell, slice, slice), int) $MarketplaceProfile$_contract_router_internal((int, int, cell, slice, slice) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive AdInfo message
    if (op == 3642174165) {
        var msg = in_msg~$AdInfo$_load();
        self~$MarketplaceProfile$_internal_binary_AdInfo(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$MarketplaceProfile$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "Delete profile" message
        if (text_op == 0xf86746a34571ea19a7c6f61cf6a41f73fe359c1524b44cd8ec31805b1ec2f179) {
            self~$MarketplaceProfile$_internal_text_f86746a34571ea19a7c6f61cf6a41f73fe359c1524b44cd8ec31805b1ec2f179();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $MarketplaceProfile$_contract_load();
    
    ;; Handle operation
    int handled = self~$MarketplaceProfile$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $MarketplaceProfile$_contract_store(self);
}
