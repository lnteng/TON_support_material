// automatically generated from `../../src/crypto/smartcont/stdlib.fc` `../code.fc` 
PROGRAM{
  DECLPROC send_money
  DECLPROC send_message_back
  DECLPROC ~load_common_auction_fields
  DECLPROC pack_state
  DECLPROC unpack_state
  DECLPROC check_blind_bids
  DECLPROC return_blind_bids
  DECLPROC ~complete_auction
  DECLPROC recv_internal
  DECLPROC recv_external
  85143 DECLMETHOD seqno
  send_money PROC:<{
    0 PUSHINT
    DUP
    196 PUSHINT
    NEWC
    9 STU
    s1 s5 XCHG
    8 STI
    s1 s3 XCHG
    256 STU
    SWAP
    STGRAMS
    s1 s2 XCHG
    107 STU
    32 STU
    ENDC
    3 PUSHINT
    SENDRAWMSG
  }>
  send_message_back PROC:<{
    0 PUSHINT
    24 PUSHINT
    NEWC
    6 STU
    s0 s8 XCHG2
    STSLICER
    ROT
    STGRAMS
    s1 s6 XCHG
    107 STU
    s1 s4 XCHG
    32 STU
    s1 s2 XCHG
    64 STU
    OVER
    -1 GTINT
    IF:<{
      32 STU
    }>ELSE<{
      NIP
    }>
    OVER
    -1 GTINT
    IF:<{
      32 STU
    }>ELSE<{
      NIP
    }>
    ENDC
    SWAP
    SENDRAWMSG
  }>
  ~load_common_auction_fields PROC:<{
    8 LDU
    LDDICT
    32 LDU
    32 LDU
    LDGRAMS
    LDGRAMS
    LDGRAMS
    32 LDU
    8 -ROLL
  }>
  pack_state PROCREF:<{
    NEWC
    s1 s5 XCHG
    32 STU
    s1 s3 XCHG
    256 STU
    SWAP
    STSLICER
    SWAP
    STGRAMS
    STDICT
    ENDC
  }>
  unpack_state PROC:<{
    c4 PUSH
    CTOS
    32 LDU
    256 LDU
    264 PUSHINT
    LDSLICEX
    LDGRAMS
    LDDICT
    ENDS
  }>
  check_blind_bids PROC:<{
    0 PUSHINT
    s0 s0 s0 PUSH3
    TRUE
    -1 PUSHINT
    UNTIL:<{
      s8 PUSH
      8 PUSHPOW2
      DICTUGETNEXT
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s0 s2 XCHG
        8 LDI
        LDGRAMS
        9 PUSHPOW2
        LDSLICEX
        NIP
        DUP
        SDEMPTY
        IF:<{
          3 BLKDROP
          s2 POP
          FALSE
        }>ELSE<{
          LDGRAMS
          DROP
          s0 s7 PUSH2
          GREATER
          IF:<{
            s6 POP
            s6 POP
            s6 POP
            s6 POP
            s5 PUSH
          }>ELSE<{
            s3 s9 XCHG
            s3 s8 XCHG
            s6 s7 XCHG
            3 BLKDROP
          }>
          s5 s6 XCHG
          s0 s5 XCHG
          s3 s4 XCHG
          s0 s2 XCHG
        }>
      }>ELSE<{
        2SWAP
        DROP
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    DROP
    s2 PUSH
    0 EQINT
    s0 s6 XCHG
    NOT
    OVER
    NOT
    AND
    s1 s6 XCHG
    OR
    IFJMP:<{
      DROP
      s5 POP
      s5 POP
      s5 POP
      SWAP
    }>
    -1 PUSHINT
    0 PUSHINT
    UNTIL:<{
      s1 s8 XCPU
      8 PUSHPOW2
      DICTUGETNEXT
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s0 s2 XCHG
        8 LDI
        LDGRAMS
        s3 s8 PUSH2
        EQUAL
        IFNOT:<{
          s1 s13 PUSH2
          SUB
          s1 s12 XCHG
          SUB
          s1 s13 XCPU
          SUB
          s2 s3 s(-1) XCPUXC
          send_money CALLDICT
          s0 s9 XCHG
          9 PUSHPOW2
          LDSLICEX
          NIP
          DUP
          SDEMPTY
          IFNOT:<{
            LDGRAMS
            DROP
            s0 s3 PUSH2
            GREATER
            s1 s6 PUSH2
            LESS
            AND
            IF:<{
              s3 POP
            }>ELSE<{
              DROP
            }>
          }>ELSE<{
            DROP
          }>
        }>ELSE<{
          3 BLKDROP
        }>
      }>ELSE<{
        s2 POP
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    NIP
    s7 POP
    s6 PUSH
    0 EQINT
    IF:<{
      s6 POP
      DUP
    }>ELSE<{
      s0 s6 XCHG
    }>
    s0 s8 XCHG
    65 EQINT
    IF:<{
      DROP
    }>ELSE<{
      s7 POP
    }>
    s4 s5 PUXC
    SUB
    s1 s3 XCHG
    SUB
    s3 s5 PUSH2
    GREATER
    IF:<{
      s3 s5 XCPU
      SUB
      s2 s4 s(-2) PU2XC
      send_money CALLDICT
    }>ELSE<{
      s3 POP
    }>
    s4 s0 s4 XCHG3
  }>
  return_blind_bids PROC:<{
    -1 PUSHINT
    UNTIL:<{
      s3 PUSH
      8 PUSHPOW2
      DICTUGETNEXT
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s0 s2 XCHG
        8 LDI
        LDGRAMS
        DROP
        s0 s4 PUSH2
        SUB
        s1 s6 XCHG
        SUB
        s5 s4 XCPU
        SUB
        s2 s(-1) PUXC
        send_money CALLDICT
      }>ELSE<{
        s2 POP
      }>
      SWAP
      NOT
    }>
    s2 s3 XCHG
    3 BLKDROP
  }>
  ~complete_auction PROC:<{
    32 PUSHINT
    s5 s6 s6 PUXC2
    DICTUDELGET
    NULLSWAPIFNOT
    DROP
    NEWC
    SWAP
    STSLICER
    ENDC
    670869177 PUSHINT
    0 PUSHINT
    196 PUSHINT
    NEWC
    9 STU
    s0 s7 XCHG2
    STSLICER
    30 PUSHPOW2
    STGRAMS
    s1 s6 XCHG
    107 STU
    s1 s5 XCHG
    32 STU
    s1 s5 XCHG
    64 STU
    s1 s2 XCHG
    8 STI
    256 STU
    s0 s3 XCHG2
    STGRAMS
    s1 s2 XCHG
    STREF
    ENDC
    3 PUSHINT
    SENDRAWMSG
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    4 LDU
    SWAP
    1 PUSHINT
    AND
    IFJMP:<{
      3 BLKDROP
    }>
    OVER
    SEMPTY
    IFJMP:<{
      3 BLKDROP
    }>
    LDMSGADDR
    DROP
    DUP
    REWRITESTDADDR
    s0 s3 XCHG
    32 LDU
    OVER
    0 EQINT
    IFJMP:<{
      6 BLKDROP
    }>
    unpack_state CALLDICT
    s0 s5 XCHG
    64 LDU
    s7 PUSH
    100 EQINT
    IFJMP:<{
      32 LDU
      s1 s7 PUSH2
      32 PUSHINT
      DICTUGET
      NULLSWAPIFNOT
      IFNOTJMP:<{
        s3 s8 XCHG
        8 BLKDROP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        36 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      ~load_common_auction_fields CALLDICT
      s5 PUSH
      NOW
      LESS
      IFNOTJMP:<{
        s11 s12 XCHG
        12 BLKDROP
        s0 s4 XCHG
        4 BLKDROP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        46 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      s4 PUSH
      NOW
      GREATER
      IFNOTJMP:<{
        s11 s12 XCHG
        12 BLKDROP
        s0 s4 XCHG
        4 BLKDROP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        47 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      21 s() PUSH
      s4 PUSH
      GEQ
      IFNOTJMP:<{
        s11 s12 XCHG
        12 BLKDROP
        s0 s4 XCHG
        4 BLKDROP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        48 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      FALSE
      s8 PUSH
      64 LESSINT
      IFJMP:<{
        s10 POP
        OVER
        0 GTINT
        22 s() PUSH
        s3 PUSH
        GEQ
        AND
        IF:<{
          s9 POP
          TRUE
        }>ELSE<{
          s0 s9 XCHG
        }>
        21 s() PUSH
        s3 PUSH
        GEQ
        IFNOTJMP:<{
          s11 s12 XCHG
          12 BLKDROP
          s0 s4 XCHG
          4 BLKDROP
          s2 POP
          s3 POP
          s3 POP
          4294967294 PUSHINT
          49 PUSHINT
          0 PUSHINT
          s3 s5 XCHG
          s2 s4 XCHG
          64 PUSHINT
          send_message_back CALLDICT
        }>
        s0 s8 XCHG
        LDGRAMS
        LDGRAMS
        OVER
        0 NEQINT
        s2 s3 PUSH2
        ADD
        25 s() PUSH
        SWAP
        LESS
        AND
        IFJMP:<{
          12 BLKDROP
          s1 s6 XCHG
          6 BLKDROP
          s2 POP
          s3 POP
          s3 POP
          4294967294 PUSHINT
          50 PUSHINT
          0 PUSHINT
          s3 s5 XCHG
          s2 s4 XCHG
          64 PUSHINT
          send_message_back CALLDICT
        }>
        s13 POP
        18 s() POP
        19 s() POP
        16 s() PUSH
        0 EQINT
        IFNOT:<{
          16 s() PUSH
          s3 PUSH
          SUB
          s1 s12 XCHG
          SUB
          s0 s10 XCHG
          8 LDI
          256 LDU
          DROP
          s0 17 s() XCHG
          s3 PUSH
          SUB
          s1 s2 XCHG
          s1 17 s() XCHG
          send_money CALLDICT
        }>ELSE<{
          s1 16 s() XCHG
          s0 s11 XCHG
          s10 POP
          DROP
        }>
        s5 PUSH
        IF:<{
          s13 s7 s10 XCPU2
          17 s() PUSH
          20 s() PUSH
          22 s() PUSH
          ~complete_auction CALLDICT
        }>ELSE<{
          s0 s13 XCHG
        }>
        s6 PUSH
        0 GTINT
        s6 s(-1) PUXC
        AND
        s6 PUSH
        NOT
        OR
        IF:<{
          NEWC
          s1 s5 XCHG
          8 STU
          s1 s3 XCHG
          STDICT
          32 STU
          32 STU
          s10 PUSH
          STGRAMS
          s0 s11 XCHG2
          STGRAMS
          s0 s5 XCHG2
          STGRAMS
          s0 s4 XCHG
          IF:<{
            s7 POP
            s8 POP
            s9 POP
            s9 POP
            s0 s3 XCHG
            DEC
            s0 s8 XCHG2
            32 STU
            s0 s5 XCHG2
            STGRAMS
            0 PUSHINT
            STGRAMS
          }>ELSE<{
            s12 s7 PUXC
            SUB
            s1 s2 XCHG
            ADD
            s6 s2 XCHG2
            32 STU
            s0 s8 XCHG2
            STGRAMS
            s0 s9 XCHG2
            STGRAMS
            s1 s5 XCHG
            8 STI
            s1 s6 XCHG
            256 STU
            4 3 REVERSE
            s1 s3 XCHG
          }>
          2SWAP
          32 PUSHINT
          DICTUSETB
        }>ELSE<{
          s11 18 s() XCHG
          s8 17 s() XCHG
          s12 16 s() XCHG
          s10 s15 XCHG
          s14 POP
          12 BLKDROP
          DROP
        }>
        s2 s4 XCHG
        s1 s3 s0 XCHG3
        pack_state INLINECALLDICT
        c4 POP
      }>
      s0 s9 XCHG
      32 LDU
      LDGRAMS
      24 s() PUSH
      s2 PUSH
      GEQ
      IFNOTJMP:<{
        12 BLKDROP
        s2 s7 XCHG
        7 BLKDROP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        51 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      s4 s1 PUSH2
      GREATER
      25 s() PUSH
      s6 PUSH
      GEQ
      AND
      IF:<{
        s11 POP
        TRUE
      }>ELSE<{
        s0 s11 XCHG
      }>
      s0 s11 XCHG
      LDDICT
      DROP
      23 s() PUSH
      OVER
      8 PUSHPOW2
      DICTUGET
      NULLSWAPIFNOT
      NIP
      s12 PUSH
      NOT
      SWAP
      AND
      IFJMP:<{
        12 BLKDROP
        s2 s7 XCHG
        7 BLKDROP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        52 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      s14 POP
      19 s() POP
      20 s() POP
      s8 PUSH
      IF:<{
        s11 s12 s3 PUXCPU
        return_blind_bids CALLDICT
        s0 16 s() XCHG
        s10 s13 PUSH2
        20 s() PUSH
        23 s() PUSH
        25 s() PUSH
        ~complete_auction CALLDICT
      }>ELSE<{
        s12 16 s() XCHG
        s0 s12 XCHG
      }>
      s12 PUSH
      0 GTINT
      s9 s(-1) PUXC
      AND
      s9 PUSH
      NOT
      OR
      IF:<{
        NEWC
        s1 s8 XCHG
        8 STU
        s1 s6 XCHG
        STDICT
        s1 s4 XCHG
        32 STU
        s1 s2 XCHG
        32 STU
        OVER
        STGRAMS
        ROT
        STGRAMS
        ROT
        STGRAMS
        s0 s3 XCHG
        IF:<{
          DROP
          s2 POP
          s3 POP
          s9 POP
          s10 POP
          s10 POP
          NEWDICT
          SWAP
          DEC
          s0 s10 XCHG2
          32 STU
          s1 s7 XCHG
          32 STU
          s0 s4 XCHG2
          STGRAMS
          s1 s7 XCHG
          STDICT
        }>ELSE<{
          s15 s(-1) PUXC
          SUB
          s1 s10 XCHG
          ADD
          s0 s2 XCHG
          9 PUSHPOW2
          LDSLICEX
          DROP
          NEWC
          s1 s12 XCHG
          8 STI
          s0 s14 XCHG2
          STGRAMS
          s0 s10 XCHG2
          STSLICER
          s11 s2 XCHG2
          8 PUSHPOW2
          DICTUSETB
          s0 s10 XCHG
          32 STU
          s1 s7 XCHG
          32 STU
          s0 s4 XCHG2
          STGRAMS
          s1 s7 XCHG
          STDICT
          s1 s3 XCHG
        }>
        s0 s5 s3 XCHG3
        32 PUSHINT
        DICTUSETB
      }>ELSE<{
        s15 21 s() XCHG
        16 s() 20 s() XCHG
        s13 19 s() XCHG
        s14 18 s() XCHG
        17 s() POP
        12 BLKDROP
        4 BLKDROP
      }>
      s1 s3 XCHG
      pack_state INLINECALLDICT
      c4 POP
    }>
    s1 s6 XCHG
    6 BLKDROP
    s2 POP
    s3 POP
    s3 POP
    OVER
    31 PUSHPOW2
    AND
    IFNOTJMP:<{
      32 PUSHPOW2DEC
      0 PUSHINT
      DUP
      s3 s5 XCHG
      s2 s4 XCHG
      64 PUSHINT
      send_message_back CALLDICT
    }>
    3 BLKDROP
  }>
  recv_external PROC:<{
    9 PUSHPOW2
    LDSLICEX
    DUP
    32 LDU
    32 LDU
    32 LDU
    NOW
    s1 s3 XCHG
    LESS
    35 THROWIF
    unpack_state CALLDICT
    s7 s4 XCPU
    EQUAL
    33 THROWIFNOT
    s0 s3 XCHG
    INC
    s4 PUSH
    101 EQINT
    IF:<{
      s4 POP
      s0 s4 XCHG
      256 LDU
      s0 s7 XCHG
      HASHSU
      s0 s8 s8 XCHG3
      CHKSIGNU
      34 THROWIFNOT
      s0 s4 XCHG
      32 LDU
      DROP
      s0 s3 PUSH2
      32 PUSHINT
      DICTUGET
      NULLSWAPIFNOT
      36 THROWIFNOT
      ~load_common_auction_fields CALLDICT
      3 BLKDROP
      s2 POP
      s2 POP
      NOW
      s1 s2 XCHG
      LESS
      38 THROWIFNOT
      0 PUSHINT
      s0 s2 PUSH2
      64 LESSINT
      IF:<{
        s3 POP
        ACCEPT
        s0 s3 XCHG
        LDGRAMS
        NIP
        LDGRAMS
        NIP
        LDGRAMS
        OVER
        0 EQINT
        IFNOT:<{
          s3 POP
          s3 POP
          SWAP
          8 LDI
          256 LDU
          DROP
          s3 s2 PUXC
          SUB
          s1 s8 XCHG
          SUB
        }>ELSE<{
          s4 s9 XCHG
          s4 s4 s0 XCHG3
          2DROP
        }>
      }>ELSE<{
        2DROP
        s0 s2 XCHG
        32 LDU
        NOW
        s1 s2 XCHG
        GREATER
        45 THROWIF
        ACCEPT
        LDGRAMS
        NIP
        LDDICT
        DROP
        s0 s3 XCHG2
        s0 s7 XCHG
        TRUE
        check_blind_bids CALLDICT
        NIP
        s3 s7 XCHG
        s1 s2 XCHG
      }>
      s4 s6 XCHG
      s5 PUSH
      s8 s8 s3 XCHG3
      ~complete_auction CALLDICT
    }>ELSE<{
      s4 PUSH
      102 EQINT
      IF:<{
        s4 POP
        s0 s4 XCHG
        256 LDU
        s0 s7 XCHG
        HASHSU
        s0 s8 s8 XC2PU
        CHKSIGNU
        35 THROWIFNOT
        s0 s5 XCHG
        LDREF
        DROP
        CTOS
        DUP
        HASHSU
        SWAP
        32 LDU
        8 LDI
        256 LDU
        LDGRAMS
        DROP
        s3 s8 PUSH2
        32 PUSHINT
        DICTUGET
        NULLSWAPIFNOT
        36 THROWIFNOT
        ~load_common_auction_fields CALLDICT
        2DROP
        s3 POP
        s3 POP
        s3 PUSH
        63 GTINT
        37 THROWIFNOT
        NOW
        LESS
        38 THROWIFNOT
        s0 s3 XCHG
        32 LDU
        LDGRAMS
        NIP
        LDDICT
        DROP
        NOW
        s1 s2 XCHG
        GREATER
        39 THROWIFNOT
        s5 s0 PUSH2
        8 PUSHPOW2
        DICTUGET
        NULLSWAPIFNOT
        40 THROWIFNOT
        8 LDI
        s1 s8 PUXC
        EQUAL
        41 THROWIFNOT
        s0 s7 XCHG
        LDGRAMS
        9 PUSHPOW2
        LDSLICEX
        s11 s11 s(-1) XCPUXC
        s0 18 s() XCHG
        CHKSIGNU
        42 THROWIFNOT
        s0 s15 XCHG
        SDEMPTY
        53 THROWIFNOT
        s4 s3 PUXC
        GEQ
        s4 s14 PUSH2
        LEQ
        AND
        54 THROWIFNOT
        s9 s12 s10 PUSH3
        s11 s14 PUSH2
        pack_state INLINECALLDICT
        c4 POP
        COMMIT
        ACCEPT
        NEWC
        s1 s6 XCHG
        8 STI
        s0 s13 XCHG2
        STGRAMS
        s0 s6 XCHG2
        STSLICER
        SWAP
        STGRAMS
        s0 s1 s4 XCHG3
        8 PUSHPOW2
        DICTUSETB
        s8 s8 s0 XCHG3
        s3 PUSH
        FALSE
        check_blind_bids CALLDICT
        DROP
        IF:<{
          s4 s6 XCHG
          s3 s8 XCHG
          s5 PUSH
          3 -ROLL
          ~complete_auction CALLDICT
        }>ELSE<{
          s3 s8 XCHG
          s4 s6 XCHG
          4 BLKDROP
        }>
      }>ELSE<{
        s0 s7 XCHG
        HASHSU
        s0 s8 s2 XC2PU
        CHKSIGNU
        34 THROWIFNOT
        s5 s0 s6 PUSH3
        s4 s7 PUSH2
        pack_state INLINECALLDICT
        c4 POP
        COMMIT
        ACCEPT
        s2 PUSH
        1 EQINT
        IF:<{
          s2 POP
          0 PUSHINT
          BALANCE
          UNCONS
          DROP
          s0 s4 XCHG
          WHILE:<{
            DUP
            SEMPTY
            NOT
          }>DO<{
            8 LDI
            256 LDU
            LDGRAMS
            s4 s1 XCPU
            ADD
            s7 s0 PUSH2
            SUB
            s6 s(-1) PUXC
            GEQ
            43 THROWIF
            3 -ROLL
            send_money CALLDICT
            SWAP
          }>
          2DROP
          s2 POP
        }>ELSE<{
          s2 PUSH
          2 EQINT
          IF:<{
            s2 POP
            s0 s2 XCHG
            32 LDU
            LDREF
            DROP
            s1 s4 PUSH2
            32 PUSHINT
            DICTUGET
            NULLSWAPIFNOT
            NIP
            44 THROWIF
            CTOS
            s0 s1 s4 XCHG3
            32 PUSHINT
            DICTUSET
          }>ELSE<{
            s2 PUSH
            3 EQINT
            IF:<{
              s2 POP
              s0 s2 XCHG
              32 LDU
              DROP
              s0 s3 PUSH2
              32 PUSHINT
              DICTUGET
              NULLSWAPIFNOT
              36 THROWIFNOT
              ~load_common_auction_fields CALLDICT
              s3 s6 XCHG
              6 BLKDROP
              SWAP
              64 LESSINT
              IF:<{
                SWAP
                LDGRAMS
                NIP
                LDGRAMS
                OVER
                0 GTINT
                IF:<{
                  s1 s2 PUSH2
                  SUB
                  s1 s6 XCHG
                  SUB
                  s0 s5 XCHG
                  8 LDU
                  256 LDU
                  DROP
                  s2 s3 XCHG2
                  SUB
                  s1 s2 XCHG
                  send_money CALLDICT
                }>ELSE<{
                  3 BLKDROP
                }>
              }>ELSE<{
                SWAP
                LDDICT
                DROP
                s0 s4 s4 XCHG3
                return_blind_bids CALLDICT
                s0 s2 XCHG
              }>
              s0 s3 XCHG2
              32 PUSHINT
              DICTUDELGET
              NULLSWAPIFNOT
              2DROP
            }>ELSE<{
              s0 s2 XCHG
              4 EQINT
              IF:<{
                s0 s2 XCHG
                LDREF
                OVER
                SETCODE
                SEMPTY
                IFNOT:<{
                  CTOS
                  BLESS
                  c3 POP
                }>ELSE<{
                  DROP
                }>
                0 THROW
              }>ELSE<{
                s2 POP
              }>
              s0 s2 XCHG
            }>
          }>
          s0 s2 XCHG
        }>
        s3 s4 s3 XCHG3
      }>
      s3 s4 XCHG
    }>
    s2 s4 XCHG
    s1 s3 s0 XCHG3
    pack_state INLINECALLDICT
    c4 POP
  }>
  seqno PROC:<{
    c4 PUSH
    CTOS
    32 PLDU
  }>
}END>c
