#!/usr/bin/env fift -s
"auction-utils.fif" include

{ ."<workchain-id> <notification-addr> [<filename-base>] [-C <code-fif>]" cr
  ."Creates a new auction contract, with private key saved to or loaded from <filename-base>.pk" cr
  ."('auction.pk' by default). Information about auction results will be sent to <notification-addr>." cr
  ."By default uses the full code of the contract. If you want to use stripped-down version (without get-methods), pass 'code' as last argument."
} : usage()

// == Parsing command-line arguments

{
  "-C" "--code-file" 1 { +".fif" include =: ContractCode } option-long()

  1 { parse-workchain-id =: WorkchainId } nth-argument()
  2 { =: NotificationAddrRaw } nth-argument()
  3 { =: FileBase } nth-argument()
  no-more-arguments() // Prevents adding too much arguments
} scan-args()

2 < { // Checks that there's enough arguments
  show-usage()
} if

// Default values
"auction" =:? FileBase
"code-getters.fif" include =:? ContractCode

NotificationAddrRaw true parse-load-address =: BounceFlag 2=: NotificationAddr

// == End of parsing command-line arguments

."Creating new contract in workchain " WorkchainId . cr

FileBase +".pk" load-generate-keypair
=: PrivateKey
=: PublicKey

<b
  0 32 u, // seqno
  PublicKey B, // owner pubkey
  NotificationAddr addr, // notification addr
  0 Gram, // reserved balance
  null dict, // active auctions
b> =: ContractData
."ContractData: " ContractData <s csr. cr

ContractCode ContractData null state-init() =: StateInit
."StateInit: " StateInit <s csr. cr

WorkchainId StateInit hashu 2constant ContractAddr
."New contract address = " ContractAddr .addr cr
ContractAddr FileBase +".addr" save-address-verbose

."Non-bounceable address (for init): " ContractAddr 7 .Addr cr
."Bounceable address (for later access): " ContractAddr 6 .Addr cr

0 -1 empty-message() =: MessageBody
."Signing message: " MessageBody <s csr. cr

ContractAddr StateInit
  MessageBody PrivateKey sign-message()
external-message() =: ExtMessage

."External message for initialization is " ExtMessage <s csr. cr
ExtMessage 2 boc+>B dup Bx. cr
FileBase +"-init-query.boc" tuck B>file
."(Saved contract creating query to file " type .")" cr
