{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

() recv_internal() {
}

(int) tlen(tuple t) asm "TLEN";
tuple empty_tuple() asm "NIL";
forall X -> tuple tpush(tuple t, X value) asm "TPUSH";
forall X -> (tuple, ()) ~tpush(tuple t, X value) asm "TPUSH";

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
    int n = matrixA.tlen();
    int m = matrixB.tlen();
    int k = matrixB.at(0).tlen();

    tuple result = empty_tuple();

    int i = 0;
    while (i < n) {
        int f = 0;
        tuple row = empty_tuple();
        while (f < k) {
            int sum = 0;
            int c = 0;
            while (c < m) {
                sum += matrixA.at(i).at(c) * matrixB.at(c).at(f);
                c += 1;
            }
            row~tpush(sum);
            f += 1;
        }
        result~tpush(row);
        i += 1;
    }

    return result;
}
