#pragma version >=0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "sample_ExampleNFTCollection.headers.fc";
#include "sample_ExampleNFTCollection.stdlib.fc";
#include "sample_ExampleNFTCollection.constants.fc";
#include "sample_ExampleNFTCollection.storage.fc";

;;
;; Contract ExampleNFTCollection functions
;;

(int, cell, slice, (int, int, slice)) $ExampleNFTCollection$_contract_init(slice $owner_address, cell $collection_content, (int, int, slice) $royalty_params) impure inline_ref {
    var (($royalty_params'numerator, $royalty_params'denominator, $royalty_params'destination)) = $royalty_params;
    var (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))) = (0, null(), null(), null());
    $self'owner_address = $owner_address;
    $self'collection_content = $collection_content;
    ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination) = ($royalty_params'numerator, $royalty_params'denominator, $royalty_params'destination);
    return ($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination));
}

((int, cell, slice, (int, int, slice)), (cell, cell)) $ExampleNFTCollection$_fun__get_nft_item_state_init((int, cell, slice, (int, int, slice)) $self, int $index) impure inline {
    var (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))) = $self;
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), $ExampleNFTItem$_init_child(__tact_context_sys, my_address(), $index, $self'owner_address, $self'collection_content));
}

((int, cell, slice, (int, int, slice)), cell) $ExampleNFTCollection$_fun__get_nft_content((int, cell, slice, (int, int, slice)) $self, int $index, cell $individual_content) impure inline {
    var (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))) = $self;
    tuple $builder = __tact_string_builder_start_string();
    slice $idvStr = __tact_slice_to_str($Cell$_fun_asSlice($individual_content));
    $builder~__tact_string_builder_append($idvStr);
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), __tact_string_builder_end($builder));
}

((int, cell, slice, (int, int, slice)), (int, cell, slice)) $ExampleNFTCollection$_fun__get_collection_data((int, cell, slice, (int, int, slice)) $self) impure inline {
    var (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))) = $self;
    tuple $builder = __tact_string_builder_start_string();
    slice $urlPrefix = __tact_slice_to_str($Cell$_fun_asSlice($self'collection_content));
    $builder~__tact_string_builder_append($urlPrefix);
    $builder~__tact_string_builder_append(__gen_slice_string_7ca4179185a84c879806ec30a1f5fa692451a7fb8dfcf32a967a2cb475822481());
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), $CollectionData$_constructor_next_item_index_collection_content_owner_address($self'next_item_index, __tact_string_builder_end($builder), $self'owner_address));
}

((int, cell, slice, (int, int, slice)), (int, cell, slice)) $ExampleNFTCollection$_fun_get_collection_data((int, cell, slice, (int, int, slice)) $self) impure inline_ref {
    var (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))) = $self;
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), ($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))~$ExampleNFTCollection$_fun__get_collection_data());
}

((int, cell, slice, (int, int, slice)), slice) $ExampleNFTCollection$_fun_get_nft_address_by_index((int, cell, slice, (int, int, slice)) $self, int $index) impure inline_ref {
    var (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))) = $self;
    var ($initCode'code, $initCode'data) = ($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))~$ExampleNFTCollection$_fun__get_nft_item_state_init($index);
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), $global_contractAddress(($initCode'code, $initCode'data)));
}

((int, cell, slice, (int, int, slice)), cell) $ExampleNFTCollection$_fun_get_nft_content((int, cell, slice, (int, int, slice)) $self, int $index, cell $individual_content) impure inline_ref {
    var (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))) = $self;
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), ($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))~$ExampleNFTCollection$_fun__get_nft_content($index, $individual_content));
}

((int, cell, slice, (int, int, slice)), ()) $ExampleNFTCollection$_fun_report_royalty_params((int, cell, slice, (int, int, slice)) $self, (int) $msg) impure inline {
    var (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))) = $self;
    var (($msg'query_id)) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($ctx'sender, 0, 64, false, $ReportRoyaltyParams$_store_cell($ReportRoyaltyParams$_constructor_query_id_numerator_denominator_destination($msg'query_id, $self'royalty_params'numerator, $self'royalty_params'denominator, $self'owner_address))));
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), ());
}

((int, cell, slice, (int, int, slice)), (int, int, slice)) $ExampleNFTCollection$_fun_royalty_params((int, cell, slice, (int, int, slice)) $self) impure inline_ref {
    var (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))) = $self;
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination));
}

((int, cell, slice, (int, int, slice)), int) $ExampleNFTCollection$_fun_estimate_rest_value((int, cell, slice, (int, int, slice)) $self, (int, slice, int, slice) $ctx) impure inline_ref {
    var (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))) = $self;
    var (($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw)) = $ctx;
    int $restValue = $ctx'value;
    int $tonBalanceBeforeMsg = (__tact_my_balance() - $restValue);
    int $storageFee = (50000000 - min($tonBalanceBeforeMsg, 50000000));
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), ($restValue - ($storageFee + 50000000)));
}

;;
;; Receivers of a Contract ExampleNFTCollection
;;

((int, cell, slice, (int, int, slice)), ()) $ExampleNFTCollection$_internal_text_247c7bd5f39e2258d80ac36a0419a1ab5779757825a6cc0e915368f00610a18a((int, cell, slice, (int, int, slice)) $self) impure inline {
    var ($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)) = $self;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    var ($nftItemInit'code, $nftItemInit'data) = ($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))~$ExampleNFTCollection$_fun__get_nft_item_state_init($self'next_item_index);
    $global_send($SendParameters$_constructor_to_value_bounce_mode_body_code_data($global_contractAddress(($nftItemInit'code, $nftItemInit'data)), ($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))~$ExampleNFTCollection$_fun_estimate_rest_value($Context$_tensor_cast(($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw))), false, 2, $Transfer$_store_cell($Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload(0, $ctx'sender, $ctx'sender, $global_emptyCell(), 0, $global_emptySlice())), $nftItemInit'code, $nftItemInit'data));
    $self'next_item_index = ($self'next_item_index + 1);
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), ());
}

(((int, cell, slice, (int, int, slice))), ()) $ExampleNFTCollection$_internal_binary_GetRoyaltyParams((int, cell, slice, (int, int, slice)) $self, (int) $msg) impure inline {
    var ($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)) = $self;
    var ($msg'query_id) = $msg;
    ($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))~$ExampleNFTCollection$_fun_report_royalty_params($GetRoyaltyParams$_tensor_cast(($msg'query_id)));
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), ());
}

(((int, cell, slice, (int, int, slice))), ()) $ExampleNFTCollection$_internal_binary_Deploy((int, cell, slice, (int, int, slice)) $self, (int) $deploy) impure inline {
    var ($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination))~$ExampleNFTCollection$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'next_item_index, $self'collection_content, $self'owner_address, ($self'royalty_params'numerator, $self'royalty_params'denominator, $self'royalty_params'destination)), ());
}

;;
;; Get methods of a Contract ExampleNFTCollection
;;

_ %get_collection_data() method_id(102491) {
    var self = $ExampleNFTCollection$_contract_load();
    var res = self~$ExampleNFTCollection$_fun_get_collection_data();
    return $CollectionData$_to_external(res);
}

_ %get_nft_address_by_index(int $$index) method_id(92067) {
    int $index = $$index;
    var self = $ExampleNFTCollection$_contract_load();
    var res = self~$ExampleNFTCollection$_fun_get_nft_address_by_index($index);
    return res;
}

_ %get_nft_content(int $$index, cell $$individual_content) method_id(68445) {
    int $index = $$index;
    cell $individual_content = $$individual_content;
    var self = $ExampleNFTCollection$_contract_load();
    var res = self~$ExampleNFTCollection$_fun_get_nft_content($index, $individual_content);
    return res;
}

_ %royalty_params() method_id(85719) {
    var self = $ExampleNFTCollection$_contract_load();
    var res = self~$ExampleNFTCollection$_fun_royalty_params();
    return $RoyaltyParams$_to_external(res);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmfQ3ehWvPF5qEexY2Lmm7LVcdwoowF9SrfNebCgJ1vFxZ";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract ExampleNFTCollection
;;

((int, cell, slice, (int, int, slice)), int) $ExampleNFTCollection$_contract_router_internal((int, cell, slice, (int, int, slice)) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive GetRoyaltyParams message
    if (op == 1765620048) {
        var msg = in_msg~$GetRoyaltyParams$_load();
        self~$ExampleNFTCollection$_internal_binary_GetRoyaltyParams(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$ExampleNFTCollection$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "Mint" message
        if (text_op == 0x247c7bd5f39e2258d80ac36a0419a1ab5779757825a6cc0e915368f00610a18a) {
            self~$ExampleNFTCollection$_internal_text_247c7bd5f39e2258d80ac36a0419a1ab5779757825a6cc0e915368f00610a18a();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $ExampleNFTCollection$_contract_load();
    
    ;; Handle operation
    int handled = self~$ExampleNFTCollection$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $ExampleNFTCollection$_contract_store(self);
}
