;;
;; Header files for PriceOracle
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $PriceResponse$_store
builder $PriceResponse$_store(builder build_0, (int, int, int, int, cell) v) inline;

;; $PriceResponse$_store_cell
cell $PriceResponse$_store_cell((int, int, int, int, cell) v) inline;

;; $GetLatestPrice$_load
(slice, ((int, slice, cell))) $GetLatestPrice$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $PriceInfo$_not_null
((int, int)) $PriceInfo$_not_null(tuple v) inline;

;; $PriceInfo$_as_optional
tuple $PriceInfo$_as_optional((int, int) v) inline;

;; $PriceOracle$_contract_init
tuple $PriceOracle$_contract_init() impure inline_ref;

;; $PriceOracle$_contract_load
tuple $PriceOracle$_contract_load() impure inline_ref;

;; $PriceOracle$_contract_store
() $PriceOracle$_contract_store(tuple v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $PriceInfo$_constructor_price_decimals
((int, int)) $PriceInfo$_constructor_price_decimals(int price, int decimals) inline;

;; $PriceOracle$_fun_getPriceResponse
(tuple, tuple) $PriceOracle$_fun_getPriceResponse(tuple $self, slice $symbol) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $PriceOracle$_fun_forward
(tuple, ()) $PriceOracle$_fun_forward(tuple $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $PriceOracle$_fun_notify
(tuple, ()) $PriceOracle$_fun_notify(tuple $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $PriceResponse$_constructor_queryId_price_decimals_success_callback
((int, int, int, int, cell)) $PriceResponse$_constructor_queryId_price_decimals_success_callback(int queryId, int price, int decimals, int success, cell callback) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
