#pragma version >=0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "sample_Admin.headers.fc";
#include "sample_Admin.stdlib.fc";
#include "sample_Admin.storage.fc";

;;
;; Contract Admin functions
;;

(slice, int) $Admin$_contract_init(slice $owner) impure inline_ref {
    var (($self'owner, $self'queryId)) = (null(), null());
    $self'owner = $owner;
    $self'queryId = 0;
    return ($self'owner, $self'queryId);
}

((slice, int), int) $Admin$_fun_get_queryId((slice, int) $self) impure inline_ref {
    var (($self'owner, $self'queryId)) = $self;
    return (($self'owner, $self'queryId), $self'queryId);
}

;;
;; Receivers of a Contract Admin
;;

((slice, int), ()) $Admin$_internal_any((slice, int) $self, slice $msg) impure inline {
    var ($self'owner, $self'queryId) = $self;
    __tact_nop();
    slice $user = $msg~__tact_load_address();
    cell $ref = $msg~load_ref();
    $self'queryId = ($self'queryId + 1);
    return (($self'owner, $self'queryId), ());
}

(((slice, int)), ()) $Admin$_internal_binary_Refund((slice, int) $self, (int, slice) $msg) impure inline {
    var ($self'owner, $self'queryId) = $self;
    var ($msg'queryId, $msg'sender) = $msg;
    $global_send($SendParameters$_constructor_to_value_bounce_mode_body($msg'sender, 0, false, (64 + 2), $Refund$_store_cell($Refund$_constructor_queryId_sender($self'queryId, $Context$_get_sender(__tact_context_get())))));
    return (($self'owner, $self'queryId), ());
}

(((slice, int)), ()) $Admin$_internal_binary_Deploy((slice, int) $self, (int) $deploy) impure inline {
    var ($self'owner, $self'queryId) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'owner, $self'queryId)~$Admin$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'owner, $self'queryId), ());
}

;;
;; Get methods of a Contract Admin
;;

_ %get_queryId() method_id(71939) {
    var self = $Admin$_contract_load();
    var res = self~$Admin$_fun_get_queryId();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://Qma91v4FJXABQ3j3rWWhSyCC7NzF7DMz6PicFshf9TcmTW";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract Admin
;;

((slice, int), int) $Admin$_contract_router_internal((slice, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive Refund message
    if (op == 68) {
        var msg = in_msg~$Refund$_load();
        self~$Admin$_internal_binary_Refund(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$Admin$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Receiver fallback
    self~$Admin$_internal_any(in_msg);
    return (self, true);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $Admin$_contract_load();
    
    ;; Handle operation
    int handled = self~$Admin$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $Admin$_contract_store(self);
}
