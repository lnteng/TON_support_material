#pragma version >=0.4.1;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

global (int, slice, int, slice) __tact_context;
global cell __tact_context_sys;

tuple $__gen_ConstantTester_init() impure inline_ref {
    tuple $self = null();
    return $self;
}

tuple __gen_load_ConstantTester() impure inline {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return null();
    } else {
        return $__gen_ConstantTester_init();
    }
}

() __gen_store_ConstantTester(tuple v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    set_data(b.end_cell());
}

;; String "Hello world!"
slice __gen_str_3226689099() asm "B{b5ee9c7241010101000e00001848656c6c6f20776f726c6421782dc5bc} B>boc <s PUSHSLICE";

int $__gen_ConstantTester_something1(tuple $self) impure inline_ref {
    var ($self) = $self;
    return 10;
}

_ $__gen_get_something1() method_id(121234) {
    var self = __gen_load_ConstantTester();
    var res = $__gen_ConstantTester_something1(self);
    return res;
}

int $__gen_ConstantTester_something2(tuple $self) impure inline_ref {
    var ($self) = $self;
    return null();
}

_ $__gen_get_something2() method_id(125425) {
    var self = __gen_load_ConstantTester();
    var res = $__gen_ConstantTester_something2(self);
    return res;
}

int $__gen_ConstantTester_something3(tuple $self) impure inline_ref {
    var ($self) = $self;
    return 123000000000;
}

_ $__gen_get_something3() method_id(129488) {
    var self = __gen_load_ConstantTester();
    var res = $__gen_ConstantTester_something3(self);
    return res;
}

int $__gen_ConstantTester_something4(tuple $self) impure inline_ref {
    var ($self) = $self;
    return 456000000000;
}

_ $__gen_get_something4() method_id(100663) {
    var self = __gen_load_ConstantTester();
    var res = $__gen_ConstantTester_something4(self);
    return res;
}

slice $__gen_ConstantTester_something5(tuple $self) impure inline_ref {
    var ($self) = $self;
    return __gen_str_3226689099();
}

_ $__gen_get_something5() method_id(104726) {
    var self = __gen_load_ConstantTester();
    var res = $__gen_ConstantTester_something5(self);
    return res;
}

int $__gen_ConstantTester_globalConst(tuple $self) impure inline_ref {
    var ($self) = $self;
    return 100;
}

_ $__gen_get_globalConst() method_id(116577) {
    var self = __gen_load_ConstantTester();
    var res = $__gen_ConstantTester_globalConst(self);
    return res;
}

(tuple, int) __gen_router_ConstantTester(tuple self, int msg_bounced, slice in_msg) impure inline_ref {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = cs~load_msg_addr();
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    
    ;; Load contract data
    var self = __gen_load_ConstantTester();
    
    ;; Handle operation
    int handled = self~__gen_router_ConstantTester(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    __gen_store_ConstantTester(self);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.debug.v0"H >> 128
    );
}

_ get_abi_ipfs() {
    return "ipfs://QmbWuiLue1tpgRmxYcNmEoWGAr3kHrQKe7ZQmoYfVxr744";
}

_ lazy_deployment_completed() {
    return get_data().begin_parse().load_int(1);
}
