#pragma version >=0.4.1;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

int hello_world() {
    return 1000;
}

global (int, slice, int, slice) __tact_context;
global cell __tact_context_sys;

builder __gen_write_Native(builder build_0, (int) v) inline {
    var (v'value) = v;
    build_0 = build_0.store_int(v'value, 257);
    return build_0;
}

(slice, ((int))) __gen_read_Native(slice sc_0) inline {
    var v'value = sc_0~load_int(257);
    return (sc_0, (v'value));
}

(int) $__gen_Native_init() impure inline_ref {
    var (($self'value)) = (null());
    $self'value = 0;
    return ($self'value);
}

(int) __gen_load_Native() impure inline {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~__gen_read_Native();
    } else {
        return $__gen_Native_init();
    }
}

() __gen_store_Native((int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = __gen_write_Native(b, v);
    set_data(b.end_cell());
}

((int), ()) $__gen_Native_receive_comment_cdd0f5966a37922238a6954ee918a162cc590409ef65f094cee81e9d0bc52bb4((int) $self) impure inline {
    var ($self'value) = $self;
    $self'value = ($self'value + hello_world());
    return (($self'value), ());
}

((int), int) __gen_router_Native((int) self, int msg_bounced, slice in_msg) impure inline_ref {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "Increment" message
        if (text_op == 0xcdd0f5966a37922238a6954ee918a162cc590409ef65f094cee81e9d0bc52bb4) {
            self~$__gen_Native_receive_comment_cdd0f5966a37922238a6954ee918a162cc590409ef65f094cee81e9d0bc52bb4();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = cs~load_msg_addr();
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    
    ;; Load contract data
    var self = __gen_load_Native();
    
    ;; Handle operation
    int handled = self~__gen_router_Native(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    __gen_store_Native(self);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128
    );
}

_ get_abi_ipfs() {
    return "ipfs://QmRSRrjBjDPZnkYG4FriQrkt2z56zDv7zRejZnxCq9KtYX";
}

_ lazy_deployment_completed() {
    return get_data().begin_parse().load_int(1);
}
