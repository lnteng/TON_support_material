;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

((cell, cell)) $StateInit$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (cell vvv'code, cell vvv'data) = __tact_tuple_destroy_2(v);
    return (vvv'code, vvv'data);
}

;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline {
    return (true, to, value, mode, body, null(), null());
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body_code_data(slice to, int value, int bounce, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

;;
;; Type: Deploy
;; Header: 0x946a98b6
;; TLB: deploy#946a98b6 queryId:uint64 = Deploy
;;

(slice, ((int))) $Deploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: DeployOk
;; Header: 0xaff90f57
;; TLB: deploy_ok#aff90f57 queryId:uint64 = DeployOk
;;

builder $DeployOk$_store(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell $DeployOk$_store_cell((int) v) inline {
    return $DeployOk$_store(begin_cell(), v).end_cell();
}

((int)) $DeployOk$_constructor_queryId(int queryId) inline {
    return (queryId);
}

;;
;; Type: ChangeOwner
;; Header: 0x819dbe99
;; TLB: change_owner#819dbe99 queryId:uint64 newOwner:address = ChangeOwner
;;

(slice, ((int, slice))) $ChangeOwner$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2174598809);
    var v'queryId = sc_0~load_uint(64);
    var v'newOwner = sc_0~__tact_load_address();
    return (sc_0, (v'queryId, v'newOwner));
}

;;
;; Type: ChangeOwnerOk
;; Header: 0x327b2b4a
;; TLB: change_owner_ok#327b2b4a queryId:uint64 newOwner:address = ChangeOwnerOk
;;

builder $ChangeOwnerOk$_store(builder build_0, (int, slice) v) inline {
    var (v'queryId, v'newOwner) = v;
    build_0 = store_uint(build_0, 846932810, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    build_0 = __tact_store_address(build_0, v'newOwner);
    return build_0;
}

cell $ChangeOwnerOk$_store_cell((int, slice) v) inline {
    return $ChangeOwnerOk$_store(begin_cell(), v).end_cell();
}

((int, slice)) $ChangeOwnerOk$_constructor_queryId_newOwner(int queryId, slice newOwner) inline {
    return (queryId, newOwner);
}

;;
;; Type: Withdraw
;; Header: 0xcf50183f
;; TLB: withdraw#cf50183f query_id:uint64 amount:int257 = Withdraw
;;

(slice, ((int, int))) $Withdraw$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3478132799);
    var v'query_id = sc_0~load_uint(64);
    var v'amount = sc_0~load_int(257);
    return (sc_0, (v'query_id, v'amount));
}

;;
;; Type: WithdrawAll
;; Header: 0xf3cdd238
;; TLB: withdraw_all#f3cdd238 query_id:uint64 destroy:Maybe bool = WithdrawAll
;;

(slice, ((int, int))) $WithdrawAll$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4090352184);
    var v'query_id = sc_0~load_uint(64);
    var v'destroy = sc_0~load_int(1) ? sc_0~load_int(1) : null();
    return (sc_0, (v'query_id, v'destroy));
}

;;
;; Type: TopUp
;; Header: 0x07abf6a7
;; TLB: top_up#07abf6a7 query_id:uint64 = TopUp
;;

(slice, ((int))) $TopUp$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 128710311);
    var v'query_id = sc_0~load_uint(64);
    return (sc_0, (v'query_id));
}

;;
;; Type: NftCollectionMetadata
;; TLB: _ image:^string name:^string description:^string = NftCollectionMetadata
;;

builder $NftCollectionMetadata$_store(builder build_0, (slice, slice, slice) v) inline {
    var (v'image, v'name, v'description) = v;
    build_0 = build_0.store_ref(begin_cell().store_slice(v'image).end_cell());
    build_0 = build_0.store_ref(begin_cell().store_slice(v'name).end_cell());
    build_0 = build_0.store_ref(begin_cell().store_slice(v'description).end_cell());
    return build_0;
}

(slice, ((slice, slice, slice))) $NftCollectionMetadata$_load(slice sc_0) inline {
    var v'image = sc_0~load_ref().begin_parse();
    var v'name = sc_0~load_ref().begin_parse();
    var v'description = sc_0~load_ref().begin_parse();
    return (sc_0, (v'image, v'name, v'description));
}

;;
;; Type: CreateBlog
;; Header: 0xf01e20bc
;; TLB: create_blog#f01e20bc query_id:uint64 blog_metadata:NftCollectionMetadata{image:^string,name:^string,description:^string} = CreateBlog
;;

(slice, ((int, (slice, slice, slice)))) $CreateBlog$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4028506300);
    var v'query_id = sc_0~load_uint(64);
    var v'blog_metadata = sc_0~$NftCollectionMetadata$_load();
    return (sc_0, (v'query_id, v'blog_metadata));
}

;;
;; Type: InitializeBlog
;; Header: 0x19ed322b
;; TLB: initialize_blog#19ed322b query_id:uint64 owner:address collection_content:NftCollectionMetadata{image:^string,name:^string,description:^string} = InitializeBlog
;;

builder $InitializeBlog$_store(builder build_0, (int, slice, (slice, slice, slice)) v) inline {
    var (v'query_id, v'owner, (v'collection_content'image, v'collection_content'name, v'collection_content'description)) = v;
    build_0 = store_uint(build_0, 434975275, 32);
    build_0 = build_0.store_uint(v'query_id, 64);
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = $NftCollectionMetadata$_store(build_0, (v'collection_content'image, v'collection_content'name, v'collection_content'description));
    return build_0;
}

cell $InitializeBlog$_store_cell((int, slice, (slice, slice, slice)) v) inline {
    return $InitializeBlog$_store(begin_cell(), v).end_cell();
}

((int, slice, (slice, slice, slice))) $InitializeBlog$_constructor_query_id_owner_collection_content(int query_id, slice owner, (slice, slice, slice) collection_content) inline {
    return (query_id, owner, collection_content);
}

;;
;; Type: DSocialNetworkBlog
;;

builder $DSocialNetworkBlog$init$_store(builder build_0, (int, slice, slice) v) inline {
    var (v'blog_id, v'master_contract, v'personal_fees_destination) = v;
    build_0 = build_0.store_int(v'blog_id, 257);
    build_0 = __tact_store_address(build_0, v'master_contract);
    build_0 = __tact_store_address(build_0, v'personal_fees_destination);
    return build_0;
}

(cell, cell) $DSocialNetworkBlog$_init_child(cell sys', int $blog_id, slice $master_contract, slice $personal_fees_destination) inline_ref {
    slice sc' = sys'.begin_parse();
    cell source = sc'~load_dict();
    cell contracts = new_dict();
    
    ;; Contract Code: DSocialNetworkBlog
    cell mine = __tact_dict_get_code(source, 48247);
    contracts = __tact_dict_set_code(contracts, 48247, mine);
    
    ;; Contract Code: DSocialNetworkPost
    cell code_30628 = __tact_dict_get_code(source, 30628);
    contracts = __tact_dict_set_code(contracts, 30628, code_30628);
    
    ;; Build cell
    builder b = begin_cell();
    b = b.store_ref(begin_cell().store_dict(contracts).end_cell());
    b = b.store_int(false, 1);
    b = $DSocialNetworkBlog$init$_store(b, ($blog_id, $master_contract, $personal_fees_destination));
    return (mine, b.end_cell());
}

;;
;; Type: DSocialNetworkMaster
;;

builder $DSocialNetworkMaster$_store(builder build_0, (slice, slice, slice, int) v) inline {
    var (v'version, v'owner, v'personal_fees_destination, v'next_blog_index) = v;
    build_0 = build_0.store_ref(begin_cell().store_slice(v'version).end_cell());
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = __tact_store_address(build_0, v'personal_fees_destination);
    build_0 = build_0.store_uint(v'next_blog_index, 32);
    return build_0;
}

(slice, ((slice, slice, slice, int))) $DSocialNetworkMaster$_load(slice sc_0) inline {
    var v'version = sc_0~load_ref().begin_parse();
    var v'owner = sc_0~__tact_load_address();
    var v'personal_fees_destination = sc_0~__tact_load_address();
    var v'next_blog_index = sc_0~load_uint(32);
    return (sc_0, (v'version, v'owner, v'personal_fees_destination, v'next_blog_index));
}

(slice, slice, slice, int) $DSocialNetworkMaster$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$DSocialNetworkMaster$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        return $DSocialNetworkMaster$_contract_init();
    }
}

() $DSocialNetworkMaster$_contract_store((slice, slice, slice, int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $DSocialNetworkMaster$_store(b, v);
    set_data(b.end_cell());
}