;;
;; Header files for Task5
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_prepare_random
() __tact_prepare_random() impure inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_uint_slice
(cell, ()) __tact_dict_set_uint_slice(cell d, int kl, int k, slice v) inline;

;; __tact_dict_get_uint_slice
slice __tact_dict_get_uint_slice(cell d, int kl, int k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $AdminWithdrawalProfit$_load
(slice, ((int))) $AdminWithdrawalProfit$_load(slice sc_0) inline;

;; $AdminWithdrawalAllNFTs$_load
(slice, ((int))) $AdminWithdrawalAllNFTs$_load(slice sc_0) inline;

;; $AdminFetchProfit$_store
builder $AdminFetchProfit$_store(builder build_0, (int) v) inline;

;; $AdminFetchProfit$_store_cell
cell $AdminFetchProfit$_store_cell((int) v) inline;

;; $OwnershipAssigned$_load
(slice, ((int, slice, slice))) $OwnershipAssigned$_load(slice sc_0) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, slice, slice, cell, int, slice) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, slice, slice, cell, int, slice) v) inline;

;; $TransferBatch$_store
builder $TransferBatch$_store(builder build_0, (int) v) inline;

;; $TransferBatch$_store_cell
cell $TransferBatch$_store_cell((int) v) inline;

;; $TransferBatch$_load
(slice, ((int))) $TransferBatch$_load(slice sc_0) inline;

;; $Task5$_store
builder $Task5$_store(builder build_0, (int, slice, cell, int, int) v) inline;

;; $Task5$_load
(slice, ((int, slice, cell, int, int))) $Task5$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $Task5$init$_load
(slice, ((int, slice))) $Task5$init$_load(slice sc_0) inline;

;; $Task5$_contract_init
(int, slice, cell, int, int) $Task5$_contract_init(int $seed, slice $owner) impure inline_ref;

;; $Task5$_contract_load
(int, slice, cell, int, int) $Task5$_contract_load() impure inline_ref;

;; $Task5$_contract_store
() $Task5$_contract_store((int, slice, cell, int, int) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $global_random
int $global_random(int $min, int $max) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Task5$_fun_profit
((int, slice, cell, int, int), int) $Task5$_fun_profit((int, slice, cell, int, int) $self) impure inline_ref;

;; $Task5$_fun_nfts
((int, slice, cell, int, int), cell) $Task5$_fun_nfts((int, slice, cell, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $Task5$_fun_forward
((int, slice, cell, int, int), ()) $Task5$_fun_forward((int, slice, cell, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Task5$_fun_notify
((int, slice, cell, int, int), ()) $Task5$_fun_notify((int, slice, cell, int, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $Transfer$_constructor_queryId_newOwner_responseDestination_customPayload_forwardAmount_forwardPayload
((int, slice, slice, cell, int, slice)) $Transfer$_constructor_queryId_newOwner_responseDestination_customPayload_forwardAmount_forwardPayload(int queryId, slice newOwner, slice responseDestination, cell customPayload, int forwardAmount, slice forwardPayload) inline;

;; $AdminFetchProfit$_constructor_queryId
((int)) $AdminFetchProfit$_constructor_queryId(int queryId) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $TransferBatch$_constructor_queryId
((int)) $TransferBatch$_constructor_queryId(int queryId) inline;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice to, int value, int mode) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
