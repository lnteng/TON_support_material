// SPDX-FileCopyrightText: 2019 Serokell <https://serokell.io>
//
// SPDX-License-Identifier: MPL-2.0

library Sign  // Manipulating signed data

{ over hashB swap  // (cell hash sk)
  ed25519_sign  // (cell signature)
  <b swap B, swap ref, b>  // (signed)
} : mkSigned  // (cell sk - signed)
// Hash `cell` and sign the hash with secret key `sk`.
// The result is a cell containing the signature as its data bytes and
// the original cell in its first reference.

{ <s ref@
} : getSignedData!  // (signed - cell)
// Return the data that was signed.
// WARNING: Does not actually check the signature!

// FIXME: (upstream) remove "swap" after "ref@+"
{ over <s 64 B@+ ref@+ swap s>  // (signed pk signature cell)
  hashB  // (signed pk signature hash)
  swap rot  // (signed hash signature pk)
  ed25519_chksign  // (signed bool)
  dup
  { swap getSignedData! swap } if
} : checkSignedQ  // (signed pk - cell true | false)
// Check the signature and extract the signed data.
// Returns data followed by `true` if the signature was correct,
// `false` otherwise.

{ checkSignedQ
  not abort"Incorrect signature"
} : checkSigned  // (signed pk - cell)
// Check the signature and extract the signed data.
// Throws if the signature is incorrect.
