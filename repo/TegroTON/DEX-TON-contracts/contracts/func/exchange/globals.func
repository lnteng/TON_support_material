;; global variables

{-
meta_data#00 data:(HashMapE 256 ^Cell) : MetaData

storage2#_ fee_to:MsgAddress price0_cumulative_last:uint256
           price1_cumulative_last:uint256 time_elapsed:uint40
           kLast:uint122 = Storage2

storage#_ admin_address:MsgAddress jetton_wallet:MsgAddress
          jetton_reserve:(VarUInteger 16) lp_supply:(VarUInteger 16)
          lp_wallet_code:^Cell, lp_meta_data:^MetaData
          continue_storage:^Storage2 = Storage;
-}

global int ton_reserve;

global slice admin_address;
global slice jetton_wallet;
global int jetton_reserve;
global int lp_supply;
global int cfg::gas_price;

global slice fee_to;
global int price0_cumulative_last;
global int price1_cumulative_last;
global int block_timestamp_last;
global int kLast;

global cell lp_wallet_code;
global cell lp_meta_data;


() initialize_globals(int balance, int msg_value) impure inline {
  ton_reserve = balance - msg_value - cfg::for_storage_fee();
  slice ds = get_data().begin_parse();
  admin_address = ds~load_msg_addr();
  jetton_wallet = ds~load_msg_addr();
  jetton_reserve = ds~load_coins();
  lp_supply = ds~load_coins();
  cfg::gas_price = ds~load_coins();
  lp_wallet_code = ds~load_ref();
  lp_meta_data = ds~load_ref();
  slice ds2 = ds.preload_ref().begin_parse();
  fee_to = ds2~load_msg_addr();
  price0_cumulative_last = ds2~load_uint(256);
  price0_cumulative_last = ds2~load_uint(256);
  block_timestamp_last = ds2~load_int(40);
  kLast = ds2.preload_uint(122);
}


() save_data() impure {
  cell data2 = begin_cell()
    .store_slice(fee_to)
    .store_uint(price0_cumulative_last, 256)
    .store_uint(price0_cumulative_last, 256)
    .store_uint(block_timestamp_last, 40)
    .store_uint(kLast, 122)
    .end_cell();
  set_data(begin_cell()
    .store_slice(admin_address)
    .store_slice(jetton_wallet)
    .store_coins(jetton_reserve)
    .store_coins(lp_supply)
    .store_coins(cfg::gas_price)
    .store_ref(lp_wallet_code)
    .store_ref(lp_meta_data)
    .store_ref(data2)
    .end_cell());
}
