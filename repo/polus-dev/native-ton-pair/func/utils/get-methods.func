int get_freeze() method_id {
    init_data();
    return freeze?;
}

int get_btn_balance() method_id {
    init_data();
    return biton_balance;
}

int get_linear_price() method_id {
    init_data();
    return (pair_first(get_balance()) * 1000000000) / biton_balance;
}

int get_operation_price() method_id {
    init_data();
    return operation_price;
}

(int, int) get_service_fee() method_id {
    init_data();
    return (a_service_fee, b_service_fee);
}


int get_service_collect_fee() method_id {
    init_data();
    return service_collect_fee;
}

int get_max_price_percentage() method_id {
    init_data();
    return max_price_percentage;
}

(int, int) get_project_address() method_id {
    init_data();
    if (project_addr.slice_bits() <= 2) { 
        return (0, 0);
    }
    return parse_std_addr(project_addr);
}

(int, int) get_jetton_address() method_id {
    init_data();
    if (jetton_addr.slice_bits() <= 2) {
        return (0, 0);
    }
    return parse_std_addr(jetton_addr);
}

int get_lp_total_supply() method_id {
    init_data();
    return lp_total_supply;
}

int get_lp_collect_fee() method_id {
    init_data();
    return lp_collect_fee;
}

int get_lp_fee_percentage() method_id {
    init_data();
    return lp_fee_percentage;
}

(int, int) get_lp_jetton_address() method_id {
    init_data();
    if (lp_jwall_addr.slice_bits() <= 2) {
        return (0, 0);
    }
    return parse_std_addr(lp_jwall_addr);
}

(int, int) get_lp_minter_address() method_id {
    init_data();
    if (lp_minter_addr.slice_bits() <= 2) {
        return (0, 0);
    }
    return parse_std_addr(lp_minter_addr);
}
