#pragma version >=0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "sample_Bools.headers.fc";
#include "sample_Bools.stdlib.fc";
#include "sample_Bools.storage.fc";

;;
;; Contract Bools functions
;;

(int, int, int) $Bools$_contract_init() impure inline_ref {
    var (($self'b1, $self'b2, $self'b3)) = (true, false, null());
    $self'b3 = (~ $self'b2);
    return ($self'b1, $self'b2, $self'b3);
}

((int, int, int), int) $Bools$_fun_result((int, int, int) $self) impure inline_ref {
    var (($self'b1, $self'b2, $self'b3)) = $self;
    return (($self'b1, $self'b2, $self'b3), $self'b1);
}

;;
;; Receivers of a Contract Bools
;;

((int, int, int), ()) $Bools$_internal_text_3242cc65952f05d9b07d2b2caad91638a341c8e1f253c238d4de60b90bfd734a((int, int, int) $self) impure inline {
    var ($self'b1, $self'b2, $self'b3) = $self;
    __tact_nop();
    __tact_nop();
    __tact_nop();
    return (($self'b1, $self'b2, $self'b3), ());
}

((int, int, int), ()) $Bools$_internal_text_ae9b15f0d50e95164ef677febc57a5f9ae379b3acf721b694a482c77db65c3d5((int, int, int) $self) impure inline {
    var ($self'b1, $self'b2, $self'b3) = $self;
    int $b = true;
    __tact_nop();
    $b = ( (( ($self'b1) ? ($self'b2) : (false) )) ? (true) : ((~ $self'b3)) );
    __tact_nop();
    __tact_nop();
    __tact_nop();
    __tact_nop();
    return (($self'b1, $self'b2, $self'b3), ());
}

(((int, int, int)), ()) $Bools$_internal_binary_Deploy((int, int, int) $self, (int) $deploy) impure inline {
    var ($self'b1, $self'b2, $self'b3) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'b1, $self'b2, $self'b3)~$Bools$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'b1, $self'b2, $self'b3), ());
}

;;
;; Get methods of a Contract Bools
;;

_ %result() method_id(93778) {
    var self = $Bools$_contract_load();
    var res = self~$Bools$_fun_result();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmdMQKaPJckw6MBbuFrhDMxR1L9jLb6KbsqjsPvjVbQD5w";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract Bools
;;

((int, int, int), int) $Bools$_contract_router_internal((int, int, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$Bools$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "show all" message
        if (text_op == 0x3242cc65952f05d9b07d2b2caad91638a341c8e1f253c238d4de60b90bfd734a) {
            self~$Bools$_internal_text_3242cc65952f05d9b07d2b2caad91638a341c8e1f253c238d4de60b90bfd734a();
            return (self, true);
        }
        
        ;; Receive "show ops" message
        if (text_op == 0xae9b15f0d50e95164ef677febc57a5f9ae379b3acf721b694a482c77db65c3d5) {
            self~$Bools$_internal_text_ae9b15f0d50e95164ef677febc57a5f9ae379b3acf721b694a482c77db65c3d5();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $Bools$_contract_load();
    
    ;; Handle operation
    int handled = self~$Bools$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $Bools$_contract_store(self);
}
