;;
;; Header files for TodoChild
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $HiFromParent$_load
(slice, ((slice))) $HiFromParent$_load(slice sc_0) inline;

;; $HiFromChild$_store
builder $HiFromChild$_store(builder build_0, (int, slice) v) inline;

;; $HiFromChild$_store_cell
cell $HiFromChild$_store_cell((int, slice) v) inline;

;; $TodoChild$_store
builder $TodoChild$_store(builder build_0, (slice, int) v) inline;

;; $TodoChild$_load
(slice, ((slice, int))) $TodoChild$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $TodoChild$init$_load
(slice, ((slice, int))) $TodoChild$init$_load(slice sc_0) inline;

;; $TodoChild$_contract_init
(slice, int) $TodoChild$_contract_init(slice $parent, int $seqno) impure inline_ref;

;; $TodoChild$_contract_load
(slice, int) $TodoChild$_contract_load() impure inline_ref;

;; $TodoChild$_contract_store
() $TodoChild$_contract_store((slice, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $TodoChild$_fun_forward
((slice, int), ()) $TodoChild$_fun_forward((slice, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $TodoChild$_fun_reply
((slice, int), ()) $TodoChild$_fun_reply((slice, int) $self, cell $body) impure inline;

;; $HiFromChild$_constructor_fromSeqno_greeting
((int, slice)) $HiFromChild$_constructor_fromSeqno_greeting(int fromSeqno, slice greeting) inline;
