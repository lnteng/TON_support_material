#pragma version >=0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "sample_TodoParent.headers.fc";
#include "sample_TodoParent.stdlib.fc";
#include "sample_TodoParent.constants.fc";
#include "sample_TodoParent.storage.fc";

;;
;; Contract TodoParent functions
;;

tuple $TodoParent$_contract_init() impure inline_ref {
    tuple $self = null();
    return $self;
}

;;
;; Receivers of a Contract TodoParent
;;

(tuple, ()) $TodoParent$_internal_text_7192597f30d04d7000d82d1d8bce3fe66125a9bfcf37eea2f1524cb5d89ac9da(tuple $self) impure inline {
    var $self = $self;
    int $i = 0;
    repeat (3) {
        $i = ($i + 1);
        var ($init'code, $init'data) = $TodoChild$_init_child(__tact_context_sys, $i);
        $global_send($SendParameters$_constructor_to_body_value_mode_code_data($global_contractAddress(($init'code, $init'data)), $HiFromParent$_store_cell($HiFromParent$_constructor_greeting(__gen_slice_string_8ea98ff8eeb70a5b382f84fe0efa5528ac623808eb1ce825d8d2c96d976048cb())), 100000000, 2, $init'code, $init'data));
    }
    return ($self, ());
}

((tuple), ()) $TodoParent$_internal_binary_HiFromChild(tuple $self, (int, slice) $msg) impure inline {
    var $self = $self;
    var ($msg'fromSeqno, $msg'greeting) = $msg;
    __tact_nop();
    __tact_nop();
    return ($self, ());
}

((tuple), ()) $TodoParent$_internal_binary_Deploy(tuple $self, (int) $deploy) impure inline {
    var $self = $self;
    var ($deploy'queryId) = $deploy;
    $self~$TodoParent$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return ($self, ());
}

;;
;; Get methods of a Contract TodoParent
;;

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmZCUETYs6gspLmyufqNwRsR2PQx2YGKHX5RsJmGmEAsQe";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract TodoParent
;;

(tuple, int) $TodoParent$_contract_router_internal(tuple self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive HiFromChild message
    if (op == 1237539370) {
        var msg = in_msg~$HiFromChild$_load();
        self~$TodoParent$_internal_binary_HiFromChild(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$TodoParent$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "greet 3" message
        if (text_op == 0x7192597f30d04d7000d82d1d8bce3fe66125a9bfcf37eea2f1524cb5d89ac9da) {
            self~$TodoParent$_internal_text_7192597f30d04d7000d82d1d8bce3fe66125a9bfcf37eea2f1524cb5d89ac9da();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $TodoParent$_contract_load();
    
    ;; Handle operation
    int handled = self~$TodoParent$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $TodoParent$_contract_store(self);
}
