;;
;; Type: TransferMessage
;; Header: 0xd3817806
;; TLB: transfer_message#d3817806 signature:fixed_bytes64 transfer:remainder<slice> = TransferMessage
;;

(slice, ((slice, slice))) $TransferMessage$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3548477446);
    var v'signature = sc_0~load_bits(512);
    var v'transfer = sc_0;
    return (sc_0, (v'signature, v'transfer));
}

;;
;; Type: Wallet
;;

builder $Wallet$_store(builder build_0, (int, int, int) v) inline {
    var (v'seqno, v'key, v'walletId) = v;
    build_0 = build_0.store_uint(v'seqno, 32);
    build_0 = build_0.store_uint(v'key, 256);
    build_0 = build_0.store_uint(v'walletId, 64);
    return build_0;
}

(slice, ((int, int, int))) $Wallet$_load(slice sc_0) inline {
    var v'seqno = sc_0~load_uint(32);
    var v'key = sc_0~load_uint(256);
    var v'walletId = sc_0~load_uint(64);
    return (sc_0, (v'seqno, v'key, v'walletId));
}

(slice, ((int, int))) $Wallet$init$_load(slice sc_0) inline {
    var v'key = sc_0~load_int(257);
    var v'walletId = sc_0~load_int(257);
    return (sc_0, (v'key, v'walletId));
}

(int, int, int) $Wallet$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$Wallet$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (int key, int walletId) = $sc~$Wallet$init$_load();
        $sc.end_parse();
        return $Wallet$_contract_init(key, walletId);
    }
}

() $Wallet$_contract_store((int, int, int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $Wallet$_store(b, v);
    set_data(b.end_cell());
}