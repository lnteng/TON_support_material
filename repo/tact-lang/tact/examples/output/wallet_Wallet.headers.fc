;;
;; Header files for Wallet
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, int, slice, int, cell) v) inline;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, int, slice, int, cell) v) inline;

;; $Transfer$_load
(slice, ((int, int, slice, int, cell))) $Transfer$_load(slice sc_0) inline;

;; $TransferMessage$_load
(slice, ((slice, (int, int, slice, int, cell)))) $TransferMessage$_load(slice sc_0) inline;

;; $Wallet$_store
builder $Wallet$_store(builder build_0, (int, int, int) v) inline;

;; $Wallet$_load
(slice, ((int, int, int))) $Wallet$_load(slice sc_0) inline;

;; $Wallet$init$_store
builder $Wallet$init$_store(builder build_0, (int, int) v) inline;

;; $Wallet$init$_load
(slice, ((int, int))) $Wallet$init$_load(slice sc_0) inline;

;; $Wallet$_contract_init
(int, int, int) $Wallet$_contract_init(int $key, int $walletId) impure inline_ref;

;; $Wallet$_contract_load
(int, int, int) $Wallet$_contract_load() impure inline_ref;

;; $Wallet$_contract_store
() $Wallet$_contract_store((int, int, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Wallet$_init_child
(cell, cell) $Wallet$_init_child(cell sys', int $key, int $walletId) inline_ref;

;; $Wallet$_fun_publicKey
((int, int, int), int) $Wallet$_fun_publicKey((int, int, int) $self) impure inline_ref;

;; $Wallet$_fun_walletId
((int, int, int), int) $Wallet$_fun_walletId((int, int, int) $self) impure inline_ref;

;; $Wallet$_fun_seqno
((int, int, int), int) $Wallet$_fun_seqno((int, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_value_to_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_mode_body(int value, slice to, int mode, cell body) inline;
