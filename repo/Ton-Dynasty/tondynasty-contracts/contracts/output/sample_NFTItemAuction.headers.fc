;;
;; Header files for NFTItemAuction
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, slice, slice, cell, int, slice) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, slice, slice, cell, int, slice) v) inline;

;; $AuctionInfo$_store
builder $AuctionInfo$_store(builder build_0, (int, int, int, int, int, int, slice, slice, slice, slice, slice) v) inline_ref;

;; $AuctionInfo$_load
(slice, ((int, int, int, int, int, int, slice, slice, slice, slice, slice))) $AuctionInfo$_load(slice sc_0) inline_ref;

;; $ReviseAuction$_load
(slice, (((int, int, int, int, int, int, slice, slice, slice, slice, slice)))) $ReviseAuction$_load(slice sc_0) inline;

;; $BuildNftAuction$_load
(slice, (((int, int, int, int, int, int, slice, slice, slice, slice, slice)))) $BuildNftAuction$_load(slice sc_0) inline;

;; $NFTItemAuction$_store
builder $NFTItemAuction$_store(builder build_0, (slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) v) inline;

;; $NFTItemAuction$_load
(slice, ((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int))) $NFTItemAuction$_load(slice sc_0) inline;

;; $AuctionInfo$_to_external
(int, int, int, int, int, int, slice, slice, slice, slice, slice) $AuctionInfo$_to_external(((int, int, int, int, int, int, slice, slice, slice, slice, slice)) v) inline;

;; $NFTItemAuction$init$_load
(slice, ((slice, slice))) $NFTItemAuction$init$_load(slice sc_0) inline;

;; $AuctionInfo$_constructor_bidIncreasePercentage_auctionBidPeriod_auctionPeriod_reservePrice_buyNowPrice_nftHighestBid_nftHighestBidder_nftSeller_whitelistedBuyer_nftRecipient_beneficiary
((int, int, int, int, int, int, slice, slice, slice, slice, slice)) $AuctionInfo$_constructor_bidIncreasePercentage_auctionBidPeriod_auctionPeriod_reservePrice_buyNowPrice_nftHighestBid_nftHighestBidder_nftSeller_whitelistedBuyer_nftRecipient_beneficiary(int bidIncreasePercentage, int auctionBidPeriod, int auctionPeriod, int reservePrice, int buyNowPrice, int nftHighestBid, slice nftHighestBidder, slice nftSeller, slice whitelistedBuyer, slice nftRecipient, slice beneficiary) inline;

;; $NFTItemAuction$_contract_init
(slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $NFTItemAuction$_contract_init(slice $nft_item, slice $seller) impure inline_ref;

;; $NFTItemAuction$_contract_load
(slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $NFTItemAuction$_contract_load() impure inline_ref;

;; $NFTItemAuction$_contract_store
() $NFTItemAuction$_contract_store((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body(slice to, int value, int bounce, int mode, cell body) inline;

;; $SendParameters$_constructor_to_value_mode_body_bounce
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body_bounce(slice to, int value, int mode, cell body, int bounce) inline;

;; $NFTItemAuction$_fun__send_winning_bid_amount
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), ()) $NFTItemAuction$_fun__send_winning_bid_amount((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self) impure inline;

;; $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload
((int, slice, slice, cell, int, slice)) $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload(int query_id, slice new_owner, slice response_destination, cell custom_payload, int forward_amount, slice forward_payload) inline;

;; $NFTItemAuction$_fun__transfer_nft
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), ()) $NFTItemAuction$_fun__transfer_nft((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self, slice $buyer) impure inline;

;; $NFTItemAuction$_fun__send_prev_bid_back
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), ()) $NFTItemAuction$_fun__send_prev_bid_back((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self, slice $bidder, int $bidValue) impure inline;

;; $NFTItemAuction$_fun__update_auction_bid_period
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), ()) $NFTItemAuction$_fun__update_auction_bid_period((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self) impure inline;

;; $NFTItemAuction$_fun__update_auction_end_time
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), ()) $NFTItemAuction$_fun__update_auction_end_time((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self) impure inline;

;; $NFTItemAuction$_fun__update_auction
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), ()) $NFTItemAuction$_fun__update_auction((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self) impure inline;

;; $NFTItemAuction$_fun__trade_bid
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), ()) $NFTItemAuction$_fun__trade_bid((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self, (int, slice, int, slice) $ctx, int $buyNowPrice) impure inline;

;; $NFTItemAuction$_fun__fraction_bid
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), ()) $NFTItemAuction$_fun__fraction_bid((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self, (int, slice, int, slice) $ctx) impure inline;

;; $NFTItemAuction$_fun__initialized_validate
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), ()) $NFTItemAuction$_fun__initialized_validate((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self) impure inline;

;; $NFTItemAuction$_fun__owner_validate
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), ()) $NFTItemAuction$_fun__owner_validate((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self, (int, slice, int, slice) $ctx) impure inline;

;; $NFTItemAuction$_fun__set_price_validate
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), ()) $NFTItemAuction$_fun__set_price_validate((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self, int $buyNowPrice, int $reservePrice) impure inline;

;; $NFTItemAuction$_fun_get_auction_info
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), (int, int, int, int, int, int, slice, slice, slice, slice, slice)) $NFTItemAuction$_fun_get_auction_info((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self) impure inline_ref;

;; $NFTItemAuction$_fun_get_is_initialized
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), int) $NFTItemAuction$_fun_get_is_initialized((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self) impure inline_ref;

;; $NFTItemAuction$_fun_get_auction_end
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), int) $NFTItemAuction$_fun_get_auction_end((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self) impure inline_ref;

;; $NFTItemAuction$_fun_get_auction_bid_period
((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int), int) $NFTItemAuction$_fun_get_auction_bid_period((slice, slice, (int, int, int, int, int, int, slice, slice, slice, slice, slice), int, int, int) $self) impure inline_ref;
