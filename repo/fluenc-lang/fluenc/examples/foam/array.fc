namespace Array
{
	function select((any item, ...items), function (any) transformer)
	{
		return transformer(item) -> select(...items, transformer);
	}

	function select(any item, function (any) transformer)
	{
		return transformer(item);
	}

	function aggregate((any item, ...items), any product, function (any, any) operation)
	{
		return tail aggregate(...items, operation(product, item), operation);
	}

	function aggregate(any item, any product, function (any, any) operation)
	{
		return operation(product, item);
	}

	function size((any item, ...items), int i)
	{
		return tail size(...items, i + 1);
	}

	function size(any item, int i)
	{
		return i + 1;
	}

    function elementAt(any item, int index, int i)
    {
        if (i == index)
        {
            return item;
        }

        return nothing;
    }

    function elementAt((any item, ...items), int index, int i)
    {
        if (i == index)
        {
            return item;
        }

        return tail elementAt(...items, index, i + 1);
    }

    function set((int value, ...values), int index, int result, int i)
    {
        if (i == index)
        {
            return result -> set(...values, index, result, i + 1);
        }

        return value -> set(...values, index, result, i + 1);
    }

    function set(int value, int index, int result, int i)
    {
        if (i == index)
        {
            return result;
        }

        return value;
    }
}
