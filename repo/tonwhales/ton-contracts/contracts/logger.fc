() recv_internal(slice in_msg) impure {
  var ds = get_data().begin_parse();
  var seqno = ds~load_uint(32);
  var data = ds~load_bits(512);
  var received = ds~load_dict();
  set_data(
    begin_cell()
      .store_uint(seqno + 1, 32)
      .store_slice(data)
      .store_dict(received)
    .end_cell()
  );
}

() recv_external(slice in_msg) impure {
  var hash = slice_hash(in_msg);
  var ds = get_data().begin_parse();
  var seqno = ds~load_uint(32);
  var data = ds~load_bits(512);
  var received = ds~load_dict();

  ;; Check for duplicates
  (slice value, var found) = received.udict_get?(256, hash);
  if (found) {
    throw(0);
  }
  received~udict_set_builder(256, hash, begin_cell().store_uint(1,1));

  ;; Accept message
  accept_message();

  set_data(
    begin_cell()
      .store_uint(seqno + 1, 32)
      .store_slice(data)
      .store_dict(received)
    .end_cell()
  );
}

int seqno() method_id {
  return get_data().begin_parse().preload_uint(32);
}