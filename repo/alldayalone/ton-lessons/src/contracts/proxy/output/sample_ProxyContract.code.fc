#pragma version >=0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "sample_ProxyContract.headers.fc";
#include "sample_ProxyContract.stdlib.fc";
#include "sample_ProxyContract.storage.fc";

;;
;; Contract ProxyContract functions
;;

(slice) $ProxyContract$_contract_init(slice $owner) impure inline_ref {
    var (($self'owner)) = (null());
    $self'owner = $owner;
    return ($self'owner);
}

((slice), slice) $ProxyContract$_fun_owner((slice) $self) impure inline_ref {
    var (($self'owner)) = $self;
    return (($self'owner), $self'owner);
}

;;
;; Receivers of a Contract ProxyContract
;;

((slice), ()) $ProxyContract$_internal_any((slice) $self, slice $msg) impure inline {
    var ($self'owner) = $self;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    if (( ~ __tact_slice_eq_bits($self'owner, $ctx'sender) )) {
        slice $to = $self'owner;
        cell $res = $Response$_store_cell($Response$_constructor_sender_msg($ctx'sender, $msg));
        $global_send($SendParameters$_constructor_to_value_mode_bounce_body($to, 0, (64 + 2), true, $res));
    }
    return (($self'owner), ());
}

(((slice)), ()) $ProxyContract$_internal_binary_Deploy((slice) $self, (int) $deploy) impure inline {
    var ($self'owner) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'owner)~$ProxyContract$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'owner), ());
}

;;
;; Get methods of a Contract ProxyContract
;;

_ %owner() method_id(83229) {
    var self = $ProxyContract$_contract_load();
    var res = self~$ProxyContract$_fun_owner();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmSS5oMqs6W7xnswCCRxcCJCpxK1cE1csufjZt3QmxmgFy";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract ProxyContract
;;

((slice), int) $ProxyContract$_contract_router_internal((slice) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$ProxyContract$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Receiver fallback
    self~$ProxyContract$_internal_any(in_msg);
    return (self, true);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $ProxyContract$_contract_load();
    
    ;; Handle operation
    int handled = self~$ProxyContract$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $ProxyContract$_contract_store(self);
}
