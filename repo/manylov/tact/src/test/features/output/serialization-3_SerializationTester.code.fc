#pragma version >=0.4.2;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

slice __tact_verify_address(slice address) inline {
    throw_unless(136, address.slice_bits() == 267);
    var h = address.preload_uint(11);
    throw_unless(136, (h == 1024) | (h == 1279));
    throw_unless(137, h == 1024);
    return address;
}

global (int, slice, int, slice) __tact_context;
global slice __tact_context_sender;
global cell __tact_context_sys;

(slice, ((int, int, cell, slice, builder, slice))) __gen_read_Update(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 2217298645);
    var v'a = sc_0~load_int(257);
    var v'b = sc_0~load_int(1);
    var v'c = sc_0~load_ref();
    var v'd = sc_0~load_ref().begin_parse();
    var v'e = begin_cell().store_slice(sc_0~load_ref().begin_parse());
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'f = sc_1~load_ref().begin_parse();
    return (sc_0, (v'a, v'b, v'c, v'd, v'e, v'f));
}

builder __gen_write_SerializationTester(builder build_0, (int, int, cell, slice, builder, slice) v) inline {
    var (v'a, v'b, v'c, v'd, v'e, v'f) = v;
    build_0 = build_0.store_int(v'a, 257);
    build_0 = build_0.store_int(v'b, 1);
    build_0 = build_0.store_ref(v'c);
    build_0 = build_0.store_ref(begin_cell().store_slice(v'd).end_cell());
    var build_1 = begin_cell();
    build_1 = build_1.store_ref(begin_cell().store_slice(v'e.end_cell().begin_parse()).end_cell());
    build_1 = build_1.store_ref(begin_cell().store_slice(v'f).end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((int, int, cell, slice, builder, slice))) __gen_read_SerializationTester(slice sc_0) inline {
    var v'a = sc_0~load_int(257);
    var v'b = sc_0~load_int(1);
    var v'c = sc_0~load_ref();
    var v'd = sc_0~load_ref().begin_parse();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'e = begin_cell().store_slice(sc_1~load_ref().begin_parse());
    var v'f = sc_1~load_ref().begin_parse();
    return (sc_0, (v'a, v'b, v'c, v'd, v'e, v'f));
}

(slice, ((int, int, cell, slice, builder, slice))) __gen_read_$init$SerializationTester(slice sc_0) inline_ref {
    var v'a = sc_0~load_int(257);
    var v'b = sc_0~load_int(1);
    var v'c = sc_0~load_ref();
    var v'd = sc_0~load_ref().begin_parse();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'e = begin_cell().store_slice(sc_1~load_ref().begin_parse());
    var v'f = sc_1~load_ref().begin_parse();
    return (sc_0, (v'a, v'b, v'c, v'd, v'e, v'f));
}

(int, int, cell, slice, builder, slice) $__gen_SerializationTester_init(int $a, int $b, cell $c, slice $d, builder $e, slice $f) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = (null(), null(), null(), null(), null(), null());
    $self'a = $a;
    $self'b = $b;
    $self'c = $c;
    $self'd = $d;
    $self'e = $e;
    $self'f = $f;
    return ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f);
}

(int, int, cell, slice, builder, slice) __gen_load_SerializationTester() impure inline {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~__gen_read_SerializationTester();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (int a, int b, cell c, slice d, builder e, slice f) = $sc~__gen_read_$init$SerializationTester();
        $sc.end_parse();
        return $__gen_SerializationTester_init(a, b, c, d, e, f);
    }
}

() __gen_store_SerializationTester((int, int, cell, slice, builder, slice) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = __gen_write_SerializationTester(b, v);
    set_data(b.end_cell());
}

int $__gen_SerializationTester_getA((int, int, cell, slice, builder, slice) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'a;
}

_ $__gen_get_getA() method_id(123932) {
    var self = __gen_load_SerializationTester();
    var res = $__gen_SerializationTester_getA(self);
    return res;
}

int $__gen_SerializationTester_getB((int, int, cell, slice, builder, slice) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'b;
}

_ $__gen_get_getB() method_id(119935) {
    var self = __gen_load_SerializationTester();
    var res = $__gen_SerializationTester_getB(self);
    return res;
}

cell $__gen_SerializationTester_getC((int, int, cell, slice, builder, slice) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'c;
}

_ $__gen_get_getC() method_id(115806) {
    var self = __gen_load_SerializationTester();
    var res = $__gen_SerializationTester_getC(self);
    return res;
}

slice $__gen_SerializationTester_getD((int, int, cell, slice, builder, slice) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'd;
}

_ $__gen_get_getD() method_id(111801) {
    var self = __gen_load_SerializationTester();
    var res = $__gen_SerializationTester_getD(self);
    return res;
}

builder $__gen_SerializationTester_getE((int, int, cell, slice, builder, slice) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'e;
}

_ $__gen_get_getE() method_id(107672) {
    var self = __gen_load_SerializationTester();
    var res = $__gen_SerializationTester_getE(self);
    return res;
}

slice $__gen_SerializationTester_getF((int, int, cell, slice, builder, slice) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'f;
}

_ $__gen_get_getF() method_id(103675) {
    var self = __gen_load_SerializationTester();
    var res = $__gen_SerializationTester_getF(self);
    return res;
}

(((int, int, cell, slice, builder, slice)), ()) $__gen_SerializationTester_receive((int, int, cell, slice, builder, slice) $self) impure inline {
    var ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), ());
}

(((int, int, cell, slice, builder, slice)), ()) $__gen_SerializationTester_receive_Update((int, int, cell, slice, builder, slice) $self, (int, int, cell, slice, builder, slice) $msg) impure inline {
    var ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f) = $self;
    var ($msg'a, $msg'b, $msg'c, $msg'd, $msg'e, $msg'f) = $msg;
    $self'a = $msg'a;
    $self'b = $msg'b;
    $self'c = $msg'c;
    $self'd = $msg'd;
    $self'e = $msg'e;
    $self'f = $msg'f;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), ());
}

((int, int, cell, slice, builder, slice), int) __gen_router_SerializationTester((int, int, cell, slice, builder, slice) self, int msg_bounced, slice in_msg) impure inline_ref {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~$__gen_SerializationTester_receive();
        return (self, true);
    }
    
    ;; Receive Update message
    if (op == 2217298645) {
        var msg = in_msg~__gen_read_Update();
        self~$__gen_SerializationTester_receive_Update(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = __gen_load_SerializationTester();
    
    ;; Handle operation
    int handled = self~__gen_router_SerializationTester(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    __gen_store_SerializationTester(self);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.debug.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() {
    return "ipfs://QmTiqgTwJoES2vBmwGpJ7328ng4mK3c9eW9ehaAzHK6qq2";
}

_ lazy_deployment_completed() {
    return get_data().begin_parse().load_int(1);
}
