#pragma version >=0.4.2;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

slice __tact_verify_address(slice address) inline {
    throw_unless(136, address.slice_bits() == 267);
    var h = address.preload_uint(11);
    throw_unless(136, (h == 1024) | (h == 1279));

    return address;
}

(slice, slice) __tact_load_address_opt(slice cs) inline {
    slice raw = cs~load_msg_addr();
    if (raw.preload_uint(2) != 0) {
        return (cs, __tact_verify_address(raw));
    } else {
        return (cs, null());
    }
}

builder __tact_store_address(builder b, slice address) inline {
    return b.store_slice(__tact_verify_address(address));
}

builder __tact_store_address_opt(builder b, slice address) inline {
    if (null?(address)) {
        b = b.store_uint(0, 2);
        return b;
    } else {
        return __tact_store_address(b, address);
    }
}

forall X -> X __tact_not_null(X x) inline { throw_if(128, null?(x)); return x; }

global (int, slice, int, slice) __tact_context;
global slice __tact_context_sender;
global cell __tact_context_sys;

forall X0, X1, X2, X3, X4 -> tuple __tact_tuple_create_5((X0, X1, X2, X3, X4) v) asm "5 TUPLE";

forall X0, X1, X2, X3, X4 -> (X0, X1, X2, X3, X4) __tact_tuple_destroy_5(tuple v) asm "5 UNTUPLE";

builder __gen_write_SomeGenericStruct(builder build_0, (int, int, int, int, int) v) inline {
    var (v'value1, v'value2, v'value3, v'value4, v'value5) = v;
    build_0 = build_0.store_int(v'value1, 257);
    build_0 = build_0.store_int(v'value2, 257);
    build_0 = build_0.store_int(v'value3, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'value4, 257);
    build_1 = build_1.store_int(v'value5, 257);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((int, int, int, int, int))) __gen_read_SomeGenericStruct(slice sc_0) inline {
    var v'value1 = sc_0~load_int(257);
    var v'value2 = sc_0~load_int(257);
    var v'value3 = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'value4 = sc_1~load_int(257);
    var v'value5 = sc_1~load_int(257);
    return (sc_0, (v'value1, v'value2, v'value3, v'value4, v'value5));
}

((int, int, int, int, int)) __gen_SomeGenericStruct_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'value1, int vvv'value2, int vvv'value3, int vvv'value4, int vvv'value5) = __tact_tuple_destroy_5(v);
    return (vvv'value1, vvv'value2, vvv'value3, vvv'value4, vvv'value5);
}

builder __gen_write_StructWithOptionals(builder build_0, (int, int, cell, slice, tuple) v) inline {
    var (v'a, v'b, v'c, v'd, v'e) = v;
    build_0 = ~ null?(v'a) ? build_0.store_int(true, 1).store_int(v'a, 257) : build_0.store_int(false, 1);
    build_0 = ~ null?(v'b) ? build_0.store_int(true, 1).store_int(v'b, 1) : build_0.store_int(false, 1);
    build_0 = ~ null?(v'c) ? build_0.store_int(true, 1).store_ref(v'c) : build_0.store_int(false, 1);
    build_0 = __tact_store_address_opt(build_0, v'd);
    var build_1 = begin_cell();
    build_1 = ~ null?(v'e) ? build_1.store_int(true, 1).__gen_write_SomeGenericStruct( __gen_SomeGenericStruct_not_null(v'e)) : build_1.store_int(false, 1);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

tuple __gen_SomeGenericStruct_as_optional(((int, int, int, int, int)) v) inline {
    var (v'value1, v'value2, v'value3, v'value4, v'value5) = v;
    return __tact_tuple_create_5(v'value1, v'value2, v'value3, v'value4, v'value5);
}

(slice, ((int, int, cell, slice, tuple))) __gen_read_StructWithOptionals(slice sc_0) inline {
    var v'a = sc_0~load_int(1) ? sc_0~load_int(257) : null();
    var v'b = sc_0~load_int(1) ? sc_0~load_int(1) : null();
    var v'c = sc_0~load_int(1) ? sc_0~load_ref() : null();
    var v'd = sc_0~__tact_load_address_opt();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'e = sc_1~load_int(1) ? __gen_SomeGenericStruct_as_optional(sc_1~__gen_read_SomeGenericStruct()) : null();
    return (sc_0, (v'a, v'b, v'c, v'd, v'e));
}

tuple __gen_StructWithOptionals_as_optional(((int, int, cell, slice, tuple)) v) inline {
    var (v'a, v'b, v'c, v'd, v'e) = v;
    return __tact_tuple_create_5(v'a, v'b, v'c, v'd, v'e);
}

(slice, ((int, int, cell, slice, tuple, tuple))) __gen_read_Update(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 357891325);
    var v'a = sc_0~load_int(1) ? sc_0~load_int(257) : null();
    var v'b = sc_0~load_int(1) ? sc_0~load_int(1) : null();
    var v'c = sc_0~load_int(1) ? sc_0~load_ref() : null();
    var v'd = sc_0~__tact_load_address_opt();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'e = sc_1~load_int(1) ? __gen_SomeGenericStruct_as_optional(sc_1~__gen_read_SomeGenericStruct()) : null();
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'f = sc_2~load_int(1) ? __gen_StructWithOptionals_as_optional(sc_2~__gen_read_StructWithOptionals()) : null();
    return (sc_0, (v'a, v'b, v'c, v'd, v'e, v'f));
}

((int, int, cell, slice, tuple)) __gen_StructWithOptionals_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'a, int vvv'b, cell vvv'c, slice vvv'd, tuple vvv'e) = __tact_tuple_destroy_5(v);
    return (vvv'a, vvv'b, vvv'c, vvv'd, vvv'e);
}

builder __gen_write_ContractWithOptionals(builder build_0, (int, int, cell, slice, tuple, tuple) v) inline {
    var (v'a, v'b, v'c, v'd, v'e, v'f) = v;
    build_0 = ~ null?(v'a) ? build_0.store_int(true, 1).store_int(v'a, 257) : build_0.store_int(false, 1);
    build_0 = ~ null?(v'b) ? build_0.store_int(true, 1).store_int(v'b, 1) : build_0.store_int(false, 1);
    build_0 = ~ null?(v'c) ? build_0.store_int(true, 1).store_ref(v'c) : build_0.store_int(false, 1);
    build_0 = __tact_store_address_opt(build_0, v'd);
    var build_1 = begin_cell();
    build_1 = ~ null?(v'e) ? build_1.store_int(true, 1).__gen_write_SomeGenericStruct( __gen_SomeGenericStruct_not_null(v'e)) : build_1.store_int(false, 1);
    var build_2 = begin_cell();
    build_2 = ~ null?(v'f) ? build_2.store_int(true, 1).__gen_write_StructWithOptionals( __gen_StructWithOptionals_not_null(v'f)) : build_2.store_int(false, 1);
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((int, int, cell, slice, tuple, tuple))) __gen_read_ContractWithOptionals(slice sc_0) inline {
    var v'a = sc_0~load_int(1) ? sc_0~load_int(257) : null();
    var v'b = sc_0~load_int(1) ? sc_0~load_int(1) : null();
    var v'c = sc_0~load_int(1) ? sc_0~load_ref() : null();
    var v'd = sc_0~__tact_load_address_opt();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'e = sc_1~load_int(1) ? __gen_SomeGenericStruct_as_optional(sc_1~__gen_read_SomeGenericStruct()) : null();
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'f = sc_2~load_int(1) ? __gen_StructWithOptionals_as_optional(sc_2~__gen_read_StructWithOptionals()) : null();
    return (sc_0, (v'a, v'b, v'c, v'd, v'e, v'f));
}

tuple __gen_SomeGenericStruct_to_tuple(((int, int, int, int, int)) v) inline {
    var (v'value1, v'value2, v'value3, v'value4, v'value5) = v;
    return __tact_tuple_create_5(v'value1, v'value2, v'value3, v'value4, v'value5);
}

tuple __gen_SomeGenericStruct_opt_to_tuple(tuple v) inline {
    if (null?(v)) { return null(); } 
    return __gen_SomeGenericStruct_to_tuple(__gen_SomeGenericStruct_not_null(v)); 
}

(int, int, int, int, int) __gen_SomeGenericStruct_to_external(((int, int, int, int, int)) v) inline {
    var (v'value1, v'value2, v'value3, v'value4, v'value5) = v; 
    return (v'value1, v'value2, v'value3, v'value4, v'value5);
}

tuple __gen_SomeGenericStruct_opt_to_external(tuple v) inline {
    var loaded = __gen_SomeGenericStruct_opt_to_tuple(v);
    if (null?(loaded)) {
        return null();
    } else {
        return (loaded);
    }
}

tuple __gen_StructWithOptionals_to_tuple(((int, int, cell, slice, tuple)) v) inline {
    var (v'a, v'b, v'c, v'd, v'e) = v;
    return __tact_tuple_create_5(v'a, v'b, v'c, v'd, __gen_SomeGenericStruct_opt_to_tuple(v'e));
}

tuple __gen_StructWithOptionals_opt_to_tuple(tuple v) inline {
    if (null?(v)) { return null(); } 
    return __gen_StructWithOptionals_to_tuple(__gen_StructWithOptionals_not_null(v)); 
}

(int, int, cell, slice, tuple) __gen_StructWithOptionals_to_external(((int, int, cell, slice, tuple)) v) inline {
    var (v'a, v'b, v'c, v'd, v'e) = v; 
    return (v'a, v'b, v'c, v'd, __gen_SomeGenericStruct_opt_to_tuple(v'e));
}

tuple __gen_StructWithOptionals_opt_to_external(tuple v) inline {
    var loaded = __gen_StructWithOptionals_opt_to_tuple(v);
    if (null?(loaded)) {
        return null();
    } else {
        return (loaded);
    }
}

(slice, ((int, int, cell, slice, tuple, tuple))) __gen_read_$init$ContractWithOptionals(slice sc_0) inline_ref {
    var v'a = sc_0~load_int(1) ? sc_0~load_int(257) : null();
    var v'b = sc_0~load_int(1) ? sc_0~load_int(1) : null();
    var v'c = sc_0~load_int(1) ? sc_0~load_ref() : null();
    var v'd = sc_0~__tact_load_address_opt();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'e = sc_1~load_int(1) ? __gen_SomeGenericStruct_as_optional(sc_1~__gen_read_SomeGenericStruct()) : null();
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'f = sc_2~load_int(1) ? __gen_StructWithOptionals_as_optional(sc_2~__gen_read_StructWithOptionals()) : null();
    return (sc_0, (v'a, v'b, v'c, v'd, v'e, v'f));
}

(int, int, cell, slice, tuple, tuple) $__gen_ContractWithOptionals_init(int $a, int $b, cell $c, slice $d, tuple $e, tuple $f) impure inline_ref {
    var ($e) = $e;
    var ($f) = $f;
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = (null(), null(), null(), null(), null(), null());
    $self'a = $a;
    $self'b = $b;
    $self'c = $c;
    $self'd = $d;
    $self'e = $e;
    $self'f = $f;
    return ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f);
}

(int, int, cell, slice, tuple, tuple) __gen_load_ContractWithOptionals() impure inline {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~__gen_read_ContractWithOptionals();
    } else {
        (int a, int b, cell c, slice d, tuple e, tuple f) = $sc~__gen_read_$init$ContractWithOptionals();
        $sc.end_parse();
        return $__gen_ContractWithOptionals_init(a, b, c, d, e, f);
    }
}

() __gen_store_ContractWithOptionals((int, int, cell, slice, tuple, tuple) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = __gen_write_ContractWithOptionals(b, v);
    set_data(b.end_cell());
}

int $__gen_ContractWithOptionals_isNotNullA((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (~ null?($self'a));
}

_ $__gen_get_isNotNullA() method_id(74449) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_isNotNullA(self);
    return res;
}

int $__gen_ContractWithOptionals_isNotNullB((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (~ null?($self'b));
}

_ $__gen_get_isNotNullB() method_id(70322) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_isNotNullB(self);
    return res;
}

int $__gen_ContractWithOptionals_isNotNullC((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (~ null?($self'c));
}

_ $__gen_get_isNotNullC() method_id(66195) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_isNotNullC(self);
    return res;
}

int $__gen_ContractWithOptionals_isNotNullD((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (~ null?($self'd));
}

_ $__gen_get_isNotNullD() method_id(94836) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_isNotNullD(self);
    return res;
}

int $__gen_ContractWithOptionals_isNotNullE((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (~ null?($self'e));
}

_ $__gen_get_isNotNullE() method_id(90709) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_isNotNullE(self);
    return res;
}

int $__gen_ContractWithOptionals_isNotNullF((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return (~ null?($self'f));
}

_ $__gen_get_isNotNullF() method_id(86582) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_isNotNullF(self);
    return res;
}

int $__gen_ContractWithOptionals_nullA((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'a;
}

_ $__gen_get_nullA() method_id(119020) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_nullA(self);
    return res;
}

int $__gen_ContractWithOptionals_nullB((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'b;
}

_ $__gen_get_nullB() method_id(123023) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_nullB(self);
    return res;
}

cell $__gen_ContractWithOptionals_nullC((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'c;
}

_ $__gen_get_nullC() method_id(127150) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_nullC(self);
    return res;
}

slice $__gen_ContractWithOptionals_nullD((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'd;
}

_ $__gen_get_nullD() method_id(98377) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_nullD(self);
    return res;
}

tuple $__gen_ContractWithOptionals_nullE((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'e;
}

_ $__gen_get_nullE() method_id(102504) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_nullE(self);
    return __gen_SomeGenericStruct_opt_to_external(res);
}

tuple $__gen_ContractWithOptionals_nullF((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return $self'f;
}

_ $__gen_get_nullF() method_id(106507) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_nullF(self);
    return __gen_StructWithOptionals_opt_to_external(res);
}

int $__gen_ContractWithOptionals_notNullA((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return __tact_not_null($self'a);
}

_ $__gen_get_notNullA() method_id(110911) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_notNullA(self);
    return res;
}

int $__gen_ContractWithOptionals_notNullB((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return __tact_not_null($self'b);
}

_ $__gen_get_notNullB() method_id(98652) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_notNullB(self);
    return res;
}

cell $__gen_ContractWithOptionals_notNullC((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return __tact_not_null($self'c);
}

_ $__gen_get_notNullC() method_id(102781) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_notNullC(self);
    return res;
}

slice $__gen_ContractWithOptionals_notNullD((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return __tact_not_null($self'd);
}

_ $__gen_get_notNullD() method_id(123290) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_notNullD(self);
    return res;
}

(int, int, int, int, int) $__gen_ContractWithOptionals_notNullE((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return __gen_SomeGenericStruct_not_null($self'e);
}

_ $__gen_get_notNullE() method_id(127419) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_notNullE(self);
    return __gen_SomeGenericStruct_to_external(res);
}

(int, int, cell, slice, tuple) $__gen_ContractWithOptionals_notNullF((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    return __gen_StructWithOptionals_not_null($self'f);
}

_ $__gen_get_notNullF() method_id(115160) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_notNullF(self);
    return __gen_StructWithOptionals_to_external(res);
}

((int, int, int, int, int)) __gen_constructor_SomeGenericStruct$value1_value2_value3_value4_value5(int value1, int value2, int value3, int value4, int value5) inline {
    return (value1, value2, value3, value4, value5);
}

(int, int, int, int, int) $__gen_ContractWithOptionals_testVariables((int, int, cell, slice, tuple, tuple) $self) impure inline_ref {
    var (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f)) = $self;
    tuple $a = __gen_SomeGenericStruct_as_optional(__gen_constructor_SomeGenericStruct$value1_value2_value3_value4_value5(1, 2, 3, 4, 5));
    return __gen_SomeGenericStruct_not_null($a);
}

_ $__gen_get_testVariables() method_id(87190) {
    var self = __gen_load_ContractWithOptionals();
    var res = $__gen_ContractWithOptionals_testVariables(self);
    return __gen_SomeGenericStruct_to_external(res);
}

(((int, int, cell, slice, tuple, tuple)), ()) $__gen_ContractWithOptionals_receive((int, int, cell, slice, tuple, tuple) $self) impure inline {
    var ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f) = $self;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), ());
}

(((int, int, cell, slice, tuple, tuple)), ()) $__gen_ContractWithOptionals_receive_Update((int, int, cell, slice, tuple, tuple) $self, (int, int, cell, slice, tuple, tuple) $msg) impure inline {
    var ($self'a, $self'b, $self'c, $self'd, $self'e, $self'f) = $self;
    var ($msg'a, $msg'b, $msg'c, $msg'd, $msg'e, $msg'f) = $msg;
    $self'a = $msg'a;
    $self'b = $msg'b;
    $self'c = $msg'c;
    $self'd = $msg'd;
    $self'e = $msg'e;
    $self'f = $msg'f;
    return (($self'a, $self'b, $self'c, $self'd, $self'e, $self'f), ());
}

((int, int, cell, slice, tuple, tuple), int) __gen_router_ContractWithOptionals((int, int, cell, slice, tuple, tuple) self, int msg_bounced, slice in_msg) impure inline_ref {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~$__gen_ContractWithOptionals_receive();
        return (self, true);
    }
    
    ;; Receive Update message
    if (op == 357891325) {
        var msg = in_msg~__gen_read_Update();
        self~$__gen_ContractWithOptionals_receive_Update(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = __gen_load_ContractWithOptionals();
    
    ;; Handle operation
    int handled = self~__gen_router_ContractWithOptionals(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    __gen_store_ContractWithOptionals(self);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.debug.v0"H >> 128,
        "org.ton.chain.any.v0"H >> 128
    );
}

_ get_abi_ipfs() {
    return "ipfs://QmbE8GEUrQHcB95brTPbUkPa1BnUb5M7ELTMTVYdnXbhbs";
}

_ lazy_deployment_completed() {
    return get_data().begin_parse().load_int(1);
}
