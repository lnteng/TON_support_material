;;
;; Header files for Bank
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $CreditAgents$_store
builder $CreditAgents$_store(builder build_0, (slice, slice) v) inline;

;; $CreditAgents$_store_cell
cell $CreditAgents$_store_cell((slice, slice) v) inline;

;; $CreditService$_store
builder $CreditService$_store(builder build_0, (slice) v) inline;

;; $CreditService$_store_cell
cell $CreditService$_store_cell((slice) v) inline;

;; $CreditData$_store
builder $CreditData$_store(builder build_0, (int, int, int, cell) v) inline;

;; $CreditData$_load
(slice, ((int, int, int, cell))) $CreditData$_load(slice sc_0) inline;

;; $OwnershipAssignedWithCredit$_load
(slice, ((int, slice, (int, int, int, cell)))) $OwnershipAssignedWithCredit$_load(slice sc_0) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, slice, slice, cell, int, slice) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, slice, slice, cell, int, slice) v) inline;

;; $AccountIssue$_load
(slice, ((int, int, int, slice, slice))) $AccountIssue$_load(slice sc_0) inline;

;; $AccountProportion$_store
builder $AccountProportion$_store(builder build_0, (int) v) inline;

;; $AccountProportion$_store_cell
cell $AccountProportion$_store_cell((int) v) inline;

;; $CreateAccount$_load
(slice, (tuple)) $CreateAccount$_load(slice sc_0) inline;

;; $BankIssueCredit$_store
builder $BankIssueCredit$_store(builder build_0, (int, slice, int) v) inline;

;; $BankIssueCredit$_store_cell
cell $BankIssueCredit$_store_cell((int, slice, int) v) inline;

;; $GetNft$_load
(slice, ((slice, int, slice))) $GetNft$_load(slice sc_0) inline;

;; $SetProportion$_load
(slice, ((slice, int))) $SetProportion$_load(slice sc_0) inline;

;; $Payout$_load
(slice, ((slice))) $Payout$_load(slice sc_0) inline;

;; $Income$_load
(slice, ((int))) $Income$_load(slice sc_0) inline;

;; $Settings$_load
(slice, ((slice, int))) $Settings$_load(slice sc_0) inline;

;; $Destroy$_load
(slice, (tuple)) $Destroy$_load(slice sc_0) inline;

;; $Bank$_store
builder $Bank$_store(builder build_0, (slice, slice, int) v) inline;

;; $Bank$_load
(slice, ((slice, slice, int))) $Bank$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $CreditData$_from_tuple
(int, int, int, cell) $CreditData$_from_tuple(tuple v) inline;

;; $Account$init$_store
builder $Account$init$_store(builder build_0, (slice, slice) v) inline;

;; $Credit$init$_store
builder $Credit$init$_store(builder build_0, ((int, int, int, cell)) v) inline;

;; $Bank$init$_load
(slice, ((slice, slice))) $Bank$init$_load(slice sc_0) inline;

;; $Bank$_contract_init
(slice, slice, int) $Bank$_contract_init(slice $admin, slice $bot) impure inline_ref;

;; $Bank$_contract_load
(slice, slice, int) $Bank$_contract_load() impure inline_ref;

;; $Bank$_contract_store
() $Bank$_contract_store((slice, slice, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $Account$_init_child
(cell, cell) $Account$_init_child(cell sys', slice $owner, slice $bank) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $Credit$_init_child
(cell, cell) $Credit$_init_child(cell sys', (int, int, int, cell) $data) inline_ref;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body(slice to, int value, int bounce, int mode, cell body) inline;

;; $Transfer$_constructor_queryId_newOwner_responseDestination_customPayload_forwardAmount_forwardPayload
((int, slice, slice, cell, int, slice)) $Transfer$_constructor_queryId_newOwner_responseDestination_customPayload_forwardAmount_forwardPayload(int queryId, slice newOwner, slice responseDestination, cell customPayload, int forwardAmount, slice forwardPayload) inline;

;; $Bank$_fun_account
((slice, slice, int), slice) $Bank$_fun_account((slice, slice, int) $self, slice $owner) impure inline_ref;

;; $Bank$_fun_credit
((slice, slice, int), slice) $Bank$_fun_credit((slice, slice, int) $self, (int, int, int, cell) $data) impure inline_ref;

;; $Bank$_fun_balance
((slice, slice, int), int) $Bank$_fun_balance((slice, slice, int) $self) impure inline_ref;

;; $Bank$_fun_forward
((slice, slice, int), ()) $Bank$_fun_forward((slice, slice, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Bank$_fun_notify
((slice, slice, int), ()) $Bank$_fun_notify((slice, slice, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_code_data_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_code_data_body(slice to, int value, int mode, cell code, cell data, cell body) inline;

;; $CreditAgents$_constructor_borrower_lender
((slice, slice)) $CreditAgents$_constructor_borrower_lender(slice borrower, slice lender) inline;

;; $CreditService$_constructor_pawn
((slice)) $CreditService$_constructor_pawn(slice pawn) inline;

;; $CreditData$_constructor_size_interest_duration_addresses
((int, int, int, cell)) $CreditData$_constructor_size_interest_duration_addresses(int size, int interest, int duration, cell addresses) inline;

;; $BankIssueCredit$_constructor_size_address_premium
((int, slice, int)) $BankIssueCredit$_constructor_size_address_premium(int size, slice address, int premium) inline;

;; $AccountProportion$_constructor_proportion
((int)) $AccountProportion$_constructor_proportion(int proportion) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
